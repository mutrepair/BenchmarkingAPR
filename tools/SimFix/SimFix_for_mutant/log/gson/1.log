=================================================
Project : gson_1	start : 22/12/05 11:19
Current failed test : com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization | 22/12/05 11:19
Mon Dec 05 11:19:22 CST 2022 com.google.gson.GsonBuilder,512
Failed time : 22/12/05 11:19
=================================================
Project : gson_1	start : 22/12/05 11:19
Current failed test : com.google.gson.functional.VersioningTest::testIgnoreLaterVersionClassSerialization | 22/12/05 11:19
Mon Dec 05 11:19:35 CST 2022 com.google.gson.GsonBuilder,512
Failed time : 22/12/05 11:19
=================================================
Project : gson_1	start : 22/12/05 11:19
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 11:19
Mon Dec 05 11:19:52 CST 2022 com.google.gson.stream.JsonWriter,503
Failed time : 22/12/05 11:20
=================================================
Project : gson_1	start : 22/12/05 11:20
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 11:20
Mon Dec 05 11:20:15 CST 2022 com.google.gson.stream.JsonWriter,503
Failed time : 22/12/05 11:20
=================================================
Project : gson_1	start : 22/12/05 11:20
Current failed test : com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull | 22/12/05 11:20
Mon Dec 05 11:20:43 CST 2022 com.google.gson.JsonSerializationVisitor,186
Failed time : 22/12/05 11:20
=================================================
Project : gson_1	start : 22/12/05 11:20
Current failed test : com.google.gson.functional.CustomSerializerTest::testSerializerReturnsNull | 22/12/05 11:20
Mon Dec 05 11:20:49 CST 2022 com.google.gson.JsonSerializationVisitor,186
Failed time : 22/12/05 11:20
=================================================
Project : gson_1	start : 22/12/05 11:20
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 11:20
Mon Dec 05 11:20:58 CST 2022 com.google.gson.stream.JsonWriter,276
Failed time : 22/12/05 11:20
=================================================
Project : gson_1	start : 22/12/05 11:20
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 11:20
Mon Dec 05 11:21:06 CST 2022 com.google.gson.stream.JsonWriter,276
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testInvalidInstantiation | 22/12/05 11:21
Mon Dec 05 11:21:12 CST 2022 com.google.gson.Preconditions,34
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testInvalidInstantiation | 22/12/05 11:21
Mon Dec 05 11:21:20 CST 2022 com.google.gson.Preconditions,34
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization | 22/12/05 11:21
Mon Dec 05 11:21:29 CST 2022 com.google.gson.TypeUtils,81
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.functional.CollectionTest::testWildcardPrimitiveCollectionSerilaization | 22/12/05 11:21
Mon Dec 05 11:21:40 CST 2022 com.google.gson.TypeUtils,81
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization | 22/12/05 11:21
Mon Dec 05 11:21:47 CST 2022 com.google.gson.DefaultTypeAdapters,522
Failed time : 22/12/05 11:21
=================================================
Project : gson_1	start : 22/12/05 11:21
Current failed test : com.google.gson.functional.CollectionTest::testCollectionOfObjectWithNullSerialization | 22/12/05 11:22
Mon Dec 05 11:22:07 CST 2022 com.google.gson.DefaultTypeAdapters,522
Failed time : 22/12/05 11:22
=================================================
Project : gson_1	start : 22/12/05 11:22
Current failed test : com.google.gson.EscaperTest::testGreaterThanAndLessThanEscaping | 22/12/05 11:22
Mon Dec 05 11:22:32 CST 2022 Mon Dec 05 11:22:32 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:22
=================================================
Project : gson_1	start : 22/12/05 11:22
Current failed test : com.google.gson.EscaperTest::testGreaterThanAndLessThanEscaping | 22/12/05 11:22
Mon Dec 05 11:22:37 CST 2022 Mon Dec 05 11:22:37 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:22
=================================================
Project : gson_1	start : 22/12/05 11:22
Current failed test : com.google.gson.stream.JsonReaderTest::testNullLiteralIsNotAString | 22/12/05 11:22
Mon Dec 05 11:22:45 CST 2022 com.google.gson.stream.JsonReader,461
Failed time : 22/12/05 11:23
=================================================
Project : gson_1	start : 22/12/05 11:23
Current failed test : com.google.gson.stream.JsonReaderTest::testNullLiteralIsNotAString | 22/12/05 11:23
Mon Dec 05 11:23:18 CST 2022 com.google.gson.stream.JsonReader,461
Failed time : 22/12/05 11:23
=================================================
Project : gson_1	start : 22/12/05 11:23
Current failed test : com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances | 22/12/05 11:23
Mon Dec 05 11:23:53 CST 2022 com.google.gson.ObjectTypePair,87
Failed time : 22/12/05 11:23
=================================================
Project : gson_1	start : 22/12/05 11:23
Current failed test : com.google.gson.functional.CustomSerializerTest::testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances | 22/12/05 11:23
Mon Dec 05 11:24:01 CST 2022 com.google.gson.ObjectTypePair,87
Failed time : 22/12/05 11:24
=================================================
Project : gson_1	start : 22/12/05 11:24
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 11:24
Mon Dec 05 11:24:11 CST 2022 com.google.gson.stream.JsonReader,1001
Failed time : 22/12/05 11:24
=================================================
Project : gson_1	start : 22/12/05 11:24
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 11:24
Mon Dec 05 11:24:19 CST 2022 com.google.gson.stream.JsonReader,1001
Failed time : 22/12/05 11:24
=================================================
Project : gson_1	start : 22/12/05 11:24
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 11:24
Mon Dec 05 11:24:29 CST 2022 com.google.gson.stream.JsonReader,1078

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4191238789253409 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(firstElement){
pop();
hasToken=true;
return token=JsonToken.END_ARRAY;
}

Time : 22/12/05 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=false;
return token=null;

Time : 22/12/05 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected name");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2470996788827535 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
swtich (quote){
case '\'' :
checkLenient();

case '\"' :
name=nextString((char)quote);
break;

default :
checkLenient();
pos--;
name=nextLiteral();
if(name.length()==0){
throw syntaxError("Expected name");
}

}
replaceTop(JsonScope.DANGLING_NAME);
hasToken=true;
return token=JsonToken.NAME;

Time : 22/12/05 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=false;
return token=null;

Time : 22/12/05 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected name");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:31
----------------------------------------
Success time : 22/12/05 11:31
=================================================
Project : gson_1	start : 22/12/05 11:31
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 11:31
Mon Dec 05 11:31:57 CST 2022 com.google.gson.stream.JsonReader,1078

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4191238789253409 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(firstElement){
pop();
hasToken=true;
return token=JsonToken.END_ARRAY;
}

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=false;
return token=null;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected name");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2470996788827535 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
swtich (quote){
case '\'' :
checkLenient();

case '\"' :
name=nextString((char)quote);
break;

default :
checkLenient();
pos--;
name=nextLiteral();
if(name.length()==0){
throw syntaxError("Expected name");
}

}
replaceTop(JsonScope.DANGLING_NAME);
hasToken=true;
return token=JsonToken.NAME;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected literal value");
}
value=literal;
hasToken=false;
return token=null;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>1073,1079]
String literal=nextLiteral();
if(literal.length()==0){
throw syntaxError("Expected name");
}
value=literal;
hasToken=true;
return token=null;

Time : 22/12/05 11:38
----------------------------------------
Success time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.EscaperTest::testGreaterThanAndLessThanEscaping | 22/12/05 11:39
Mon Dec 05 11:39:24 CST 2022 Mon Dec 05 11:39:24 CST 2022 : com.google.gson.Escaper,158=>Find no block
Failed time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.EscaperTest::testGreaterThanAndLessThanEscaping | 22/12/05 11:39
Mon Dec 05 11:39:32 CST 2022 Mon Dec 05 11:39:32 CST 2022 : com.google.gson.Escaper,158=>Find no block
Failed time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization | 22/12/05 11:39
Mon Dec 05 11:39:41 CST 2022 com.google.gson.JsonPrimitive,155
Failed time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.functional.ArrayTest::testArrayOfPrimitivesAsObjectsDeserialization | 22/12/05 11:39
Mon Dec 05 11:39:49 CST 2022 com.google.gson.JsonPrimitive,155
Failed time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:39
Mon Dec 05 11:39:55 CST 2022 com.google.gson.JsonElement,96
Failed time : 22/12/05 11:39
=================================================
Project : gson_1	start : 22/12/05 11:39
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:39
Mon Dec 05 11:40:01 CST 2022 com.google.gson.JsonElement,96
Failed time : 22/12/05 11:40
=================================================
Project : gson_1	start : 22/12/05 11:40
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 11:40
Mon Dec 05 11:40:10 CST 2022 com.google.gson.MappedObjectConstructor,87
Failed time : 22/12/05 11:40
=================================================
Project : gson_1	start : 22/12/05 11:40
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 11:40
Mon Dec 05 11:40:27 CST 2022 com.google.gson.MappedObjectConstructor,87
Failed time : 22/12/05 11:40
=================================================
Project : gson_1	start : 22/12/05 11:40
Current failed test : com.google.gson.MixedStreamTest::testWriteMixedStreamed | 22/12/05 11:40
Mon Dec 05 11:40:41 CST 2022 com.google.gson.stream.JsonWriter,492

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=1;i<stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3873755867223183 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>0,0]
for(int i=0;i<types.length;++i){
if(type.equals(types[i])){
return i;
}
}

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>492,494]
for(int i=1;i<=stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>492,494]
for(int i=1;i<stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:41
----------------------------------------
Success time : 22/12/05 11:41
=================================================
Project : gson_1	start : 22/12/05 11:41
Current failed test : com.google.gson.MixedStreamTest::testWriteMixedStreamed | 22/12/05 11:41
Mon Dec 05 11:41:14 CST 2022 com.google.gson.stream.JsonWriter,492

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=1;i<stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3873755867223183 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>0,0]
for(int i=0;i<types.length;++i){
if(type.equals(types[i])){
return i;
}
}

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>492,494]
for(int i=1;i<=stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonWriter.java=>492,494]
for(int i=1;i<stack.size();i++){
out.write(indent);
}

Time : 22/12/05 11:41
----------------------------------------
Success time : 22/12/05 11:41
=================================================
Project : gson_1	start : 22/12/05 11:41
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:41
Mon Dec 05 11:41:42 CST 2022 com.google.gson.JsonArray,147
Failed time : 22/12/05 11:42
=================================================
Project : gson_1	start : 22/12/05 11:42
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:42
Mon Dec 05 11:42:10 CST 2022 com.google.gson.JsonArray,147
Failed time : 22/12/05 11:42
=================================================
Project : gson_1	start : 22/12/05 11:42
Current failed test : com.google.gson.ParameterizedTypeImplTest::testOurTypeFunctionality | 22/12/05 11:42
Mon Dec 05 11:42:42 CST 2022 Mon Dec 05 11:42:42 CST 2022 : com.google.gson.ParameterizedTypeImpl,88=>Find no block
Failed time : 22/12/05 11:42
=================================================
Project : gson_1	start : 22/12/05 11:42
Current failed test : com.google.gson.ParameterizedTypeImplTest::testOurTypeFunctionality | 22/12/05 11:42
Mon Dec 05 11:42:47 CST 2022 Mon Dec 05 11:42:47 CST 2022 : com.google.gson.ParameterizedTypeImpl,88=>Find no block
Failed time : 22/12/05 11:42
=================================================
Project : gson_1	start : 22/12/05 11:42
Current failed test : com.google.gson.EscaperTest::testParagraphSeparatorEscaping | 22/12/05 11:42
Mon Dec 05 11:42:54 CST 2022 Mon Dec 05 11:42:54 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:42
=================================================
Project : gson_1	start : 22/12/05 11:42
Current failed test : com.google.gson.EscaperTest::testParagraphSeparatorEscaping | 22/12/05 11:42
Mon Dec 05 11:43:02 CST 2022 Mon Dec 05 11:43:02 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.FieldAttributesTest::testModifiers | 22/12/05 11:43
Mon Dec 05 11:43:11 CST 2022 com.google.gson.FieldAttributes,178
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.FieldAttributesTest::testModifiers | 22/12/05 11:43
Mon Dec 05 11:43:19 CST 2022 com.google.gson.FieldAttributes,178
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.EscaperTest::testParagraphSeparatorEscaping | 22/12/05 11:43
Mon Dec 05 11:43:26 CST 2022 Mon Dec 05 11:43:26 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.EscaperTest::testParagraphSeparatorEscaping | 22/12/05 11:43
Mon Dec 05 11:43:31 CST 2022 Mon Dec 05 11:43:31 CST 2022 : com.google.gson.Escaper,155=>Find no block
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:43
Mon Dec 05 11:43:38 CST 2022 com.google.gson.stream.JsonReader,949
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:43
Mon Dec 05 11:43:48 CST 2022 com.google.gson.stream.JsonReader,949
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.EscaperTest::testNewlineEscaping | 22/12/05 11:43
Mon Dec 05 11:43:57 CST 2022 com.google.gson.Escaper,136
Failed time : 22/12/05 11:43
=================================================
Project : gson_1	start : 22/12/05 11:43
Current failed test : com.google.gson.EscaperTest::testNewlineEscaping | 22/12/05 11:43
Mon Dec 05 11:44:04 CST 2022 com.google.gson.Escaper,136
Failed time : 22/12/05 11:44
=================================================
Project : gson_1	start : 22/12/05 11:44
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:44
Mon Dec 05 11:44:11 CST 2022 Mon Dec 05 11:44:11 CST 2022 : com.google.gson.AnonymousAndLocalClassExclusionStrategy,37=>Find no block
Failed time : 22/12/05 11:44
=================================================
Project : gson_1	start : 22/12/05 11:44
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:44
Mon Dec 05 11:44:19 CST 2022 Mon Dec 05 11:44:19 CST 2022 : com.google.gson.AnonymousAndLocalClassExclusionStrategy,37=>Find no block
Failed time : 22/12/05 11:44
=================================================
Project : gson_1	start : 22/12/05 11:44
Current failed test : com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException | 22/12/05 11:44
Mon Dec 05 11:44:30 CST 2022 com.google.gson.stream.JsonReader,1012
Failed time : 22/12/05 11:44
=================================================
Project : gson_1	start : 22/12/05 11:44
Current failed test : com.google.gson.GsonTypeAdapterTest::testTypeAdapterThrowsException | 22/12/05 11:44
Mon Dec 05 11:45:00 CST 2022 com.google.gson.stream.JsonReader,1012
Failed time : 22/12/05 11:45
=================================================
Project : gson_1	start : 22/12/05 11:45
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 11:45
Mon Dec 05 11:45:35 CST 2022 com.google.gson.stream.JsonReader,443
Failed time : 22/12/05 11:45
=================================================
Project : gson_1	start : 22/12/05 11:45
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 11:45
Mon Dec 05 11:45:41 CST 2022 com.google.gson.stream.JsonReader,443
Failed time : 22/12/05 11:45
=================================================
Project : gson_1	start : 22/12/05 11:45
Current failed test : com.google.gson.DisjunctionExclusionStrategyTest::testSkipFieldsWithMixedTrueAndFalse | 22/12/05 11:45
Mon Dec 05 11:45:49 CST 2022 com.google.gson.DisjunctionExclusionStrategy,46
Failed time : 22/12/05 11:45
=================================================
Project : gson_1	start : 22/12/05 11:45
Current failed test : com.google.gson.DisjunctionExclusionStrategyTest::testSkipFieldsWithMixedTrueAndFalse | 22/12/05 11:45
Mon Dec 05 11:45:57 CST 2022 com.google.gson.DisjunctionExclusionStrategy,46
Failed time : 22/12/05 11:45
=================================================
Project : gson_1	start : 22/12/05 11:45
Current failed test : com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes | 22/12/05 11:46
Mon Dec 05 11:46:07 CST 2022 com.google.gson.stream.JsonWriter,475
Failed time : 22/12/05 11:46
=================================================
Project : gson_1	start : 22/12/05 11:46
Current failed test : com.google.gson.GsonTypeAdapterTest::testTypeAdapterDoesNotAffectNonAdaptedTypes | 22/12/05 11:46
Mon Dec 05 11:46:27 CST 2022 com.google.gson.stream.JsonWriter,475
Failed time : 22/12/05 11:46
=================================================
Project : gson_1	start : 22/12/05 11:46
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:46
Mon Dec 05 11:46:57 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 11:47
=================================================
Project : gson_1	start : 22/12/05 11:47
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:47
Mon Dec 05 11:47:58 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 11:48
=================================================
Project : gson_1	start : 22/12/05 11:48
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:48
Mon Dec 05 11:49:02 CST 2022 com.google.gson.stream.JsonReader,824
Failed time : 22/12/05 11:49
=================================================
Project : gson_1	start : 22/12/05 11:49
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:49
Mon Dec 05 11:49:44 CST 2022 com.google.gson.stream.JsonReader,824
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 11:50
Mon Dec 05 11:50:28 CST 2022 com.google.gson.JsonObject,154
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 11:50
Mon Dec 05 11:50:33 CST 2022 com.google.gson.JsonObject,154
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.JsonParserTest::testParseReader | 22/12/05 11:50
Mon Dec 05 11:50:40 CST 2022 com.google.gson.JsonParser,64
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.JsonParserTest::testParseReader | 22/12/05 11:50
Mon Dec 05 11:50:45 CST 2022 com.google.gson.JsonParser,64
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.VersionExclusionStrategyTest::testClassAndFieldAreAtSameVersion | 22/12/05 11:50
Mon Dec 05 11:50:52 CST 2022 com.google.gson.VersionExclusionStrategy,65
Failed time : 22/12/05 11:50
=================================================
Project : gson_1	start : 22/12/05 11:50
Current failed test : com.google.gson.VersionExclusionStrategyTest::testClassAndFieldAreAtSameVersion | 22/12/05 11:51
Mon Dec 05 11:51:05 CST 2022 com.google.gson.VersionExclusionStrategy,65
Failed time : 22/12/05 11:51
=================================================
Project : gson_1	start : 22/12/05 11:51
Current failed test : com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization | 22/12/05 11:51
Mon Dec 05 11:51:18 CST 2022 com.google.gson.MappedObjectConstructor,85
Failed time : 22/12/05 11:51
=================================================
Project : gson_1	start : 22/12/05 11:51
Current failed test : com.google.gson.functional.CircularReferenceTest::testDirectedAcyclicGraphDeserialization | 22/12/05 11:51
Mon Dec 05 11:51:31 CST 2022 com.google.gson.MappedObjectConstructor,85
Failed time : 22/12/05 11:51
=================================================
Project : gson_1	start : 22/12/05 11:51
Current failed test : com.google.gson.EscaperTest::testDoubleQuoteEscaping | 22/12/05 11:51
Mon Dec 05 11:51:44 CST 2022 com.google.gson.Escaper,126
Failed time : 22/12/05 11:51
=================================================
Project : gson_1	start : 22/12/05 11:51
Current failed test : com.google.gson.EscaperTest::testDoubleQuoteEscaping | 22/12/05 11:51
Mon Dec 05 11:51:50 CST 2022 com.google.gson.Escaper,126
Failed time : 22/12/05 11:51
=================================================
Project : gson_1	start : 22/12/05 11:51
Current failed test : com.google.gson.MixedStreamTest::testWriteMixedStreamed | 22/12/05 11:51
Mon Dec 05 11:51:55 CST 2022 com.google.gson.stream.JsonWriter,492
Failed time : 22/12/05 11:52
=================================================
Project : gson_1	start : 22/12/05 11:52
Current failed test : com.google.gson.MixedStreamTest::testWriteMixedStreamed | 22/12/05 11:52
Mon Dec 05 11:52:05 CST 2022 com.google.gson.stream.JsonWriter,492
Failed time : 22/12/05 11:52
=================================================
Project : gson_1	start : 22/12/05 11:52
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:52
Mon Dec 05 11:52:15 CST 2022 com.google.gson.JsonArray,146
Failed time : 22/12/05 11:52
=================================================
Project : gson_1	start : 22/12/05 11:52
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:52
Mon Dec 05 11:52:33 CST 2022 com.google.gson.JsonArray,146
Failed time : 22/12/05 11:52
=================================================
Project : gson_1	start : 22/12/05 11:52
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:52
Mon Dec 05 11:52:56 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 11:53
=================================================
Project : gson_1	start : 22/12/05 11:53
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 11:53
Mon Dec 05 11:53:42 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 11:54
=================================================
Project : gson_1	start : 22/12/05 11:54
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry | 22/12/05 11:54
Mon Dec 05 11:54:28 CST 2022 com.google.gson.DefaultTypeAdapters,494
Failed time : 22/12/05 11:54
=================================================
Project : gson_1	start : 22/12/05 11:54
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testLocaleDeserializationWithLanguageCountry | 22/12/05 11:54
Mon Dec 05 11:54:33 CST 2022 com.google.gson.DefaultTypeAdapters,494
Failed time : 22/12/05 11:54
=================================================
Project : gson_1	start : 22/12/05 11:54
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:54
Mon Dec 05 11:54:39 CST 2022 com.google.gson.stream.JsonReader,665
Failed time : 22/12/05 11:54
=================================================
Project : gson_1	start : 22/12/05 11:54
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:54
Mon Dec 05 11:54:47 CST 2022 com.google.gson.stream.JsonReader,665
Failed time : 22/12/05 11:54
=================================================
Project : gson_1	start : 22/12/05 11:54
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:54
Mon Dec 05 11:54:54 CST 2022 com.google.gson.stream.JsonReader,941
Failed time : 22/12/05 11:55
=================================================
Project : gson_1	start : 22/12/05 11:55
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 11:55
Mon Dec 05 11:55:09 CST 2022 com.google.gson.stream.JsonReader,941
Failed time : 22/12/05 11:55
=================================================
Project : gson_1	start : 22/12/05 11:55
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:55
Mon Dec 05 11:55:24 CST 2022 com.google.gson.JsonArray,146
Failed time : 22/12/05 11:55
=================================================
Project : gson_1	start : 22/12/05 11:55
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveDoubleAutoboxedInASingleElementArrayDeserialization | 22/12/05 11:55
Mon Dec 05 11:55:45 CST 2022 com.google.gson.JsonArray,146
Failed time : 22/12/05 11:56
=================================================
Project : gson_1	start : 22/12/05 11:56
Current failed test : com.google.gson.EscaperTest::testRequiredEscapingUnicodeCharacter | 22/12/05 11:56
Mon Dec 05 11:56:07 CST 2022 Mon Dec 05 11:56:07 CST 2022 : com.google.gson.Escaper,137=>Find no block
Failed time : 22/12/05 11:56
=================================================
Project : gson_1	start : 22/12/05 11:56
Current failed test : com.google.gson.EscaperTest::testRequiredEscapingUnicodeCharacter | 22/12/05 11:56
Mon Dec 05 11:56:13 CST 2022 Mon Dec 05 11:56:13 CST 2022 : com.google.gson.Escaper,137=>Find no block
Failed time : 22/12/05 11:56
=================================================
Project : gson_1	start : 22/12/05 11:56
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 11:56
Mon Dec 05 11:56:19 CST 2022 com.google.gson.ObjectNavigator,107

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!visitedWithCustomHandler){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4874199903425267 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>0,0]
for(Field f : fields){
FieldAttributes fieldAttributes=new FieldAttributes(clazz,f);
if(exclusionStrategy.shouldSkipField(fieldAttributes)||exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass())){
continue;
}
TypeInfo fieldTypeInfo=TypeInfoFactory.getTypeInfoForField(f,objTypePair.type);
Type declaredTypeOfField=fieldTypeInfo.getActualType();
boolean visitedWithCustomHandler=visitor.visitFieldUsingCustomHandler(fieldAttributes,declaredTypeOfField,obj);
if(!visitedWithCustomHandler){
if(fieldTypeInfo.isArray()){
visitor.visitArrayField(fieldAttributes,declaredTypeOfField,obj);
}else {
visitor.visitObjectField(fieldAttributes,declaredTypeOfField,obj);
}
}
}

Time : 22/12/05 12:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>107,138]
if(!true){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>107,138]
if(!visitedWithCustomHandler){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:02
----------------------------------------
Success time : 22/12/05 12:02
=================================================
Project : gson_1	start : 22/12/05 12:02
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 12:02
Mon Dec 05 12:02:10 CST 2022 com.google.gson.ObjectNavigator,107

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!visitedWithCustomHandler){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4874199903425267 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>0,0]
for(Field f : fields){
FieldAttributes fieldAttributes=new FieldAttributes(clazz,f);
if(exclusionStrategy.shouldSkipField(fieldAttributes)||exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass())){
continue;
}
TypeInfo fieldTypeInfo=TypeInfoFactory.getTypeInfoForField(f,objTypePair.type);
Type declaredTypeOfField=fieldTypeInfo.getActualType();
boolean visitedWithCustomHandler=visitor.visitFieldUsingCustomHandler(fieldAttributes,declaredTypeOfField,obj);
if(!visitedWithCustomHandler){
if(fieldTypeInfo.isArray()){
visitor.visitArrayField(fieldAttributes,declaredTypeOfField,obj);
}else {
visitor.visitObjectField(fieldAttributes,declaredTypeOfField,obj);
}
}
}

Time : 22/12/05 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>107,138]
if(!true){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ObjectNavigator.java=>107,138]
if(!visitedWithCustomHandler){
Object obj=objTypePair.getObject();
Object objectToVisit=(obj==null)?visitor.getTarget():obj;
if(objectToVisit==null){
return ;
}
objTypePair.setObject(objectToVisit);
visitor.start(objTypePair);
try{
if(objTypeInfo.isArray()){
visitor.visitArray(objectToVisit,objTypePair.type);
}else if(objTypeInfo.getActualType()==Object.class&&isPrimitiveOrString(objectToVisit)){
visitor.visitPrimitive(objectToVisit);
objectToVisit=visitor.getTarget();
}else {
visitor.startVisitingObject(objectToVisit);
ObjectTypePair currObjTypePair=objTypePair.toMoreSpecificType();
Class<?> topLevelClass=new TypeInfo(currObjTypePair.type).getRawClass();
for(Class<?> curr=topLevelClass;curr!=null&&!curr.equals(Object.class);curr=curr.getSuperclass()){
if(!curr.isSynthetic()){
navigateClassFields(objectToVisit,curr,visitor);
}
}
}
}finally{
  visitor.end(objTypePair);
}

}

Time : 22/12/05 12:09
----------------------------------------
Success time : 22/12/05 12:09
=================================================
Project : gson_1	start : 22/12/05 12:09
Current failed test : com.google.gson.JsonParserTest::testParseEmptyString | 22/12/05 12:09
Mon Dec 05 12:09:13 CST 2022 com.google.gson.stream.JsonReader,938
Failed time : 22/12/05 12:12
=================================================
Project : gson_1	start : 22/12/05 12:12
Current failed test : com.google.gson.JsonParserTest::testParseEmptyString | 22/12/05 12:12
Mon Dec 05 12:12:20 CST 2022 com.google.gson.stream.JsonReader,938
Failed time : 22/12/05 12:16
=================================================
Project : gson_1	start : 22/12/05 12:16
Current failed test : com.google.gson.ParameterizedTypeHandlerMapTest::testMakeUnmodifiable | 22/12/05 12:16
Mon Dec 05 12:16:11 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,118
Failed time : 22/12/05 12:16
=================================================
Project : gson_1	start : 22/12/05 12:16
Current failed test : com.google.gson.ParameterizedTypeHandlerMapTest::testMakeUnmodifiable | 22/12/05 12:16
Mon Dec 05 12:16:16 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,118
Failed time : 22/12/05 12:16
=================================================
Project : gson_1	start : 22/12/05 12:16
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:16
Mon Dec 05 12:16:33 CST 2022 com.google.gson.stream.JsonReader,911

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:16
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4136678136395644 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:16
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>911,913]
if(buffer[pos%c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:16
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>911,913]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:16
----------------------------------------
Success time : 22/12/05 12:16
=================================================
Project : gson_1	start : 22/12/05 12:16
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:16
Mon Dec 05 12:17:06 CST 2022 com.google.gson.stream.JsonReader,911

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:17
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4136678136395644 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:17
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>911,913]
if(buffer[pos%c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:17
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>911,913]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:17
----------------------------------------
Success time : 22/12/05 12:17
=================================================
Project : gson_1	start : 22/12/05 12:17
Current failed test : com.google.gson.ModifyFirstLetterNamingPolicyTest::testFieldStartsWithUnderscore | 22/12/05 12:17
Mon Dec 05 12:17:44 CST 2022 com.google.gson.ModifyFirstLetterNamingPolicy,91

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(capitalizeFirstLetter){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4051155170662468 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>0,0]
if(value==null){
return nullValue();
}
String string=value.toString();
if(!lenient&&(string.equals("-Infinity")||string.equals("Infinity"))){
throw new IllegalArgumentException("Numeric values must be finite, but was "+value);
}
beforeValue(false);
out.append(string);
return this;

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>91,99]
if(false){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>91,99]
if(capitalizeFirstLetter){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------
Success time : 22/12/05 12:18
=================================================
Project : gson_1	start : 22/12/05 12:18
Current failed test : com.google.gson.ModifyFirstLetterNamingPolicyTest::testFieldStartsWithUnderscore | 22/12/05 12:18
Mon Dec 05 12:18:39 CST 2022 com.google.gson.ModifyFirstLetterNamingPolicy,91

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(capitalizeFirstLetter){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4051155170662468 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>0,0]
if(value==null){
return nullValue();
}
String string=value.toString();
if(!lenient&&(string.equals("-Infinity")||string.equals("Infinity"))){
throw new IllegalArgumentException("Numeric values must be finite, but was "+value);
}
beforeValue(false);
out.append(string);
return this;

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>91,99]
if(false){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java=>91,99]
if(capitalizeFirstLetter){
String modifiedTarget=modifyString(Character.toUpperCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else if(!capitalizeFirstLetter&&Character.isUpperCase(firstCharacter)){
String modifiedTarget=modifyString(Character.toLowerCase(firstCharacter),target,++index);
return fieldNameBuilder.append(modifiedTarget).toString();
}else {
return target;
}

Time : 22/12/05 12:18
----------------------------------------
Success time : 22/12/05 12:19
=================================================
Project : gson_1	start : 22/12/05 12:19
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 12:19
Mon Dec 05 12:19:06 CST 2022 com.google.gson.JsonDeserializationContextDefault,50
Failed time : 22/12/05 12:19
=================================================
Project : gson_1	start : 22/12/05 12:19
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 12:19
Mon Dec 05 12:19:34 CST 2022 com.google.gson.JsonDeserializationContextDefault,50
Failed time : 22/12/05 12:19
=================================================
Project : gson_1	start : 22/12/05 12:19
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArrayDeserialization | 22/12/05 12:19
Mon Dec 05 12:20:04 CST 2022 com.google.gson.JsonArray,212
Failed time : 22/12/05 12:20
=================================================
Project : gson_1	start : 22/12/05 12:20
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveLongAutoboxedInASingleElementArrayDeserialization | 22/12/05 12:20
Mon Dec 05 12:20:23 CST 2022 com.google.gson.JsonArray,212
Failed time : 22/12/05 12:20
=================================================
Project : gson_1	start : 22/12/05 12:20
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 12:20
Mon Dec 05 12:20:44 CST 2022 com.google.gson.stream.JsonReader,342
Failed time : 22/12/05 12:20
=================================================
Project : gson_1	start : 22/12/05 12:20
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 12:20
Mon Dec 05 12:20:50 CST 2022 com.google.gson.stream.JsonReader,342
Failed time : 22/12/05 12:20
=================================================
Project : gson_1	start : 22/12/05 12:20
Current failed test : com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization | 22/12/05 12:20
Mon Dec 05 12:20:57 CST 2022 com.google.gson.JsonSerializationVisitor,82
Failed time : 22/12/05 12:21
=================================================
Project : gson_1	start : 22/12/05 12:21
Current failed test : com.google.gson.functional.ArrayTest::testObjectArrayWithNonPrimitivesSerialization | 22/12/05 12:21
Mon Dec 05 12:21:30 CST 2022 com.google.gson.JsonSerializationVisitor,82
Failed time : 22/12/05 12:21
=================================================
Project : gson_1	start : 22/12/05 12:21
Current failed test : com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType | 22/12/05 12:21
Mon Dec 05 12:22:11 CST 2022 com.google.gson.Gson,231
Failed time : 22/12/05 12:22
=================================================
Project : gson_1	start : 22/12/05 12:22
Current failed test : com.google.gson.functional.InheritanceTest::testBaseSerializedAsBaseWhenSpecifiedWithExplicitType | 22/12/05 12:22
Mon Dec 05 12:22:32 CST 2022 com.google.gson.Gson,231
Failed time : 22/12/05 12:22
=================================================
Project : gson_1	start : 22/12/05 12:22
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 12:22
Mon Dec 05 12:22:49 CST 2022 Mon Dec 05 12:22:49 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 12:22
=================================================
Project : gson_1	start : 22/12/05 12:22
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 12:22
Mon Dec 05 12:22:58 CST 2022 Mon Dec 05 12:22:58 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 12:22
=================================================
Project : gson_1	start : 22/12/05 12:22
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 12:22
Mon Dec 05 12:23:04 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 12:23
=================================================
Project : gson_1	start : 22/12/05 12:23
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 12:23
Mon Dec 05 12:23:26 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 12:23
=================================================
Project : gson_1	start : 22/12/05 12:23
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 12:23
Mon Dec 05 12:23:50 CST 2022 com.google.gson.stream.JsonReader,942
Failed time : 22/12/05 12:23
=================================================
Project : gson_1	start : 22/12/05 12:23
Current failed test : com.google.gson.GsonTypeAdapterTest::testDefaultTypeAdapterThrowsParseException | 22/12/05 12:23
Mon Dec 05 12:24:10 CST 2022 com.google.gson.stream.JsonReader,942
Failed time : 22/12/05 12:24
=================================================
Project : gson_1	start : 22/12/05 12:24
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:24
Mon Dec 05 12:24:22 CST 2022 com.google.gson.stream.JsonReader,901
Failed time : 22/12/05 12:24
=================================================
Project : gson_1	start : 22/12/05 12:24
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:24
Mon Dec 05 12:24:28 CST 2022 com.google.gson.stream.JsonReader,901
Failed time : 22/12/05 12:24
=================================================
Project : gson_1	start : 22/12/05 12:24
Current failed test : com.google.gson.EscaperTest::testNewlineEscaping | 22/12/05 12:24
Mon Dec 05 12:24:38 CST 2022 com.google.gson.Escaper,136
Failed time : 22/12/05 12:24
=================================================
Project : gson_1	start : 22/12/05 12:24
Current failed test : com.google.gson.EscaperTest::testNewlineEscaping | 22/12/05 12:24
Mon Dec 05 12:24:50 CST 2022 com.google.gson.Escaper,136
Failed time : 22/12/05 12:24
=================================================
Project : gson_1	start : 22/12/05 12:24
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:24
Mon Dec 05 12:24:59 CST 2022 com.google.gson.stream.JsonReader,411

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4136678136395644 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>411,413]
if(buffer[pos%i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>411,413]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:32
----------------------------------------
Success time : 22/12/05 12:32
=================================================
Project : gson_1	start : 22/12/05 12:32
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:33
Mon Dec 05 12:33:14 CST 2022 com.google.gson.stream.JsonReader,411

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4136678136395644 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>0,0]
if(buffer[pos+c]!=toFind.charAt(c)){
continue outer;
}

Time : 22/12/05 12:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>411,413]
if(buffer[pos%i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/stream/JsonReader.java=>411,413]
if(buffer[pos+i]!=NON_EXECUTE_PREFIX[i]){
return ;
}

Time : 22/12/05 12:39
----------------------------------------
Success time : 22/12/05 12:40
=================================================
Project : gson_1	start : 22/12/05 12:40
Current failed test : com.google.gson.JsonPrimitiveTest::testByteEqualsInteger | 22/12/05 12:40
Mon Dec 05 12:40:29 CST 2022 com.google.gson.JsonPrimitive,371
Failed time : 22/12/05 12:40
=================================================
Project : gson_1	start : 22/12/05 12:40
Current failed test : com.google.gson.JsonPrimitiveTest::testByteEqualsInteger | 22/12/05 12:40
Mon Dec 05 12:41:07 CST 2022 com.google.gson.JsonPrimitive,371
Failed time : 22/12/05 12:41
=================================================
Project : gson_1	start : 22/12/05 12:41
Current failed test : com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization | 22/12/05 12:41
Mon Dec 05 12:41:47 CST 2022 com.google.gson.GsonBuilder,153
Failed time : 22/12/05 12:41
=================================================
Project : gson_1	start : 22/12/05 12:41
Current failed test : com.google.gson.functional.SecurityTest::testJsonWithNonExectuableTokenSerialization | 22/12/05 12:41
Mon Dec 05 12:42:04 CST 2022 com.google.gson.GsonBuilder,153
Failed time : 22/12/05 12:42
=================================================
Project : gson_1	start : 22/12/05 12:42
Current failed test : com.google.gson.MixedStreamTest::testWriteLenient | 22/12/05 12:42
Mon Dec 05 12:42:24 CST 2022 com.google.gson.DefaultTypeAdapters,205
Failed time : 22/12/05 12:42
=================================================
Project : gson_1	start : 22/12/05 12:42
Current failed test : com.google.gson.MixedStreamTest::testWriteLenient | 22/12/05 12:42
Mon Dec 05 12:42:41 CST 2022 com.google.gson.DefaultTypeAdapters,205
Failed time : 22/12/05 12:42
=================================================
Project : gson_1	start : 22/12/05 12:42
Current failed test : com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization | 22/12/05 12:42
Mon Dec 05 12:43:00 CST 2022 com.google.gson.stream.JsonReader,1086
Failed time : 22/12/05 12:44
=================================================
Project : gson_1	start : 22/12/05 12:44
Current failed test : com.google.gson.functional.ArrayTest::testNullsInArrayDeserialization | 22/12/05 12:44
Mon Dec 05 12:44:07 CST 2022 com.google.gson.stream.JsonReader,1086
Failed time : 22/12/05 12:44
=================================================
Project : gson_1	start : 22/12/05 12:44
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:44
Mon Dec 05 12:44:54 CST 2022 com.google.gson.stream.JsonReader,901
Failed time : 22/12/05 12:44
=================================================
Project : gson_1	start : 22/12/05 12:44
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:44
Mon Dec 05 12:44:58 CST 2022 com.google.gson.stream.JsonReader,901
Failed time : 22/12/05 12:44
=================================================
Project : gson_1	start : 22/12/05 12:44
Current failed test : com.google.gson.functional.MapTest::testSerializeMaps | 22/12/05 12:45
Mon Dec 05 12:45:05 CST 2022 com.google.gson.DefaultTypeAdapters,587
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.functional.MapTest::testSerializeMaps | 22/12/05 12:45
Mon Dec 05 12:45:15 CST 2022 com.google.gson.DefaultTypeAdapters,587
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.ParameterizedTypeHandlerMapTest::testTypeHierarchyRegisterIfAbsent | 22/12/05 12:45
Mon Dec 05 12:45:32 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,102
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.ParameterizedTypeHandlerMapTest::testTypeHierarchyRegisterIfAbsent | 22/12/05 12:45
Mon Dec 05 12:45:41 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,102
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization | 22/12/05 12:45
Mon Dec 05 12:45:47 CST 2022 com.google.gson.stream.JsonReader,689
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.functional.ArrayTest::testEmptyArrayDeserialization | 22/12/05 12:45
Mon Dec 05 12:45:52 CST 2022 com.google.gson.stream.JsonReader,689
Failed time : 22/12/05 12:45
=================================================
Project : gson_1	start : 22/12/05 12:45
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:45
Mon Dec 05 12:46:01 CST 2022 com.google.gson.stream.JsonReader,854
Failed time : 22/12/05 12:46
=================================================
Project : gson_1	start : 22/12/05 12:46
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:46
Mon Dec 05 12:46:19 CST 2022 com.google.gson.stream.JsonReader,854
Failed time : 22/12/05 12:46
=================================================
Project : gson_1	start : 22/12/05 12:46
Current failed test : com.google.gson.VersionExclusionStrategyTest::testClassAndFieldAreAheadInVersion | 22/12/05 12:46
Mon Dec 05 12:46:34 CST 2022 com.google.gson.VersionExclusionStrategy,52

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(annotationVersion>version){
return false;
}

Time : 22/12/05 12:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9999999999999998 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>0,0]
if(annotationVersion<=version){
return false;
}

Time : 22/12/05 12:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>51,53]
if(annotationVersion>version){
return true;
}

Time : 22/12/05 12:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>51,53]
if(annotationVersion>version){
return false;
}

Time : 22/12/05 12:46
----------------------------------------
Success time : 22/12/05 12:46
=================================================
Project : gson_1	start : 22/12/05 12:46
Current failed test : com.google.gson.VersionExclusionStrategyTest::testClassAndFieldAreAheadInVersion | 22/12/05 12:46
Mon Dec 05 12:46:54 CST 2022 com.google.gson.VersionExclusionStrategy,52

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(annotationVersion>version){
return false;
}

Time : 22/12/05 12:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9999999999999998 : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>0,0]
if(annotationVersion<=version){
return false;
}

Time : 22/12/05 12:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>51,53]
if(annotationVersion>version){
return true;
}

Time : 22/12/05 12:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/gson/gson_1_buggy/gson/src/main/java/com/google/gson/VersionExclusionStrategy.java=>51,53]
if(annotationVersion>version){
return false;
}

Time : 22/12/05 12:47
----------------------------------------
Success time : 22/12/05 12:47
=================================================
Project : gson_1	start : 22/12/05 12:47
Current failed test : com.google.gson.stream.JsonReaderTest::testReadObject | 22/12/05 12:47
Mon Dec 05 12:47:21 CST 2022 com.google.gson.stream.JsonReader,366

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!lenient&&firstToken!=JsonToken.BEGIN_ARRAY&&!hasToken){
syntaxError("Expected JSON document to start with \'[\' or \'{\'");
}

Time : 22/12/05 12:47
----------------------------------------
Failed time : 22/12/05 12:47
=================================================
Project : gson_1	start : 22/12/05 12:47
Current failed test : com.google.gson.stream.JsonReaderTest::testReadObject | 22/12/05 12:47
Mon Dec 05 12:47:54 CST 2022 com.google.gson.stream.JsonReader,366

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(!lenient&&firstToken!=JsonToken.BEGIN_ARRAY&&!hasToken){
syntaxError("Expected JSON document to start with \'[\' or \'{\'");
}

Time : 22/12/05 12:48
----------------------------------------
Failed time : 22/12/05 12:48
=================================================
Project : gson_1	start : 22/12/05 12:48
Current failed test : com.google.gson.InnerClassExclusionStrategyTest::testExcludeInnerClassField | 22/12/05 12:48
Mon Dec 05 12:48:25 CST 2022 com.google.gson.InnerClassExclusionStrategy,41
Failed time : 22/12/05 12:48
=================================================
Project : gson_1	start : 22/12/05 12:48
Current failed test : com.google.gson.InnerClassExclusionStrategyTest::testExcludeInnerClassField | 22/12/05 12:48
Mon Dec 05 12:48:33 CST 2022 com.google.gson.InnerClassExclusionStrategy,41
Failed time : 22/12/05 12:48
=================================================
Project : gson_1	start : 22/12/05 12:48
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 12:48
Mon Dec 05 12:48:43 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 12:49
=================================================
Project : gson_1	start : 22/12/05 12:49
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testUrlDeserialization | 22/12/05 12:49
Mon Dec 05 12:49:46 CST 2022 com.google.gson.stream.JsonReader,952
Failed time : 22/12/05 12:50
=================================================
Project : gson_1	start : 22/12/05 12:50
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 12:50
Mon Dec 05 12:50:36 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 12:50
=================================================
Project : gson_1	start : 22/12/05 12:50
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 12:50
Mon Dec 05 12:50:54 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 12:51
=================================================
Project : gson_1	start : 22/12/05 12:51
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:51
Mon Dec 05 12:51:10 CST 2022 com.google.gson.stream.JsonReader,461

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(token==JsonToken.BEGIN_ARRAY||token==JsonToken.BEGIN_OBJECT){
throw new IllegalStateException("Expected a string but was "+peek());
}

Time : 22/12/05 12:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(value==null||token==JsonToken.BEGIN_OBJECT){
throw new IllegalStateException("Expected a string but was "+peek());
}

Time : 22/12/05 12:56
----------------------------------------
Failed time : 22/12/05 12:56
=================================================
Project : gson_1	start : 22/12/05 12:56
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 12:56
Mon Dec 05 12:56:30 CST 2022 com.google.gson.stream.JsonReader,461

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(token==JsonToken.BEGIN_ARRAY||token==JsonToken.BEGIN_OBJECT){
throw new IllegalStateException("Expected a string but was "+peek());
}

Time : 22/12/05 12:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(value==null||token==JsonToken.BEGIN_OBJECT){
throw new IllegalStateException("Expected a string but was "+peek());
}

Time : 22/12/05 13:01
----------------------------------------
Failed time : 22/12/05 13:01
=================================================
Project : gson_1	start : 22/12/05 13:01
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 13:01
Mon Dec 05 13:01:56 CST 2022 com.google.gson.JsonDeserializationVisitor,73
Failed time : 22/12/05 13:01
=================================================
Project : gson_1	start : 22/12/05 13:01
Current failed test : com.google.gson.JsonParserTest::testReadWriteTwoObjects | 22/12/05 13:01
Mon Dec 05 13:02:01 CST 2022 com.google.gson.JsonDeserializationVisitor,73
Failed time : 22/12/05 13:02
=================================================
Project : gson_1	start : 22/12/05 13:02
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:02
Mon Dec 05 13:02:08 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,75
Failed time : 22/12/05 13:02
=================================================
Project : gson_1	start : 22/12/05 13:02
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:02
Mon Dec 05 13:02:36 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,75
Failed time : 22/12/05 13:02
=================================================
Project : gson_1	start : 22/12/05 13:02
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:02
Mon Dec 05 13:02:54 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,155
Failed time : 22/12/05 13:03
=================================================
Project : gson_1	start : 22/12/05 13:03
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:03
Mon Dec 05 13:03:16 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,155
Failed time : 22/12/05 13:03
=================================================
Project : gson_1	start : 22/12/05 13:03
Current failed test : com.google.gson.VersionExclusionStrategyTest::testDisallowNegativeValuesAndFailFast | 22/12/05 13:03
Mon Dec 05 13:03:32 CST 2022 com.google.gson.VersionExclusionStrategy,32
Failed time : 22/12/05 13:03
=================================================
Project : gson_1	start : 22/12/05 13:03
Current failed test : com.google.gson.VersionExclusionStrategyTest::testDisallowNegativeValuesAndFailFast | 22/12/05 13:03
Mon Dec 05 13:03:40 CST 2022 com.google.gson.VersionExclusionStrategy,32
Failed time : 22/12/05 13:03
=================================================
Project : gson_1	start : 22/12/05 13:03
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:03
Mon Dec 05 13:03:50 CST 2022 com.google.gson.stream.JsonReader,824
Failed time : 22/12/05 13:04
=================================================
Project : gson_1	start : 22/12/05 13:04
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:04
Mon Dec 05 13:04:24 CST 2022 com.google.gson.stream.JsonReader,824
Failed time : 22/12/05 13:04
=================================================
Project : gson_1	start : 22/12/05 13:04
Current failed test : com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization | 22/12/05 13:04
Mon Dec 05 13:05:03 CST 2022 com.google.gson.JsonPrimitive,188
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.functional.ObjectTest::testStringFieldWithNumberValueDeserialization | 22/12/05 13:05
Mon Dec 05 13:05:10 CST 2022 com.google.gson.JsonPrimitive,188
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 13:05
Mon Dec 05 13:05:19 CST 2022 com.google.gson.JsonSerializationVisitor,55
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 13:05
Mon Dec 05 13:05:37 CST 2022 com.google.gson.JsonSerializationVisitor,55
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 13:05
Mon Dec 05 13:05:52 CST 2022 Mon Dec 05 13:05:52 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 13:05
Mon Dec 05 13:05:57 CST 2022 Mon Dec 05 13:05:57 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 13:05
=================================================
Project : gson_1	start : 22/12/05 13:05
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedDeserialization | 22/12/05 13:06
Mon Dec 05 13:06:06 CST 2022 com.google.gson.JsonArray,277
Failed time : 22/12/05 13:06
=================================================
Project : gson_1	start : 22/12/05 13:06
Current failed test : com.google.gson.functional.PrimitiveTest::testPrimitiveBooleanAutoboxedDeserialization | 22/12/05 13:06
Mon Dec 05 13:06:31 CST 2022 com.google.gson.JsonArray,277
Failed time : 22/12/05 13:06
=================================================
Project : gson_1	start : 22/12/05 13:06
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 13:06
Mon Dec 05 13:06:48 CST 2022 Mon Dec 05 13:06:48 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 13:06
=================================================
Project : gson_1	start : 22/12/05 13:06
Current failed test : com.google.gson.EscaperTest::testControlCharBlockEscaping | 22/12/05 13:06
Mon Dec 05 13:06:57 CST 2022 Mon Dec 05 13:06:57 CST 2022 : com.google.gson.Escaper,139=>Find no block
Failed time : 22/12/05 13:06
=================================================
Project : gson_1	start : 22/12/05 13:06
Current failed test : com.google.gson.JsonPrimitiveTest::testDoubleEqualsBigDecimal | 22/12/05 13:06
Mon Dec 05 13:07:06 CST 2022 com.google.gson.JsonPrimitive,383
Failed time : 22/12/05 13:07
=================================================
Project : gson_1	start : 22/12/05 13:07
Current failed test : com.google.gson.JsonPrimitiveTest::testDoubleEqualsBigDecimal | 22/12/05 13:07
Mon Dec 05 13:07:25 CST 2022 com.google.gson.JsonPrimitive,383
Failed time : 22/12/05 13:07
=================================================
Project : gson_1	start : 22/12/05 13:07
Current failed test : com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization | 22/12/05 13:07
Mon Dec 05 13:07:38 CST 2022 com.google.gson.stream.JsonReader,1043
Failed time : 22/12/05 13:07
=================================================
Project : gson_1	start : 22/12/05 13:07
Current failed test : com.google.gson.functional.EscapingTest::testGsonAcceptsEscapedAndNonEscapedJsonDeserialization | 22/12/05 13:07
Mon Dec 05 13:08:01 CST 2022 com.google.gson.stream.JsonReader,1043
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:08
Mon Dec 05 13:08:20 CST 2022 com.google.gson.stream.JsonReader,322
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:08
Mon Dec 05 13:08:25 CST 2022 com.google.gson.stream.JsonReader,322
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.stream.JsonWriterTest::testNonFiniteBoxedDoubles | 22/12/05 13:08
Mon Dec 05 13:08:34 CST 2022 Mon Dec 05 13:08:34 CST 2022 : com.google.gson.stream.JsonWriter,395=>Find no block
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.stream.JsonWriterTest::testNonFiniteBoxedDoubles | 22/12/05 13:08
Mon Dec 05 13:08:42 CST 2022 Mon Dec 05 13:08:42 CST 2022 : com.google.gson.stream.JsonWriter,395=>Find no block
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 13:08
Mon Dec 05 13:08:52 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 13:08
=================================================
Project : gson_1	start : 22/12/05 13:08
Current failed test : com.google.gson.CamelCaseSeparatorNamingPolicyTest::testNameBeginsWithCapital | 22/12/05 13:08
Mon Dec 05 13:09:04 CST 2022 com.google.gson.CamelCaseSeparatorNamingPolicy,65
Failed time : 22/12/05 13:09
=================================================
Project : gson_1	start : 22/12/05 13:09
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern | 22/12/05 13:09
Mon Dec 05 13:09:12 CST 2022 com.google.gson.GsonBuilder,565
Failed time : 22/12/05 13:09
=================================================
Project : gson_1	start : 22/12/05 13:09
Current failed test : com.google.gson.functional.DefaultTypeAdaptersTest::testDateDeserializationWithPattern | 22/12/05 13:09
Mon Dec 05 13:09:19 CST 2022 com.google.gson.GsonBuilder,565
Failed time : 22/12/05 13:09
=================================================
Project : gson_1	start : 22/12/05 13:09
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 13:09
Mon Dec 05 13:09:29 CST 2022 com.google.gson.stream.JsonWriter,280
Failed time : 22/12/05 13:10
=================================================
Project : gson_1	start : 22/12/05 13:10
Current failed test : com.google.gson.FunctionWithInternalDependenciesTest::testUserDefinedExclusionPolicies | 22/12/05 13:10
Mon Dec 05 13:10:46 CST 2022 com.google.gson.stream.JsonWriter,280
Failed time : 22/12/05 13:11
=================================================
Project : gson_1	start : 22/12/05 13:11
Current failed test : com.google.gson.MixedStreamTest::testWriteNulls | 22/12/05 13:11
Mon Dec 05 13:12:02 CST 2022 com.google.gson.Streams,88
Failed time : 22/12/05 13:13
=================================================
Project : gson_1	start : 22/12/05 13:13
Current failed test : com.google.gson.MixedStreamTest::testWriteNulls | 22/12/05 13:13
Mon Dec 05 13:13:24 CST 2022 com.google.gson.Streams,88
Failed time : 22/12/05 13:14
=================================================
Project : gson_1	start : 22/12/05 13:14
Current failed test : com.google.gson.stream.JsonReaderTest::testLongs | 22/12/05 13:14
Mon Dec 05 13:14:51 CST 2022 com.google.gson.stream.JsonReader,533
Failed time : 22/12/05 13:14
=================================================
Project : gson_1	start : 22/12/05 13:14
Current failed test : com.google.gson.stream.JsonReaderTest::testLongs | 22/12/05 13:14
Mon Dec 05 13:14:59 CST 2022 com.google.gson.stream.JsonReader,533
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:15
Mon Dec 05 13:15:13 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,138
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:15
Mon Dec 05 13:15:21 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,138
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 13:15
Mon Dec 05 13:15:31 CST 2022 com.google.gson.stream.JsonReader,375
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.JsonObjectTest::testReadPropertyWithEmptyStringName | 22/12/05 13:15
Mon Dec 05 13:15:37 CST 2022 com.google.gson.stream.JsonReader,375
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:15
Mon Dec 05 13:15:43 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,65
Failed time : 22/12/05 13:15
=================================================
Project : gson_1	start : 22/12/05 13:15
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:15
Mon Dec 05 13:15:55 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,65
Failed time : 22/12/05 13:16
=================================================
Project : gson_1	start : 22/12/05 13:16
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:16
Mon Dec 05 13:16:10 CST 2022 com.google.gson.stream.JsonReader,942
Failed time : 22/12/05 13:16
=================================================
Project : gson_1	start : 22/12/05 13:16
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:16
Mon Dec 05 13:16:21 CST 2022 com.google.gson.stream.JsonReader,942
Failed time : 22/12/05 13:16
=================================================
Project : gson_1	start : 22/12/05 13:16
Current failed test : com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerForLong | 22/12/05 13:16
Mon Dec 05 13:16:28 CST 2022 com.google.gson.Streams,119
Failed time : 22/12/05 13:16
=================================================
Project : gson_1	start : 22/12/05 13:16
Current failed test : com.google.gson.functional.CustomTypeAdaptersTest::testCustomSerializerForLong | 22/12/05 13:16
Mon Dec 05 13:16:42 CST 2022 com.google.gson.Streams,119
Failed time : 22/12/05 13:16
=================================================
Project : gson_1	start : 22/12/05 13:16
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:16
Mon Dec 05 13:17:02 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,69
Failed time : 22/12/05 13:17
=================================================
Project : gson_1	start : 22/12/05 13:17
Current failed test : com.google.gson.CommentsTest::testParseComments | 22/12/05 13:17
Mon Dec 05 13:17:19 CST 2022 com.google.gson.ParameterizedTypeHandlerMap,69
Failed time : 22/12/05 13:17
