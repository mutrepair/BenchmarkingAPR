=================================================
Project : math_1	start : 22/10/31 16:26
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/10/31 16:26
Mon Oct 31 16:27:17 CDT 2022 org.apache.commons.math3.linear.RealVector,401
Failed time : 22/10/31 16:38
=================================================
Project : math_1	start : 22/10/31 16:38
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/10/31 16:38
Mon Oct 31 16:38:37 CDT 2022 org.apache.commons.math3.linear.RealVector,401
Failed time : 22/10/31 16:47
=================================================
Project : math_1	start : 22/10/31 19:20
Current failed test : org.apache.commons.math3.linear.QRSolverTest::testOverdetermined | 22/10/31 19:20
Mon Oct 31 19:21:04 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,505
Failed time : 22/11/01 00:21
=================================================
Project : math_1	start : 22/11/01 00:21
Current failed test : org.apache.commons.math3.linear.QRSolverTest::testOverdetermined | 22/11/01 00:21
Tue Nov 01 00:21:21 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,505
Failed time : 22/11/01 04:44
=================================================
Project : math_1	start : 22/11/01 04:44
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/01 04:44
Tue Nov 01 04:44:40 CDT 2022 org.apache.commons.math3.util.FastMath,519
Failed time : 22/11/01 06:04
=================================================
Project : math_1	start : 22/11/01 06:04
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/01 06:04
Tue Nov 01 06:04:33 CDT 2022 org.apache.commons.math3.util.FastMath,519
Failed time : 22/11/01 07:13
=================================================
Project : math_1	start : 22/11/01 07:13
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/11/01 07:13
Tue Nov 01 07:13:31 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1565
Failed time : 22/11/01 08:12
=================================================
Project : math_1	start : 22/11/01 08:12
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/11/01 08:12
Tue Nov 01 08:12:41 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1565
Failed time : 22/11/01 09:17
=================================================
Project : math_1	start : 22/11/01 09:17
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testIsValidPoint | 22/11/01 09:17
Tue Nov 01 09:18:11 CDT 2022 org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction,184
Failed time : 22/11/01 09:30
=================================================
Project : math_1	start : 22/11/01 09:30
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testIsValidPoint | 22/11/01 09:30
Tue Nov 01 09:31:09 CDT 2022 org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction,184
Failed time : 22/11/01 09:43
=================================================
Project : math_1	start : 22/11/01 09:43
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testParaboloid | 22/11/01 09:43
Tue Nov 01 09:43:42 CDT 2022 org.apache.commons.math3.analysis.interpolation.SplineInterpolator,112
Failed time : 22/11/01 09:54
=================================================
Project : math_1	start : 22/11/01 09:54
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testParaboloid | 22/11/01 09:54
Tue Nov 01 09:54:59 CDT 2022 org.apache.commons.math3.analysis.interpolation.SplineInterpolator,112
Failed time : 22/11/01 10:05
=================================================
Project : math_1	start : 22/11/01 10:06
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/01 10:06
Tue Nov 01 10:06:18 CDT 2022 org.apache.commons.math3.dfp.Dfp,2053

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(mant[mant.length-1]==0){
break;
}

Time : 22/11/01 10:20
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9635460822563595 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(mant[mant.length-1]==0){
return newInstance(this);
}

Time : 22/11/01 10:21
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 10:21
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(mant[mant.length-1]==0){
break;
}

Time : 22/11/01 10:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/11/01 10:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3693182879212227 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(row_data.length>nvars){
return Double.NaN;
}

Time : 22/11/01 10:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 10:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/11/01 10:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(RADIX==0){
break;
}

Time : 22/11/01 10:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2417732916656037 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(q==mant.length*rsize+offset+1){
break;
}

Time : 22/11/01 10:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 10:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(RADIX==0){
break;
}

Time : 22/11/01 10:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/11/01 11:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0162911452669756 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if((result.exp+mant.length)<MIN_EXP){
def=newInstance(getZero());
def.sign=result.sign;
}else {
def=newInstance(result);
}

Time : 22/11/01 11:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 11:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/11/01 11:09
----------------------------------------
Success time : 22/11/01 11:11
=================================================
Project : math_1	start : 22/11/01 11:11
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/01 11:11
Tue Nov 01 11:11:31 CDT 2022 org.apache.commons.math3.dfp.Dfp,2053

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(mant[mant.length-1]==0){
break;
}

Time : 22/11/01 11:24
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9635460822563595 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(mant[mant.length-1]==0){
return newInstance(this);
}

Time : 22/11/01 11:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 11:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(mant[mant.length-1]==0){
break;
}

Time : 22/11/01 11:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/11/01 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3693182879212227 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(row_data.length>nvars){
return Double.NaN;
}

Time : 22/11/01 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/11/01 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(RADIX==0){
break;
}

Time : 22/11/01 11:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2417732916656037 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(q==mant.length*rsize+offset+1){
break;
}

Time : 22/11/01 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(RADIX==0){
break;
}

Time : 22/11/01 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/11/01 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0162911452669756 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if((result.exp+mant.length)<MIN_EXP){
def=newInstance(getZero());
def.sign=result.sign;
}else {
def=newInstance(result);
}

Time : 22/11/01 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/11/01 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/11/01 12:09
----------------------------------------
Success time : 22/11/01 12:11
=================================================
Project : math_1	start : 22/11/01 12:11
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/11/01 12:11
Tue Nov 01 12:11:48 CDT 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,567
Failed time : 22/11/01 12:25
=================================================
Project : math_1	start : 22/11/01 12:25
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/11/01 12:25
Tue Nov 01 12:25:22 CDT 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,567
Failed time : 22/11/01 12:38
=================================================
Project : math_1	start : 22/11/01 12:38
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/11/01 12:38
Tue Nov 01 12:38:27 CDT 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,501
Failed time : 22/11/01 13:11
=================================================
Project : math_1	start : 22/11/01 13:11
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/11/01 13:11
Tue Nov 01 13:11:30 CDT 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,501
Failed time : 22/11/01 13:43
=================================================
Project : math_1	start : 22/11/01 13:43
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/11/01 13:43
Tue Nov 01 13:43:27 CDT 2022 org.apache.commons.math3.linear.RealVector,397

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 13:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0969718623536642 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>0,0]
xNorm=0;
for(int k=0;k<nC;++k){
double xK=diag[k]*currentPoint[k];
xNorm+=xK*xK;
}
xNorm=FastMath.sqrt(xNorm);
if(checker!=null&&checker.converged(iter,previous,current)){
setCost(currentCost);
point=current.getPoint();
return current;
}

Time : 22/11/01 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 13:50
----------------------------------------
Success time : 22/11/01 13:54
=================================================
Project : math_1	start : 22/11/01 13:54
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/11/01 13:54
Tue Nov 01 13:54:59 CDT 2022 org.apache.commons.math3.linear.RealVector,397

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 14:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0969718623536642 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>0,0]
xNorm=0;
for(int k=0;k<nC;++k){
double xK=diag[k]*currentPoint[k];
xNorm+=xK*xK;
}
xNorm=FastMath.sqrt(xNorm);
if(checker!=null&&checker.converged(iter,previous,current)){
setCost(currentCost);
point=current.getPoint();
return current;
}

Time : 22/11/01 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/11/01 14:02
----------------------------------------
Success time : 22/11/01 14:06
=================================================
Project : math_1	start : 22/11/01 14:06
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/11/01 14:06
Tue Nov 01 14:06:28 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,1434
Failed time : 22/11/01 14:25
=================================================
Project : math_1	start : 22/11/01 14:25
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/11/01 14:25
Tue Nov 01 14:26:05 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,1434
Failed time : 22/11/01 14:44
=================================================
Project : math_1	start : 22/11/01 14:44
Current failed test : org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest::testHahn1 | 22/11/01 14:44
Tue Nov 01 14:44:42 CDT 2022 org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer,165
Failed time : 22/11/01 15:30
=================================================
Project : math_1	start : 22/11/01 15:30
Current failed test : org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest::testHahn1 | 22/11/01 15:30
Tue Nov 01 15:30:33 CDT 2022 org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer,165
Failed time : 22/11/01 16:17
=================================================
Project : math_1	start : 22/11/01 16:17
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/01 16:17
Tue Nov 01 16:17:43 CDT 2022 org.apache.commons.math3.special.Erf,214
Failed time : 22/11/01 16:34
=================================================
Project : math_1	start : 22/11/01 16:34
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/01 16:34
Tue Nov 01 16:34:19 CDT 2022 org.apache.commons.math3.special.Erf,214
Failed time : 22/11/01 16:50
=================================================
Project : math_1	start : 22/11/01 16:50
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/11/01 16:50
Tue Nov 01 16:50:42 CDT 2022 org.apache.commons.math3.util.MathArrays,1119

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/11/01 16:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/11/01 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/11/01 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/11/01 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/11/01 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/11/01 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/11/01 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 16:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/11/01 16:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/11/01 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/11/01 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/11/01 16:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 16:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 16:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/11/01 16:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/11/01 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/11/01 17:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/11/01 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/11/01 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/11/01 17:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.072273090478377 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double s12High=prod1High+prod2High;
 final double s12Prime=s12High-prod2High;
 final double s12Low=(prod2High-(s12High-s12Prime))+(prod1High-s12Prime);
 final double s123High=s12High+prod3High;
 final double s123Prime=s123High-prod3High;

Time : 22/11/01 17:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/11/01 17:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/11/01 17:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0481572586923658 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double b3High=cb3-(cb3-b3);
 final double b3Low=b3-b3High;
 final double prod3High=a3*b3;
 final double prod3Low=a3Low*b3Low-(((prod3High-a3High*b3High)-a3Low*b3High)-a3High*b3Low);
 final double ca4=SPLIT_FACTOR*a4;

Time : 22/11/01 17:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/11/01 17:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/11/01 17:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9993148337667671 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/11/01 17:13
----------------------------------------
Success time : 22/11/01 17:21
=================================================
Project : math_1	start : 22/11/01 17:21
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/11/01 17:21
Tue Nov 01 17:21:39 CDT 2022 org.apache.commons.math3.util.MathArrays,1119

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/11/01 17:22
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/11/01 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/11/01 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/11/01 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/11/01 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/11/01 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/11/01 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/11/01 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/11/01 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/11/01 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/11/01 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/11/01 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/11/01 17:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/11/01 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/11/01 17:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/11/01 17:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/11/01 17:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/11/01 17:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.072273090478377 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double s12High=prod1High+prod2High;
 final double s12Prime=s12High-prod2High;
 final double s12Low=(prod2High-(s12High-s12Prime))+(prod1High-s12Prime);
 final double s123High=s12High+prod3High;
 final double s123Prime=s123High-prod3High;

Time : 22/11/01 17:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/11/01 17:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/11/01 17:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0481572586923658 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double b3High=cb3-(cb3-b3);
 final double b3Low=b3-b3High;
 final double prod3High=a3*b3;
 final double prod3Low=a3Low*b3Low-(((prod3High-a3High*b3High)-a3Low*b3High)-a3High*b3Low);
 final double ca4=SPLIT_FACTOR*a4;

Time : 22/11/01 17:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/11/01 17:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/11/01 17:45
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9993148337667671 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/11/01 17:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/11/01 17:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/11/01 17:46
----------------------------------------
Success time : 22/11/01 17:54
=================================================
Project : math_1	start : 22/11/01 17:54
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest::testAccurateCrossProduct | 22/11/01 17:54
Tue Nov 01 17:54:36 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,483
Failed time : 22/11/01 18:06
=================================================
Project : math_1	start : 22/11/01 18:06
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest::testAccurateCrossProduct | 22/11/01 18:06
Tue Nov 01 18:07:01 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,483
Failed time : 22/11/01 18:18
=================================================
Project : math_1	start : 22/11/01 18:19
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testToDifferentiableMultivariateFunction | 22/11/01 18:19
Tue Nov 01 18:19:14 CDT 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,248
Failed time : 22/11/01 18:31
=================================================
Project : math_1	start : 22/11/01 18:31
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testToDifferentiableMultivariateFunction | 22/11/01 18:31
Tue Nov 01 18:31:21 CDT 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,248
Failed time : 22/11/01 18:43
=================================================
Project : math_1	start : 22/11/01 18:43
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/11/01 18:43
Tue Nov 01 18:43:16 CDT 2022 org.apache.commons.math3.linear.AbstractRealMatrix,130
Failed time : 22/11/01 19:07
=================================================
Project : math_1	start : 22/11/01 19:07
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/11/01 19:07
Tue Nov 01 19:08:02 CDT 2022 org.apache.commons.math3.linear.AbstractRealMatrix,130
Failed time : 22/11/01 19:31
=================================================
Project : math_1	start : 22/11/01 19:31
Current failed test : org.apache.commons.math3.distribution.LogNormalDistributionTest::testQuantiles | 22/11/01 19:31
Tue Nov 01 19:31:48 CDT 2022 org.apache.commons.math3.distribution.LogNormalDistribution,230
Failed time : 22/11/01 19:49
=================================================
Project : math_1	start : 22/11/01 19:49
Current failed test : org.apache.commons.math3.distribution.LogNormalDistributionTest::testQuantiles | 22/11/01 19:49
Tue Nov 01 19:49:48 CDT 2022 org.apache.commons.math3.distribution.LogNormalDistribution,230
Failed time : 22/11/01 20:03
=================================================
Project : math_1	start : 22/11/01 20:03
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/11/01 20:03
Tue Nov 01 20:03:14 CDT 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,945

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7360986626045958 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
for(int i=begin;i<k;i++){
increment(values[i]);
}

Time : 22/11/01 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4032621275716863 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
double w=matrixT[i][i]-p;
r=0.0;
for(int j=l;j<=idx;j++){
r=r+matrixT[i][j]*matrixT[j][idx];
}

Time : 22/11/01 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:12
----------------------------------------
Success time : 22/11/01 20:16
=================================================
Project : math_1	start : 22/11/01 20:16
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/11/01 20:16
Tue Nov 01 20:16:40 CDT 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,945

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7360986626045958 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
for(int i=begin;i<k;i++){
increment(values[i]);
}

Time : 22/11/01 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:25
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4032621275716863 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
double w=matrixT[i][i]-p;
r=0.0;
for(int j=l;j<=idx;j++){
r=r+matrixT[i][j]*matrixT[j][idx];
}

Time : 22/11/01 20:26
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:26
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/11/01 20:26
----------------------------------------
Success time : 22/11/01 20:29
=================================================
Project : math_1	start : 22/11/01 20:29
Current failed test : org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest::testMultiple | 22/11/01 20:29
Tue Nov 01 20:29:38 CDT 2022 org.apache.commons.math3.geometry.partitioning.BSPTree,404
Failed time : 22/11/01 20:37
=================================================
Project : math_1	start : 22/11/01 20:37
Current failed test : org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest::testMultiple | 22/11/01 20:37
Tue Nov 01 20:37:19 CDT 2022 org.apache.commons.math3.geometry.partitioning.BSPTree,404
Failed time : 22/11/01 20:44
=================================================
Project : math_1	start : 22/11/01 20:44
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/11/01 20:44
Tue Nov 01 20:45:02 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,336
Failed time : 22/11/01 20:54
=================================================
Project : math_1	start : 22/11/01 20:54
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/11/01 20:54
Tue Nov 01 20:54:21 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,336
Failed time : 22/11/01 21:03
=================================================
Project : math_1	start : 22/11/01 21:03
Current failed test : org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718 | 22/11/01 21:03
Tue Nov 01 21:03:54 CDT 2022 org.apache.commons.math3.special.Beta,433

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.222584973689915 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
d=p/q;
u=x+d;
if(u-a<tol2||b-u<tol2){
if(x<=m){
d=tol1;
}else {
d=-tol1;
}
}

Time : 22/11/01 21:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2187348144101902 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return 2/(b-a);
}

Time : 22/11/01 21:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:14
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:15
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:15
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:16
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:16
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:16
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:17
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:18
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:18
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:21
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:22
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:22
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:28
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1421685949393148 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/11/01 21:28
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:28
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:29
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1101309026582085 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/01 21:30
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:30
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:31
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0906549736373696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(q<0.0){
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q-t);
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
double u=0.0;
double s=1.0;

Time : 22/11/01 21:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0709984477284888 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(b!=0||c!=0){
shift=FastMath.sqrt(b*b+c);
if(b<0){
shift=-shift;
}
shift=c/(b+shift);
}

Time : 22/11/01 21:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0269617132963629 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if((a<0)||(a>b)){
throw new OutOfRangeException(a,0,b);
}
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
 final double h=a/b;
 final double p=h/(1.0+h);
 final double q=1.0/(1.0+h);

Time : 22/11/01 21:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9821685949393149 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/11/01 21:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:37
----------------------------------------
Success time : 22/11/01 21:38
=================================================
Project : math_1	start : 22/11/01 21:38
Current failed test : org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718 | 22/11/01 21:38
Tue Nov 01 21:38:49 CDT 2022 org.apache.commons.math3.special.Beta,433

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.222584973689915 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
d=p/q;
u=x+d;
if(u-a<tol2||b-u<tol2){
if(x<=m){
d=tol1;
}else {
d=-tol1;
}
}

Time : 22/11/01 21:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2187348144101902 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return 2/(b-a);
}

Time : 22/11/01 21:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:56
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/11/01 21:57
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:57
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 21:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1421685949393148 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/11/01 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1101309026582085 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/01 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0906549736373696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(q<0.0){
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q-t);
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
double u=0.0;
double s=1.0;

Time : 22/11/01 22:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0709984477284888 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(b!=0||c!=0){
shift=FastMath.sqrt(b*b+c);
if(b<0){
shift=-shift;
}
shift=c/(b+shift);
}

Time : 22/11/01 22:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0269617132963629 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if((a<0)||(a>b)){
throw new OutOfRangeException(a,0,b);
}
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
 final double h=a/b;
 final double p=h/(1.0+h);
 final double q=1.0/(1.0+h);

Time : 22/11/01 22:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9821685949393149 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/11/01 22:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/11/01 22:12
----------------------------------------
Success time : 22/11/01 22:13
=================================================
Project : math_1	start : 22/11/01 22:13
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/01 22:13
Tue Nov 01 22:14:02 CDT 2022 org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet,556
Failed time : 22/11/01 22:24
=================================================
Project : math_1	start : 22/11/01 22:24
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/01 22:24
Tue Nov 01 22:24:41 CDT 2022 org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet,556
Failed time : 22/11/01 22:34
=================================================
Project : math_1	start : 22/11/01 22:34
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/11/01 22:34
Tue Nov 01 22:34:42 CDT 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,1254
Failed time : 22/11/01 22:42
=================================================
Project : math_1	start : 22/11/01 22:42
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/11/01 22:42
Tue Nov 01 22:42:26 CDT 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,1254
Failed time : 22/11/01 22:49
=================================================
Project : math_1	start : 22/11/01 22:50
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/11/01 22:50
Tue Nov 01 22:50:12 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,1549
Failed time : 22/11/01 22:59
=================================================
Project : math_1	start : 22/11/01 22:59
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/11/01 22:59
Tue Nov 01 22:59:13 CDT 2022 org.apache.commons.math3.linear.BlockRealMatrix,1549
Failed time : 22/11/01 23:07
=================================================
Project : math_1	start : 22/11/01 23:07
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/01 23:08
Tue Nov 01 23:08:12 CDT 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,630
Failed time : 22/11/01 23:50
=================================================
Project : math_1	start : 22/11/01 23:50
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/01 23:50
Tue Nov 01 23:51:03 CDT 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,630
Failed time : 22/11/02 00:31
=================================================
Project : math_1	start : 22/11/02 00:31
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition | 22/11/02 00:31
Wed Nov 02 00:31:22 CDT 2022 org.apache.commons.math3.util.FastMath,546
Failed time : 22/11/02 00:37
=================================================
Project : math_1	start : 22/11/02 00:37
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition | 22/11/02 00:37
Wed Nov 02 00:38:04 CDT 2022 org.apache.commons.math3.util.FastMath,546
Failed time : 22/11/02 00:44
=================================================
Project : math_1	start : 22/11/02 00:44
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/11/02 00:44
Wed Nov 02 00:45:02 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1229
Failed time : 22/11/02 01:35
=================================================
Project : math_1	start : 22/11/02 01:35
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/11/02 01:35
Wed Nov 02 01:36:00 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1229
Failed time : 22/11/02 02:16
=================================================
Project : math_1	start : 22/11/02 02:16
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/11/02 02:16
Wed Nov 02 02:17:05 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,303
Failed time : 22/11/02 02:23
=================================================
Project : math_1	start : 22/11/02 02:23
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/11/02 02:23
Wed Nov 02 02:23:28 CDT 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,303
Failed time : 22/11/02 02:29
=================================================
Project : math_1	start : 22/11/02 02:29
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/11/02 02:29
Wed Nov 02 02:29:57 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1449
Failed time : 22/11/02 02:51
=================================================
Project : math_1	start : 22/11/02 02:51
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/11/02 02:51
Wed Nov 02 02:52:07 CDT 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1449
Failed time : 22/11/02 03:14
=================================================
Project : math_1	start : 22/11/02 03:14
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/02 03:14
Wed Nov 02 03:14:23 CDT 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,631
Failed time : 22/11/02 03:21
=================================================
Project : math_1	start : 22/11/02 03:21
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/02 03:21
Wed Nov 02 03:21:29 CDT 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,631
Failed time : 22/11/02 03:28
=================================================
Project : math_1	start : 22/11/02 03:28
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/11/02 03:28
Wed Nov 02 03:28:14 CDT 2022 org.apache.commons.math3.util.FastMath,3836
Failed time : 22/11/02 03:31
=================================================
Project : math_1	start : 22/11/02 03:31
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/11/02 03:31
Wed Nov 02 03:31:48 CDT 2022 org.apache.commons.math3.util.FastMath,3836
Failed time : 22/11/02 03:35
=================================================
Project : math_1	start : 22/11/02 03:35
Current failed test : org.apache.commons.math3.dfp.DfpTest::testToString | 22/11/02 03:35
Wed Nov 02 03:35:12 CDT 2022 org.apache.commons.math3.dfp.Dfp,2102
Failed time : 22/11/02 03:38
=================================================
Project : math_1	start : 22/11/02 03:38
Current failed test : org.apache.commons.math3.dfp.DfpTest::testToString | 22/11/02 03:38
Wed Nov 02 03:38:57 CDT 2022 org.apache.commons.math3.dfp.Dfp,2102
Failed time : 22/11/02 03:42
=================================================
Project : math_1	start : 22/11/02 03:42
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testToRadiansDefinition | 22/11/02 03:42
Wed Nov 02 03:42:59 CDT 2022 org.apache.commons.math3.util.FastMath,2957
Failed time : 22/11/02 03:49
=================================================
Project : math_1	start : 22/11/02 03:49
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testToRadiansDefinition | 22/11/02 03:49
Wed Nov 02 03:49:38 CDT 2022 org.apache.commons.math3.util.FastMath,2957
Failed time : 22/11/02 03:56
=================================================
Project : math_1	start : 22/11/02 03:56
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/02 03:56
Wed Nov 02 03:56:20 CDT 2022 org.apache.commons.math3.util.FastMath,427
Failed time : 22/11/02 04:00
=================================================
Project : math_1	start : 22/11/02 04:00
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/02 04:00
Wed Nov 02 04:00:18 CDT 2022 org.apache.commons.math3.util.FastMath,427
Failed time : 22/11/02 04:04
=================================================
Project : math_1	start : 22/11/02 04:04
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/02 04:04
Wed Nov 02 04:04:20 CDT 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,488

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.491183234124117 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n;k>0;--k){
value+=1.0/FastMath.pow(k,m);
}

Time : 22/11/02 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4822647673231124 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n-1;k>=p;--k){
va[k][k]=1;
}

Time : 22/11/02 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4788481838676337 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int i=n-k+1;i<=n;i++){
logSum+=FastMath.log(i);
}

Time : 22/11/02 04:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<=nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4647985144473945 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=j;k<(end-1);++k){
rawLoop[k]=rawLoop[k+1];
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4565412398262683 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int l=0;l<sequence[k];++l){
fk[k][l+1]=new double[y0.length];
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
++k;
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2057912151115735 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=1;j<=k-l2;++j){
factor=FastMath.pow(0.5*sequence[j+l2],l);
middleIndex=fk[l2+j].length/2;
for(int i=0;i<y0.length;++i){
diagonal[j-1][i]=factor*fk[l2+j][middleIndex+l][i];
}
extrapolate(l2,j,diagonal,yMidDots[l+1]);
}

Time : 22/11/02 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:21
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0807945474629004 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=rank;j<nC;++j){
lmDir[permutation[j]]=0;
}

Time : 22/11/02 04:21
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:21
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:21
----------------------------------------
Success time : 22/11/02 04:29
=================================================
Project : math_1	start : 22/11/02 04:29
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/02 04:29
Wed Nov 02 04:29:45 CDT 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,488

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.491183234124117 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n;k>0;--k){
value+=1.0/FastMath.pow(k,m);
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4822647673231124 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n-1;k>=p;--k){
va[k][k]=1;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4788481838676337 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int i=n-k+1;i<=n;i++){
logSum+=FastMath.log(i);
}

Time : 22/11/02 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<=nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4647985144473945 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=j;k<(end-1);++k){
rawLoop[k]=rawLoop[k+1];
}

Time : 22/11/02 04:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4565412398262683 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int l=0;l<sequence[k];++l){
fk[k][l+1]=new double[y0.length];
}

Time : 22/11/02 04:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
++k;
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2057912151115735 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=1;j<=k-l2;++j){
factor=FastMath.pow(0.5*sequence[j+l2],l);
middleIndex=fk[l2+j].length/2;
for(int i=0;i<y0.length;++i){
diagonal[j-1][i]=factor*fk[l2+j][middleIndex+l][i];
}
extrapolate(l2,j,diagonal,yMidDots[l+1]);
}

Time : 22/11/02 04:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0807945474629004 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=rank;j<nC;++j){
lmDir[permutation[j]]=0;
}

Time : 22/11/02 04:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/11/02 04:47
----------------------------------------
Success time : 22/11/02 04:55
=================================================
Project : math_1	start : 22/11/02 04:55
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/02 04:55
Wed Nov 02 04:55:35 CDT 2022 org.apache.commons.math3.util.FastMath,1685
Failed time : 22/11/02 05:06
=================================================
Project : math_1	start : 22/11/02 05:06
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/11/02 05:06
Wed Nov 02 05:06:31 CDT 2022 org.apache.commons.math3.util.FastMath,1685
Failed time : 22/11/02 05:16
=================================================
Project : math_1	start : 22/11/02 05:16
Current failed test : org.apache.commons.math3.stat.inference.TTestTest::testPaired | 22/11/02 05:16
Wed Nov 02 05:16:57 CDT 2022 org.apache.commons.math3.stat.StatUtils,714
Failed time : 22/11/02 05:21
=================================================
Project : math_1	start : 22/11/02 05:21
Current failed test : org.apache.commons.math3.stat.inference.TTestTest::testPaired | 22/11/02 05:21
Wed Nov 02 05:22:02 CDT 2022 org.apache.commons.math3.stat.StatUtils,714
Failed time : 22/11/02 05:26
=================================================
Project : math_1	start : 22/11/02 05:26
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testExamples | 22/11/02 05:26
Wed Nov 02 05:27:04 CDT 2022 org.apache.commons.math3.linear.FieldLUDecomposition,369
Failed time : 22/11/02 05:41
=================================================
Project : math_1	start : 22/11/02 05:41
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testExamples | 22/11/02 05:41
Wed Nov 02 05:41:16 CDT 2022 org.apache.commons.math3.linear.FieldLUDecomposition,369
Failed time : 22/11/02 05:55
=================================================
Project : math_1	start : 22/11/02 05:55
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/02 05:55
Wed Nov 02 05:55:27 CDT 2022 org.apache.commons.math3.util.FastMath,1912
Failed time : 22/11/02 06:04
=================================================
Project : math_1	start : 22/11/02 06:04
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/02 06:04
Wed Nov 02 06:04:51 CDT 2022 org.apache.commons.math3.util.FastMath,1912
Failed time : 22/11/02 06:13
=================================================
Project : math_1	start : 22/11/02 06:13
Current failed test : org.apache.commons.math3.distribution.GammaDistributionTest::testProbabilities | 22/11/02 06:13
Wed Nov 02 06:13:24 CDT 2022 org.apache.commons.math3.distribution.GammaDistribution,277
Failed time : 22/11/02 06:16
=================================================
Project : math_1	start : 22/11/02 06:16
Current failed test : org.apache.commons.math3.distribution.GammaDistributionTest::testProbabilities | 22/11/02 06:16
Wed Nov 02 06:17:01 CDT 2022 org.apache.commons.math3.distribution.GammaDistribution,277
Failed time : 22/11/02 06:20
=================================================
Project : math_1	start : 22/11/02 06:20
Current failed test : org.apache.commons.math3.distribution.NormalDistributionTest::testMath280 | 22/11/02 06:20
Wed Nov 02 06:20:31 CDT 2022 org.apache.commons.math3.special.Erf,185
Failed time : 22/11/02 06:35
=================================================
Project : math_1	start : 22/11/02 06:35
Current failed test : org.apache.commons.math3.distribution.NormalDistributionTest::testMath280 | 22/11/02 06:35
Wed Nov 02 06:35:36 CDT 2022 org.apache.commons.math3.special.Erf,185
Failed time : 22/11/02 06:48
=================================================
Project : math_1	start : 22/11/17 10:41
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/11/17 10:41
Thu Nov 17 10:41:56 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:44
----------------------------------------
Success time : 22/11/17 10:45
=================================================
Project : math_1	start : 22/11/17 10:45
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/11/17 10:46
Thu Nov 17 10:46:06 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:49
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/11/17 10:49
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 10:49
----------------------------------------
Success time : 22/11/17 10:50
=================================================
Project : math_1	start : 22/11/17 10:50
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/17 10:50
Thu Nov 17 10:50:18 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:50
----------------------------------------
Success time : 22/11/17 10:51
=================================================
Project : math_1	start : 22/11/17 10:51
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/17 10:51
Thu Nov 17 10:51:50 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 10:52
----------------------------------------
Success time : 22/11/17 10:53
=================================================
Project : math_1	start : 22/11/17 10:53
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/17 10:53
Thu Nov 17 10:53:24 CST 2022 org.apache.commons.math3.random.Well44497b,113
Failed time : 22/11/17 10:53
=================================================
Project : math_1	start : 22/11/17 10:53
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/17 10:53
Thu Nov 17 10:53:52 CST 2022 org.apache.commons.math3.random.Well44497b,113
Failed time : 22/11/17 10:54
=================================================
Project : math_1	start : 22/11/17 10:54
Current failed test : org.apache.commons.math3.fraction.FractionFormatTest::testParseOne2 | 22/11/17 10:54
Thu Nov 17 10:54:21 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,361

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 10:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.03710660764619 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
 final int shift=FastMath.min(aTwos,bTwos);
while(a!=b){
 final int delta=a-b;
b=FastMath.min(a,b);
a=FastMath.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 10:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a>>>shift;

Time : 22/11/17 10:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 10:55
----------------------------------------
Success time : 22/11/17 10:59
=================================================
Project : math_1	start : 22/11/17 10:59
Current failed test : org.apache.commons.math3.fraction.FractionFormatTest::testParseOne2 | 22/11/17 10:59
Thu Nov 17 11:00:06 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,361

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 11:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.03710660764619 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
 final int shift=FastMath.min(aTwos,bTwos);
while(a!=b){
 final int delta=a-b;
b=FastMath.min(a,b);
a=FastMath.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 11:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a>>>shift;

Time : 22/11/17 11:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/11/17 11:01
----------------------------------------
Success time : 22/11/17 11:05
=================================================
Project : math_1	start : 22/11/17 11:05
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/17 11:05
Thu Nov 17 11:05:50 CST 2022 org.apache.commons.math3.util.FastMath,3088
Failed time : 22/11/17 11:05
=================================================
Project : math_1	start : 22/11/17 11:05
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/17 11:05
Thu Nov 17 11:05:59 CST 2022 org.apache.commons.math3.util.FastMath,3088
Failed time : 22/11/17 11:06
=================================================
Project : math_1	start : 22/11/17 11:06
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/17 11:06
Thu Nov 17 11:06:09 CST 2022 org.apache.commons.math3.random.Well44497b,99
Failed time : 22/11/17 11:06
=================================================
Project : math_1	start : 22/11/17 11:06
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/17 11:06
Thu Nov 17 11:06:51 CST 2022 org.apache.commons.math3.random.Well44497b,99
Failed time : 22/11/17 11:07
=================================================
Project : math_1	start : 22/11/17 11:07
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:07
Thu Nov 17 11:07:33 CST 2022 org.apache.commons.math3.util.FastMath,2128
Failed time : 22/11/17 11:07
=================================================
Project : math_1	start : 22/11/17 11:07
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:07
Thu Nov 17 11:08:04 CST 2022 org.apache.commons.math3.util.FastMath,2128
Failed time : 22/11/17 11:08
=================================================
Project : math_1	start : 22/11/17 11:08
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/17 11:08
Thu Nov 17 11:08:35 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,205
Failed time : 22/11/17 11:08
=================================================
Project : math_1	start : 22/11/17 11:08
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/17 11:08
Thu Nov 17 11:09:05 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,205
Failed time : 22/11/17 11:09
=================================================
Project : math_1	start : 22/11/17 11:09
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/11/17 11:09
Thu Nov 17 11:09:35 CST 2022 org.apache.commons.math3.random.Well19937c,96
Failed time : 22/11/17 11:10
=================================================
Project : math_1	start : 22/11/17 11:10
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/11/17 11:10
Thu Nov 17 11:10:12 CST 2022 org.apache.commons.math3.random.Well19937c,96
Failed time : 22/11/17 11:10
=================================================
Project : math_1	start : 22/11/17 11:10
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[34] | 22/11/17 11:10
Thu Nov 17 11:10:49 CST 2022 org.apache.commons.math3.util.FastMath,2862
Failed time : 22/11/17 11:14
=================================================
Project : math_1	start : 22/11/17 11:14
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[34] | 22/11/17 11:14
Thu Nov 17 11:14:50 CST 2022 org.apache.commons.math3.util.FastMath,2862
Failed time : 22/11/17 11:18
=================================================
Project : math_1	start : 22/11/17 11:18
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:18
Thu Nov 17 11:18:51 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/11/17 11:19
=================================================
Project : math_1	start : 22/11/17 11:19
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:19
Thu Nov 17 11:19:21 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/11/17 11:19
=================================================
Project : math_1	start : 22/11/17 11:19
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/11/17 11:19
Thu Nov 17 11:19:53 CST 2022 org.apache.commons.math3.random.Well19937c,95
Failed time : 22/11/17 11:20
=================================================
Project : math_1	start : 22/11/17 11:20
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/11/17 11:21
Thu Nov 17 11:21:06 CST 2022 org.apache.commons.math3.random.Well19937c,95
Failed time : 22/11/17 11:22
=================================================
Project : math_1	start : 22/11/17 11:22
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testEquivalence | 22/11/17 11:22
Thu Nov 17 11:22:21 CST 2022 org.apache.commons.math3.random.ISAACRandom,183
Failed time : 22/11/17 11:26
=================================================
Project : math_1	start : 22/11/17 11:26
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testEquivalence | 22/11/17 11:26
Thu Nov 17 11:26:21 CST 2022 org.apache.commons.math3.random.ISAACRandom,183
Failed time : 22/11/17 11:30
=================================================
Project : math_1	start : 22/11/17 11:30
Current failed test : org.apache.commons.math3.util.CombinatoricsUtilsTest::testStirlingS2 | 22/11/17 11:30
Thu Nov 17 11:30:21 CST 2022 org.apache.commons.math3.util.CombinatoricsUtils,400
Failed time : 22/11/17 11:30
=================================================
Project : math_1	start : 22/11/17 11:30
Current failed test : org.apache.commons.math3.util.CombinatoricsUtilsTest::testStirlingS2 | 22/11/17 11:30
Thu Nov 17 11:30:30 CST 2022 org.apache.commons.math3.util.CombinatoricsUtils,400
Failed time : 22/11/17 11:30
=================================================
Project : math_1	start : 22/11/17 11:30
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/17 11:30
Thu Nov 17 11:30:40 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:31
----------------------------------------
Success time : 22/11/17 11:32
=================================================
Project : math_1	start : 22/11/17 11:32
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/17 11:32
Thu Nov 17 11:32:12 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/11/17 11:32
----------------------------------------
Success time : 22/11/17 11:33
=================================================
Project : math_1	start : 22/11/17 11:33
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testSampling | 22/11/17 11:33
Thu Nov 17 11:33:44 CST 2022 org.apache.commons.math3.random.Well19937a,105

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.79098660709696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5991129356476133 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/11/17 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1185990951229758 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
if(count<0){
isaac();
count=SIZE-1;
}
return rsl[count--]>>>32-bits;

Time : 22/11/17 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/11/17 11:36
----------------------------------------
Success time : 22/11/17 11:36
=================================================
Project : math_1	start : 22/11/17 11:36
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testSampling | 22/11/17 11:36
Thu Nov 17 11:36:59 CST 2022 org.apache.commons.math3.random.Well19937a,105

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.79098660709696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5991129356476133 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/11/17 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/11/17 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1185990951229758 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
if(count<0){
isaac();
count=SIZE-1;
}
return rsl[count--]>>>32-bits;

Time : 22/11/17 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/11/17 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/11/17 11:39
----------------------------------------
Success time : 22/11/17 11:40
=================================================
Project : math_1	start : 22/11/17 11:40
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/11/17 11:40
Thu Nov 17 11:40:15 CST 2022 Thu Nov 17 11:40:15 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/11/17 11:40
=================================================
Project : math_1	start : 22/11/17 11:40
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/11/17 11:40
Thu Nov 17 11:40:23 CST 2022 Thu Nov 17 11:40:23 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/11/17 11:40
=================================================
Project : math_1	start : 22/11/17 11:40
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdLong | 22/11/17 11:40
Thu Nov 17 11:40:32 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/11/17 11:43
=================================================
Project : math_1	start : 22/11/17 11:43
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdLong | 22/11/17 11:43
Thu Nov 17 11:44:03 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/11/17 11:47
=================================================
Project : math_1	start : 22/11/17 11:47
Current failed test : org.apache.commons.math3.transform.FastSineTransformerTest::testAdHocData[0] | 22/11/17 11:47
Thu Nov 17 11:47:34 CST 2022 org.apache.commons.math3.transform.FastSineTransformer,160
Failed time : 22/11/17 11:52
=================================================
Project : math_1	start : 22/11/17 11:52
Current failed test : org.apache.commons.math3.transform.FastSineTransformerTest::testAdHocData[0] | 22/11/17 11:52
Thu Nov 17 11:52:13 CST 2022 org.apache.commons.math3.transform.FastSineTransformer,160
Failed time : 22/11/17 11:56
=================================================
Project : math_1	start : 22/11/17 11:56
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/17 11:56
Thu Nov 17 11:56:53 CST 2022 org.apache.commons.math3.util.FastMath,3093
Failed time : 22/11/17 11:57
=================================================
Project : math_1	start : 22/11/17 11:57
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/17 11:57
Thu Nov 17 11:57:37 CST 2022 org.apache.commons.math3.util.FastMath,3093
Failed time : 22/11/17 11:58
=================================================
Project : math_1	start : 22/11/17 11:58
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:58
Thu Nov 17 11:58:22 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/11/17 11:58
=================================================
Project : math_1	start : 22/11/17 11:58
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 11:58
Thu Nov 17 11:58:52 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/11/17 11:59
=================================================
Project : math_1	start : 22/11/17 11:59
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleRotations | 22/11/17 11:59
Thu Nov 17 11:59:24 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,941
Failed time : 22/11/17 12:00
=================================================
Project : math_1	start : 22/11/17 12:00
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleRotations | 22/11/17 12:00
Thu Nov 17 12:00:24 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,941
Failed time : 22/11/17 12:01
=================================================
Project : math_1	start : 22/11/17 12:01
Current failed test : org.apache.commons.math3.complex.ComplexTest::testExp | 22/11/17 12:01
Thu Nov 17 12:01:25 CST 2022 org.apache.commons.math3.complex.Complex,505
Failed time : 22/11/17 12:02
=================================================
Project : math_1	start : 22/11/17 12:02
Current failed test : org.apache.commons.math3.complex.ComplexTest::testExp | 22/11/17 12:02
Thu Nov 17 12:02:41 CST 2022 org.apache.commons.math3.complex.Complex,505
Failed time : 22/11/17 12:03
=================================================
Project : math_1	start : 22/11/17 12:03
Current failed test : org.apache.commons.math3.complex.RootsOfUnityTest::testComputeRoots | 22/11/17 12:03
Thu Nov 17 12:03:59 CST 2022 org.apache.commons.math3.util.FastMath,2992
Failed time : 22/11/17 12:05
=================================================
Project : math_1	start : 22/11/17 12:05
Current failed test : org.apache.commons.math3.complex.RootsOfUnityTest::testComputeRoots | 22/11/17 12:05
Thu Nov 17 12:05:11 CST 2022 org.apache.commons.math3.util.FastMath,2992
Failed time : 22/11/17 12:06
=================================================
Project : math_1	start : 22/11/17 12:06
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/11/17 12:06
Thu Nov 17 12:06:24 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,183
Failed time : 22/11/17 12:20
=================================================
Project : math_1	start : 22/11/17 12:20
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/11/17 12:20
Thu Nov 17 12:20:13 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,183
Failed time : 22/11/17 12:33
=================================================
Project : math_1	start : 22/11/17 12:33
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testPowDoubleDS | 22/11/17 12:33
Thu Nov 17 12:34:05 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,860
Failed time : 22/11/17 12:44
=================================================
Project : math_1	start : 22/11/17 12:44
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testPowDoubleDS | 22/11/17 12:44
Thu Nov 17 12:44:51 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,860
Failed time : 22/11/17 12:55
=================================================
Project : math_1	start : 22/11/17 12:55
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testSubtract | 22/11/17 12:55
Thu Nov 17 12:55:40 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,505
Failed time : 22/11/17 12:55
=================================================
Project : math_1	start : 22/11/17 12:55
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testSubtract | 22/11/17 12:55
Thu Nov 17 12:55:49 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,505
Failed time : 22/11/17 12:55
=================================================
Project : math_1	start : 22/11/17 12:55
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.LineTest::testContains | 22/11/17 12:55
Thu Nov 17 12:55:59 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Line,165
Failed time : 22/11/17 12:56
=================================================
Project : math_1	start : 22/11/17 12:56
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.LineTest::testContains | 22/11/17 12:56
Thu Nov 17 12:56:34 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Line,165
Failed time : 22/11/17 12:57
=================================================
Project : math_1	start : 22/11/17 12:57
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/17 12:57
Thu Nov 17 12:57:10 CST 2022 org.apache.commons.math3.util.FastMath,2546
Failed time : 22/11/17 13:06
=================================================
Project : math_1	start : 22/11/17 13:06
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/17 13:06
Thu Nov 17 13:06:10 CST 2022 org.apache.commons.math3.util.FastMath,2546
Failed time : 22/11/17 13:15
=================================================
Project : math_1	start : 22/11/17 13:15
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/17 13:15
Thu Nov 17 13:15:12 CST 2022 org.apache.commons.math3.special.Erf,170
Failed time : 22/11/17 13:21
=================================================
Project : math_1	start : 22/11/17 13:21
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/17 13:21
Thu Nov 17 13:21:58 CST 2022 org.apache.commons.math3.special.Erf,170
Failed time : 22/11/17 13:28
=================================================
Project : math_1	start : 22/11/17 13:28
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 13:28
Thu Nov 17 13:28:45 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,793
Failed time : 22/11/17 13:28
=================================================
Project : math_1	start : 22/11/17 13:28
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 13:28
Thu Nov 17 13:28:54 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,793
Failed time : 22/11/17 13:28
=================================================
Project : math_1	start : 22/11/17 13:28
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[45] | 22/11/17 13:28
Thu Nov 17 13:29:04 CST 2022 org.apache.commons.math3.util.FastMath,665
Failed time : 22/11/17 13:31
=================================================
Project : math_1	start : 22/11/17 13:31
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[45] | 22/11/17 13:31
Thu Nov 17 13:31:14 CST 2022 org.apache.commons.math3.util.FastMath,665
Failed time : 22/11/17 13:33
=================================================
Project : math_1	start : 22/11/17 13:33
Current failed test : org.apache.commons.math3.util.FastMathTest::testHyperbolic | 22/11/17 13:33
Thu Nov 17 13:33:23 CST 2022 org.apache.commons.math3.util.FastMath,486

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.2073207578096325 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<mu){
return Double.NaN;
}
 final double delta=x-mu;
 final double f=halfC/delta;
return FastMath.sqrt(f/FastMath.PI)*FastMath.exp(-f)/delta;

Time : 22/11/17 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3130608311188006 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<scale){
return 0;
}
return FastMath.pow(scale,shape)/FastMath.pow(x,shape+1)*shape;

Time : 22/11/17 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9922172206645492 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(FastMath.abs(y3)<=functionValueAccuracy){
return x3;
}
 final double delta=1-(y1*y2)/(y3*y3);
 final double correction=(FastMath.signum(y2)*FastMath.signum(y3))*(x3-x1)/FastMath.sqrt(delta);
 final double x=x3-correction;
 final double y=computeObjectiveValue(x);
 final double tolerance=FastMath.max(relativeAccuracy*FastMath.abs(x),absoluteAccuracy);
if(FastMath.abs(x-oldx)<=tolerance){
return x;
}

Time : 22/11/17 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:37
----------------------------------------
Success time : 22/11/17 13:37
=================================================
Project : math_1	start : 22/11/17 13:37
Current failed test : org.apache.commons.math3.util.FastMathTest::testHyperbolic | 22/11/17 13:37
Thu Nov 17 13:37:38 CST 2022 org.apache.commons.math3.util.FastMath,486

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.2073207578096325 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<mu){
return Double.NaN;
}
 final double delta=x-mu;
 final double f=halfC/delta;
return FastMath.sqrt(f/FastMath.PI)*FastMath.exp(-f)/delta;

Time : 22/11/17 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3130608311188006 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<scale){
return 0;
}
return FastMath.pow(scale,shape)/FastMath.pow(x,shape+1)*shape;

Time : 22/11/17 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9922172206645492 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(FastMath.abs(y3)<=functionValueAccuracy){
return x3;
}
 final double delta=1-(y1*y2)/(y3*y3);
 final double correction=(FastMath.signum(y2)*FastMath.signum(y3))*(x3-x1)/FastMath.sqrt(delta);
 final double x=x3-correction;
 final double y=computeObjectiveValue(x);
 final double tolerance=FastMath.max(relativeAccuracy*FastMath.abs(x),absoluteAccuracy);
if(FastMath.abs(x-oldx)<=tolerance){
return x;
}

Time : 22/11/17 13:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/11/17 13:41
----------------------------------------
Success time : 22/11/17 13:41
=================================================
Project : math_1	start : 22/11/17 13:41
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testTetrahedron | 22/11/17 13:41
Thu Nov 17 13:41:56 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.053529531273319 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(epsilon==0.0&&FastMath.abs(q1)<maxDenominator){
break;
}
throw new FractionConversionException(value,p2,q2);
}

Time : 22/11/17 13:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.984666428506299 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.sqrt(FastMath.abs(meanXSquared-meanX*meanX))<accuracy){
beta=0;
}else {
beta=(meanXY-meanX*meanY)/(meanXSquared-meanX*meanX);
}

Time : 22/11/17 13:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/11/17 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/11/17 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:51
----------------------------------------
Success time : 22/11/17 13:53
=================================================
Project : math_1	start : 22/11/17 13:53
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testTetrahedron | 22/11/17 13:53
Thu Nov 17 13:53:34 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.053529531273319 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(epsilon==0.0&&FastMath.abs(q1)<maxDenominator){
break;
}
throw new FractionConversionException(value,p2,q2);
}

Time : 22/11/17 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.984666428506299 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.sqrt(FastMath.abs(meanXSquared-meanX*meanX))<accuracy){
beta=0;
}else {
beta=(meanXY-meanX*meanY)/(meanXSquared-meanX*meanX);
}

Time : 22/11/17 13:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 13:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/11/17 14:02
----------------------------------------
Success time : 22/11/17 14:05
=================================================
Project : math_1	start : 22/11/17 14:05
Current failed test : org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest::testBackward | 22/11/17 14:05
Thu Nov 17 14:05:15 CST 2022 org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator,101
Failed time : 22/11/17 14:05
=================================================
Project : math_1	start : 22/11/17 14:05
Current failed test : org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest::testBackward | 22/11/17 14:05
Thu Nov 17 14:05:39 CST 2022 org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator,101
Failed time : 22/11/17 14:05
=================================================
Project : math_1	start : 22/11/17 14:05
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/11/17 14:05
Thu Nov 17 14:06:04 CST 2022 org.apache.commons.math3.util.FastMath,565
Failed time : 22/11/17 14:14
=================================================
Project : math_1	start : 22/11/17 14:14
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/11/17 14:14
Thu Nov 17 14:14:52 CST 2022 org.apache.commons.math3.util.FastMath,565
Failed time : 22/11/17 14:23
=================================================
Project : math_1	start : 22/11/17 14:23
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testModelsMerging | 22/11/17 14:23
Thu Nov 17 14:23:40 CST 2022 org.apache.commons.math3.ode.ContinuousOutputModel,377
Failed time : 22/11/17 14:23
=================================================
Project : math_1	start : 22/11/17 14:23
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testModelsMerging | 22/11/17 14:23
Thu Nov 17 14:23:55 CST 2022 org.apache.commons.math3.ode.ContinuousOutputModel,377
Failed time : 22/11/17 14:24
=================================================
Project : math_1	start : 22/11/17 14:24
Current failed test : org.apache.commons.math3.ode.events.EventStateTest::testIssue695 | 22/11/17 14:24
Thu Nov 17 14:24:11 CST 2022 org.apache.commons.math3.ode.AbstractIntegrator,329
Failed time : 22/11/17 14:24
=================================================
Project : math_1	start : 22/11/17 14:24
Current failed test : org.apache.commons.math3.ode.events.EventStateTest::testIssue695 | 22/11/17 14:24
Thu Nov 17 14:25:01 CST 2022 org.apache.commons.math3.ode.AbstractIntegrator,329
Failed time : 22/11/17 14:25
=================================================
Project : math_1	start : 22/11/17 14:25
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 14:25
Thu Nov 17 14:25:52 CST 2022 org.apache.commons.math3.dfp.Dfp,2494
Failed time : 22/11/17 14:26
=================================================
Project : math_1	start : 22/11/17 14:26
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/17 14:26
Thu Nov 17 14:26:47 CST 2022 org.apache.commons.math3.dfp.Dfp,2494
Failed time : 22/11/17 14:27
=================================================
Project : math_1	start : 22/11/17 14:27
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest::testAllMonomials[1] | 22/11/17 14:27
Thu Nov 17 14:27:43 CST 2022 org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator,84
Failed time : 22/11/17 14:57
=================================================
Project : math_1	start : 22/11/17 14:57
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest::testAllMonomials[1] | 22/11/17 14:57
Thu Nov 17 14:58:02 CST 2022 org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator,84
Failed time : 22/11/17 15:28
=================================================
Project : math_1	start : 22/11/17 15:28
Current failed test : org.apache.commons.math3.dfp.DfpTest::testTan | 22/11/17 15:28
Thu Nov 17 15:28:23 CST 2022 org.apache.commons.math3.util.FastMath,2413
Failed time : 22/11/17 15:28
=================================================
Project : math_1	start : 22/11/17 15:28
Current failed test : org.apache.commons.math3.dfp.DfpTest::testTan | 22/11/17 15:28
Thu Nov 17 15:28:58 CST 2022 org.apache.commons.math3.util.FastMath,2413
Failed time : 22/11/17 15:29
=================================================
Project : math_1	start : 22/11/17 15:29
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/11/17 15:29
Thu Nov 17 15:29:35 CST 2022 org.apache.commons.math3.stat.inference.GTest,277
Failed time : 22/11/17 15:46
=================================================
Project : math_1	start : 22/11/17 15:46
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/11/17 15:46
Thu Nov 17 15:46:38 CST 2022 org.apache.commons.math3.stat.inference.GTest,277
Failed time : 22/11/17 16:03
=================================================
Project : math_1	start : 22/11/17 16:03
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/11/17 16:03
Thu Nov 17 16:03:42 CST 2022 org.apache.commons.math3.util.FastMath,561
Failed time : 22/11/17 16:20
=================================================
Project : math_1	start : 22/11/17 16:20
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/11/17 16:20
Thu Nov 17 16:20:59 CST 2022 org.apache.commons.math3.util.FastMath,561
Failed time : 22/11/17 16:38
=================================================
Project : math_1	start : 22/11/17 16:38
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinAsin | 22/11/17 16:38
Thu Nov 17 16:38:16 CST 2022 org.apache.commons.math3.util.FastMath,2706

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7578414886923188 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}

Time : 22/11/17 16:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/11/17 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/11/17 16:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/11/17 16:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/11/17 16:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/11/17 16:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/11/17 16:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/11/17 16:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5021086526239489 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<0||invx<0){
if(y<0||invy<0){
return -Math.PI;
}else {
return Math.PI;
}
}else {
return result;
}

Time : 22/11/17 16:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/11/17 16:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/11/17 16:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/17 16:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/11/17 16:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/11/17 16:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(c<x&&x<=b){
double divident=2*(b-x);
double divisor=(b-a)*(b-c);
return divident/divisor;
}

Time : 22/11/17 16:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/11/17 16:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/11/17 16:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0567451826185024 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=(x-a)*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/17 16:51
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:51
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/11/17 16:51
----------------------------------------
Success time : 22/11/17 16:51
=================================================
Project : math_1	start : 22/11/17 16:51
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinAsin | 22/11/17 16:51
Thu Nov 17 16:51:47 CST 2022 org.apache.commons.math3.util.FastMath,2706

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/11/17 16:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7578414886923188 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}

Time : 22/11/17 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/11/17 16:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:56
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:56
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/11/17 16:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/11/17 16:56
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:57
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:57
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/11/17 16:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/11/17 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/11/17 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/11/17 16:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/11/17 16:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5021086526239489 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<0||invx<0){
if(y<0||invy<0){
return -Math.PI;
}else {
return Math.PI;
}
}else {
return result;
}

Time : 22/11/17 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/11/17 17:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/11/17 17:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/17 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/11/17 17:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/11/17 17:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(c<x&&x<=b){
double divident=2*(b-x);
double divisor=(b-a)*(b-c);
return divident/divisor;
}

Time : 22/11/17 17:03
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 17:03
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/11/17 17:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/11/17 17:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0567451826185024 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=(x-a)*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/11/17 17:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/11/17 17:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/11/17 17:05
----------------------------------------
Success time : 22/11/17 17:05
=================================================
Project : math_1	start : 22/11/17 17:05
Current failed test : org.apache.commons.math3.optimization.direct.PowellOptimizerTest::testSumSinc | 22/11/17 17:05
Thu Nov 17 17:05:21 CST 2022 org.apache.commons.math3.optimization.univariate.BrentOptimizer,176
Failed time : 22/11/17 17:06
=================================================
Project : math_1	start : 22/11/17 17:06
Current failed test : org.apache.commons.math3.optimization.direct.PowellOptimizerTest::testSumSinc | 22/11/17 17:06
Thu Nov 17 17:06:30 CST 2022 org.apache.commons.math3.optimization.univariate.BrentOptimizer,176
Failed time : 22/11/17 17:07
=================================================
Project : math_1	start : 22/11/17 17:07
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 17:07
Thu Nov 17 17:07:39 CST 2022 Thu Nov 17 17:07:39 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,794=>Find no block
Failed time : 22/11/17 17:07
=================================================
Project : math_1	start : 22/11/17 17:07
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 17:07
Thu Nov 17 17:07:47 CST 2022 Thu Nov 17 17:07:47 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,794=>Find no block
Failed time : 22/11/17 17:07
=================================================
Project : math_1	start : 22/11/17 17:07
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testFitAccuracyDependsOnBoundary | 22/11/17 17:07
Thu Nov 17 17:07:56 CST 2022 org.apache.commons.math3.util.Decimal64,444
Failed time : 22/11/17 17:08
=================================================
Project : math_1	start : 22/11/17 17:08
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testFitAccuracyDependsOnBoundary | 22/11/17 17:08
Thu Nov 17 17:08:40 CST 2022 org.apache.commons.math3.util.Decimal64,444
Failed time : 22/11/17 17:09
=================================================
Project : math_1	start : 22/11/17 17:09
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testVectorTwoPairs | 22/11/17 17:09
Thu Nov 17 17:09:24 CST 2022 Thu Nov 17 17:09:24 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,921=>Find no block
Failed time : 22/11/17 17:09
=================================================
Project : math_1	start : 22/11/17 17:09
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testVectorTwoPairs | 22/11/17 17:09
Thu Nov 17 17:09:32 CST 2022 Thu Nov 17 17:09:32 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,921=>Find no block
Failed time : 22/11/17 17:09
=================================================
Project : math_1	start : 22/11/17 17:09
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSignum | 22/11/17 17:09
Thu Nov 17 17:09:41 CST 2022 org.apache.commons.math3.util.FastMath,780
Failed time : 22/11/17 17:09
=================================================
Project : math_1	start : 22/11/17 17:09
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSignum | 22/11/17 17:09
Thu Nov 17 17:09:50 CST 2022 org.apache.commons.math3.util.FastMath,780
Failed time : 22/11/17 17:09
=================================================
Project : math_1	start : 22/11/17 17:09
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testNorm | 22/11/17 17:09
Thu Nov 17 17:10:00 CST 2022 org.apache.commons.math3.complex.Quaternion,115
Failed time : 22/11/17 17:10
=================================================
Project : math_1	start : 22/11/17 17:10
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testNorm | 22/11/17 17:10
Thu Nov 17 17:10:09 CST 2022 org.apache.commons.math3.complex.Quaternion,115
Failed time : 22/11/17 17:10
=================================================
Project : math_1	start : 22/11/17 17:10
Current failed test : org.apache.commons.math3.complex.ComplexTest::testConjugate | 22/11/17 17:10
Thu Nov 17 17:10:19 CST 2022 org.apache.commons.math3.complex.Complex,201
Failed time : 22/11/17 17:11
=================================================
Project : math_1	start : 22/11/17 17:11
Current failed test : org.apache.commons.math3.complex.ComplexTest::testConjugate | 22/11/17 17:11
Thu Nov 17 17:11:36 CST 2022 org.apache.commons.math3.complex.Complex,201
Failed time : 22/11/17 17:12
=================================================
Project : math_1	start : 22/11/17 17:12
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/11/17 17:12
Thu Nov 17 17:12:55 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,583

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:22
----------------------------------------
Failed time : 22/11/17 17:23
=================================================
Project : math_1	start : 22/11/17 17:23
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/11/17 17:23
Thu Nov 17 17:23:48 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,583

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/11/17 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/11/17 17:33
----------------------------------------
Failed time : 22/11/17 17:34
=================================================
Project : math_1	start : 22/11/17 17:34
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/17 17:34
Thu Nov 17 17:34:38 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,270
Failed time : 22/11/17 17:35
=================================================
Project : math_1	start : 22/11/17 17:35
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/17 17:35
Thu Nov 17 17:35:52 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,270
Failed time : 22/11/17 17:36
=================================================
Project : math_1	start : 22/11/17 17:37
Current failed test : org.apache.commons.math3.linear.MatrixUtilsTest::testBlockInverse | 22/11/17 17:37
Thu Nov 17 17:37:08 CST 2022 org.apache.commons.math3.linear.SingularValueDecomposition,124
Failed time : 22/11/17 17:37
=================================================
Project : math_1	start : 22/11/17 17:37
Current failed test : org.apache.commons.math3.linear.MatrixUtilsTest::testBlockInverse | 22/11/17 17:37
Thu Nov 17 17:37:57 CST 2022 org.apache.commons.math3.linear.SingularValueDecomposition,124
Failed time : 22/11/17 17:38
=================================================
Project : math_1	start : 22/11/17 17:38
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/17 17:38
Thu Nov 17 17:38:47 CST 2022 org.apache.commons.math3.special.Erf,165
Failed time : 22/11/17 17:45
=================================================
Project : math_1	start : 22/11/17 17:45
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/11/17 17:45
Thu Nov 17 17:45:10 CST 2022 org.apache.commons.math3.special.Erf,165
Failed time : 22/11/17 17:51
=================================================
Project : math_1	start : 22/11/17 17:51
Current failed test : org.apache.commons.math3.linear.SchurTransformerTest::testRandomData | 22/11/17 17:51
Thu Nov 17 17:51:35 CST 2022 org.apache.commons.math3.linear.SchurTransformer,384
Failed time : 22/11/17 17:54
=================================================
Project : math_1	start : 22/11/17 17:54
Current failed test : org.apache.commons.math3.linear.SchurTransformerTest::testRandomData | 22/11/17 17:54
Thu Nov 17 17:54:25 CST 2022 org.apache.commons.math3.linear.SchurTransformer,384
Failed time : 22/11/17 17:57
=================================================
Project : math_1	start : 22/11/17 17:57
Current failed test : org.apache.commons.math3.util.FastMathTest::testAsinAccuracy | 22/11/17 17:57
Thu Nov 17 17:57:15 CST 2022 org.apache.commons.math3.util.FastMath,2764
Failed time : 22/11/17 18:47
=================================================
Project : math_1	start : 22/11/17 18:47
Current failed test : org.apache.commons.math3.util.FastMathTest::testAsinAccuracy | 22/11/17 18:47
Thu Nov 17 18:47:39 CST 2022 org.apache.commons.math3.util.FastMath,2764
Failed time : 22/11/17 19:37
=================================================
Project : math_1	start : 22/11/17 19:37
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/17 19:37
Thu Nov 17 19:37:56 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,793
Failed time : 22/11/17 19:58
=================================================
Project : math_1	start : 22/11/17 19:58
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/17 19:58
Thu Nov 17 19:58:36 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,793
Failed time : 22/11/17 20:19
=================================================
Project : math_1	start : 22/11/17 20:19
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testNeta | 22/11/17 20:19
Thu Nov 17 20:19:15 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/11/17 20:20
=================================================
Project : math_1	start : 22/11/17 20:20
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testNeta | 22/11/17 20:20
Thu Nov 17 20:20:20 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/11/17 20:21
=================================================
Project : math_1	start : 22/11/17 20:21
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/11/17 20:21
Thu Nov 17 20:21:25 CST 2022 org.apache.commons.math3.util.FastMath,2817
Failed time : 22/11/17 20:29
=================================================
Project : math_1	start : 22/11/17 20:29
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/11/17 20:29
Thu Nov 17 20:29:33 CST 2022 org.apache.commons.math3.util.FastMath,2817
Failed time : 22/11/17 20:37
=================================================
Project : math_1	start : 22/11/17 20:37
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/11/17 20:37
Thu Nov 17 20:37:43 CST 2022 org.apache.commons.math3.util.FastMath,2849
Failed time : 22/11/17 20:46
=================================================
Project : math_1	start : 22/11/17 20:46
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/11/17 20:46
Thu Nov 17 20:46:53 CST 2022 org.apache.commons.math3.util.FastMath,2849
Failed time : 22/11/17 20:55
=================================================
Project : math_1	start : 22/11/17 20:55
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/11/17 20:55
Thu Nov 17 20:56:04 CST 2022 org.apache.commons.math3.util.FastMath,675
Failed time : 22/11/17 21:05
=================================================
Project : math_1	start : 22/11/17 21:05
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/11/17 21:05
Thu Nov 17 21:05:33 CST 2022 org.apache.commons.math3.util.FastMath,675
Failed time : 22/11/17 21:14
=================================================
Project : math_1	start : 22/11/17 21:14
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/11/17 21:14
Thu Nov 17 21:15:02 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,268
Failed time : 22/11/17 21:37
=================================================
Project : math_1	start : 22/11/17 21:37
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/11/17 21:37
Thu Nov 17 21:37:47 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,268
Failed time : 22/11/17 22:00
=================================================
Project : math_1	start : 22/11/17 22:00
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testVectorOnePair | 22/11/17 22:00
Thu Nov 17 22:00:40 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,448

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<+0.1)&&(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5013541523645468 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>0,0]
 final FieldVector3D<T> v1=applyTo(vector(0,0,1));
 final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}
return buildArray(v1.getY().negate().atan2(v1.getZ()),v2.getZ().asin(),v2.getY().negate().atan2(v2.getX()));

Time : 22/11/17 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<+0.1)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:26
----------------------------------------
Success time : 22/11/17 22:27
=================================================
Project : math_1	start : 22/11/17 22:27
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testVectorOnePair | 22/11/17 22:27
Thu Nov 17 22:27:53 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,448

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<+0.1)&&(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5013541523645468 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>0,0]
 final FieldVector3D<T> v1=applyTo(vector(0,0,1));
 final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}
return buildArray(v1.getY().negate().atan2(v1.getZ()),v2.getZ().asin(),v2.getY().negate().atan2(v2.getX()));

Time : 22/11/17 22:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<+0.1)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:49
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/11/17 22:53
----------------------------------------
Success time : 22/11/17 22:55
=================================================
Project : math_1	start : 22/11/17 22:55
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/11/17 22:55
Thu Nov 17 22:55:15 CST 2022 org.apache.commons.math3.util.FastMath,3834
Failed time : 22/11/17 22:58
=================================================
Project : math_1	start : 22/11/17 22:58
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/11/17 22:58
Thu Nov 17 22:58:59 CST 2022 org.apache.commons.math3.util.FastMath,3834
Failed time : 22/11/17 23:02
=================================================
Project : math_1	start : 22/11/17 23:02
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testPow | 22/11/17 23:02
Thu Nov 17 23:02:43 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/11/17 23:04
=================================================
Project : math_1	start : 22/11/17 23:04
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testPow | 22/11/17 23:04
Thu Nov 17 23:04:13 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/11/17 23:05
=================================================
Project : math_1	start : 22/11/17 23:05
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 23:05
Thu Nov 17 23:05:45 CST 2022 Thu Nov 17 23:05:45 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,998=>Find no block
Failed time : 22/11/17 23:05
=================================================
Project : math_1	start : 22/11/17 23:05
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/11/17 23:05
Thu Nov 17 23:05:53 CST 2022 Thu Nov 17 23:05:53 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,998=>Find no block
Failed time : 22/11/17 23:05
=================================================
Project : math_1	start : 22/11/17 23:05
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testGradientComponent0Component4 | 22/11/17 23:05
Thu Nov 17 23:06:02 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,126
Failed time : 22/11/17 23:07
=================================================
Project : math_1	start : 22/11/17 23:07
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testGradientComponent0Component4 | 22/11/17 23:07
Thu Nov 17 23:07:18 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,126
Failed time : 22/11/17 23:08
=================================================
Project : math_1	start : 22/11/17 23:08
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/11/17 23:08
Thu Nov 17 23:08:35 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,412
Failed time : 22/11/17 23:09
=================================================
Project : math_1	start : 22/11/17 23:09
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/11/17 23:09
Thu Nov 17 23:09:18 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,412
Failed time : 22/11/17 23:09
=================================================
Project : math_1	start : 22/11/17 23:09
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/11/17 23:09
Thu Nov 17 23:10:02 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,239
Failed time : 22/11/17 23:32
=================================================
Project : math_1	start : 22/11/17 23:32
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/11/17 23:32
Thu Nov 17 23:32:18 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,239
Failed time : 22/11/17 23:54
=================================================
Project : math_1	start : 22/11/17 23:54
Current failed test : org.apache.commons.math3.util.FastMathTest::testPowAccuracy | 22/11/17 23:54
Thu Nov 17 23:54:31 CST 2022 org.apache.commons.math3.util.FastMath,1345
Failed time : 22/11/18 00:01
=================================================
Project : math_1	start : 22/11/18 00:01
Current failed test : org.apache.commons.math3.util.FastMathTest::testPowAccuracy | 22/11/18 00:01
Fri Nov 18 00:01:17 CST 2022 org.apache.commons.math3.util.FastMath,1345
Failed time : 22/11/18 00:07
=================================================
Project : math_1	start : 22/11/18 00:07
Current failed test : org.apache.commons.math3.linear.BiDiagonalTransformerTest::testSingularMatrix | 22/11/18 00:07
Fri Nov 18 00:08:04 CST 2022 org.apache.commons.math3.linear.BiDiagonalTransformer,198
Failed time : 22/11/18 00:16
=================================================
Project : math_1	start : 22/11/18 00:16
Current failed test : org.apache.commons.math3.linear.BiDiagonalTransformerTest::testSingularMatrix | 22/11/18 00:16
Fri Nov 18 00:16:12 CST 2022 org.apache.commons.math3.linear.BiDiagonalTransformer,198
Failed time : 22/11/18 00:24
=================================================
Project : math_1	start : 22/11/18 00:24
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/11/18 00:24
Fri Nov 18 00:24:21 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/11/18 00:27
=================================================
Project : math_1	start : 22/11/18 00:27
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/11/18 00:27
Fri Nov 18 00:27:53 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/11/18 00:31
=================================================
Project : math_1	start : 22/11/18 00:31
Current failed test : org.apache.commons.math3.fraction.FractionTest::testGetReducedFraction | 22/11/18 00:31
Fri Nov 18 00:31:25 CST 2022 org.apache.commons.math3.fraction.Fraction,638

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(numerator<0){
if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,numerator,denominator);
}
numerator=-numerator;
denominator=~denominator;
}

Time : 22/11/18 00:32
----------------------------------------
Failed time : 22/11/18 00:32
=================================================
Project : math_1	start : 22/11/18 00:32
Current failed test : org.apache.commons.math3.fraction.FractionTest::testGetReducedFraction | 22/11/18 00:32
Fri Nov 18 00:32:46 CST 2022 org.apache.commons.math3.fraction.Fraction,638

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(numerator<0){
if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,numerator,denominator);
}
numerator=-numerator;
denominator=~denominator;
}

Time : 22/11/18 00:33
----------------------------------------
Failed time : 22/11/18 00:33
=================================================
Project : math_1	start : 22/11/18 00:33
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/11/18 00:34
Fri Nov 18 00:34:07 CST 2022 org.apache.commons.math3.util.FastMath,629
Failed time : 22/11/18 00:42
=================================================
Project : math_1	start : 22/11/18 00:42
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/11/18 00:42
Fri Nov 18 00:42:29 CST 2022 org.apache.commons.math3.util.FastMath,629
Failed time : 22/11/18 00:50
=================================================
Project : math_1	start : 22/11/18 00:50
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/11/18 00:50
Fri Nov 18 00:50:53 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/11/18 00:51
=================================================
Project : math_1	start : 22/11/18 00:51
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/11/18 00:51
Fri Nov 18 00:52:04 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/11/18 00:53
=================================================
Project : math_1	start : 22/11/18 00:53
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/18 00:53
Fri Nov 18 00:53:16 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,615
Failed time : 22/11/18 00:53
=================================================
Project : math_1	start : 22/11/18 00:53
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/11/18 00:53
Fri Nov 18 00:53:29 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,615
Failed time : 22/11/18 00:53
=================================================
Project : math_1	start : 22/11/18 00:53
Current failed test : org.apache.commons.math3.special.ErfTest::testErfcInv | 22/11/18 00:53
Fri Nov 18 00:53:43 CST 2022 org.apache.commons.math3.special.Erf,213
Failed time : 22/11/18 01:01
=================================================
Project : math_1	start : 22/11/18 01:01
Current failed test : org.apache.commons.math3.special.ErfTest::testErfcInv | 22/11/18 01:01
Fri Nov 18 01:01:32 CST 2022 org.apache.commons.math3.special.Erf,213
Failed time : 22/11/18 01:09
=================================================
Project : math_1	start : 22/11/18 01:09
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest::testHalfBounded | 22/11/18 01:09
Fri Nov 18 01:09:23 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter,257

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/11/18 01:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.abs(+y);

Time : 22/11/18 01:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4358192003574064 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return FastMath.abs(x)+FastMath.abs(y);

Time : 22/11/18 01:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/11/18 01:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.abs(+y);

Time : 22/11/18 01:11
----------------------------------------
Success time : 22/11/18 01:12
=================================================
Project : math_1	start : 22/11/18 01:12
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest::testHalfBounded | 22/11/18 01:12
Fri Nov 18 01:12:14 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter,257

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/11/18 01:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(-y);

Time : 22/11/18 01:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.abs(+y);

Time : 22/11/18 01:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4358192003574064 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return FastMath.abs(x)+FastMath.abs(y);

Time : 22/11/18 01:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/11/18 01:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.abs(+y);

Time : 22/11/18 01:14
----------------------------------------
Success time : 22/11/18 01:14
=================================================
Project : math_1	start : 22/11/18 01:14
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/11/18 01:15
Fri Nov 18 01:15:07 CST 2022 org.apache.commons.math3.linear.HessenbergTransformer,198
Failed time : 22/11/18 01:23
=================================================
Project : math_1	start : 22/11/18 01:23
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/11/18 01:23
Fri Nov 18 01:23:51 CST 2022 org.apache.commons.math3.linear.HessenbergTransformer,198
Failed time : 22/11/18 01:32
=================================================
Project : math_1	start : 22/11/18 01:32
Current failed test : org.apache.commons.math3.complex.ComplexTest::testLogInf | 22/11/18 01:32
Fri Nov 18 01:32:37 CST 2022 org.apache.commons.math3.util.FastMath,2625
Failed time : 22/11/18 01:33
=================================================
Project : math_1	start : 22/11/18 01:33
Current failed test : org.apache.commons.math3.complex.ComplexTest::testLogInf | 22/11/18 01:33
Fri Nov 18 01:33:54 CST 2022 org.apache.commons.math3.util.FastMath,2625
Failed time : 22/11/18 01:35
=================================================
Project : math_1	start : 22/11/18 01:35
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/11/18 01:35
Fri Nov 18 01:35:11 CST 2022 Fri Nov 18 01:35:11 CST 2022 : org.apache.commons.math3.fraction.BigFraction,981=>Find no block
Failed time : 22/11/18 01:35
=================================================
Project : math_1	start : 22/11/18 01:35
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/11/18 01:35
Fri Nov 18 01:35:19 CST 2022 Fri Nov 18 01:35:19 CST 2022 : org.apache.commons.math3.fraction.BigFraction,981=>Find no block
Failed time : 22/11/18 01:35
=================================================
Project : math_1	start : 22/11/18 01:35
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/18 01:35
Fri Nov 18 01:35:28 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Plane,238
Failed time : 22/11/18 01:35
=================================================
Project : math_1	start : 22/11/18 01:35
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/18 01:35
Fri Nov 18 01:35:37 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Plane,238
Failed time : 22/11/18 01:35
=================================================
Project : math_1	start : 22/11/18 01:35
Current failed test : org.apache.commons.math3.analysis.solvers.BrentSolverTest::testMath832 | 22/11/18 01:35
Fri Nov 18 01:35:48 CST 2022 org.apache.commons.math3.analysis.solvers.BrentSolver,197
Failed time : 22/11/18 01:37
=================================================
Project : math_1	start : 22/11/18 01:37
Current failed test : org.apache.commons.math3.analysis.solvers.BrentSolverTest::testMath832 | 22/11/18 01:37
Fri Nov 18 01:37:14 CST 2022 org.apache.commons.math3.analysis.solvers.BrentSolver,197
Failed time : 22/11/18 01:38
=================================================
Project : math_1	start : 22/11/18 01:38
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/11/18 01:38
Fri Nov 18 01:38:41 CST 2022 org.apache.commons.math3.fraction.BigFraction,980
Failed time : 22/11/18 01:38
=================================================
Project : math_1	start : 22/11/18 01:38
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/11/18 01:38
Fri Nov 18 01:38:57 CST 2022 org.apache.commons.math3.fraction.BigFraction,980
Failed time : 22/11/18 01:39
=================================================
Project : math_1	start : 22/11/18 01:39
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/18 01:39
Fri Nov 18 01:39:14 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,439

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0654441396047276 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
if(FastMath.abs(actRed)<=TWO_EPS&&preRed<=TWO_EPS&&ratio<=2.0){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,costRelativeTolerance);
}else if(delta<=TWO_EPS*xNorm){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,parRelativeTolerance);
}else if(maxCosine<=TWO_EPS){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,orthoTolerance);
}

Time : 22/11/18 01:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*currentCost<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:40
----------------------------------------
Success time : 22/11/18 01:41
=================================================
Project : math_1	start : 22/11/18 01:41
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/11/18 01:41
Fri Nov 18 01:41:20 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,439

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0654441396047276 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
if(FastMath.abs(actRed)<=TWO_EPS&&preRed<=TWO_EPS&&ratio<=2.0){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,costRelativeTolerance);
}else if(delta<=TWO_EPS*xNorm){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,parRelativeTolerance);
}else if(maxCosine<=TWO_EPS){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,orthoTolerance);
}

Time : 22/11/18 01:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*currentCost<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/11/18 01:43
----------------------------------------
Success time : 22/11/18 01:43
=================================================
Project : math_1	start : 22/11/18 01:43
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testAngles | 22/11/18 01:43
Fri Nov 18 01:43:26 CST 2022 Fri Nov 18 01:43:26 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,660=>Find no block
Failed time : 22/11/18 01:43
=================================================
Project : math_1	start : 22/11/18 01:43
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testAngles | 22/11/18 01:43
Fri Nov 18 01:43:34 CST 2022 Fri Nov 18 01:43:34 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,660=>Find no block
Failed time : 22/11/18 01:43
=================================================
Project : math_1	start : 22/11/18 01:43
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest | 22/11/18 01:43
Fri Nov 18 01:43:44 CST 2022 org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory,156
=================================================
Project : math_1	start : 22/11/18 01:43
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest | 22/11/18 01:43
Fri Nov 18 01:44:00 CST 2022 org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory,156
=================================================
Project : math_1	start : 22/11/18 01:44
Current failed test : org.apache.commons.math3.complex.ComplexTest::testTan | 22/11/18 01:44
Fri Nov 18 01:44:17 CST 2022 org.apache.commons.math3.complex.Complex,1022

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>0,0]
if(real<-20.0){
return createComplex(-1.0,0.0);
}

Time : 22/11/18 01:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<+20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:45
----------------------------------------
Success time : 22/11/18 01:45
=================================================
Project : math_1	start : 22/11/18 01:45
Current failed test : org.apache.commons.math3.complex.ComplexTest::testTan | 22/11/18 01:45
Fri Nov 18 01:45:42 CST 2022 org.apache.commons.math3.complex.Complex,1022

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>0,0]
if(real<-20.0){
return createComplex(-1.0,0.0);
}

Time : 22/11/18 01:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<+20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/11/18 01:46
----------------------------------------
Success time : 22/11/18 01:46
=================================================
Project : math_1	start : 22/11/18 01:47
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh | 22/11/18 01:47
Fri Nov 18 01:47:08 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1624

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n^1)==0){
v*=x;
}

Time : 22/11/18 01:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:47
----------------------------------------
Success time : 22/11/18 01:49
=================================================
Project : math_1	start : 22/11/18 01:49
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh | 22/11/18 01:49
Fri Nov 18 01:50:02 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1624

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n^1)==0){
v*=x;
}

Time : 22/11/18 01:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 01:50
----------------------------------------
Success time : 22/11/18 01:52
=================================================
Project : math_1	start : 22/11/18 01:52
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testContainsKey | 22/11/18 01:52
Fri Nov 18 01:52:57 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,377
Failed time : 22/11/18 01:54
=================================================
Project : math_1	start : 22/11/18 01:54
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testContainsKey | 22/11/18 01:54
Fri Nov 18 01:54:38 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,377
Failed time : 22/11/18 01:56
=================================================
Project : math_1	start : 22/11/18 01:56
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[50] | 22/11/18 01:56
Fri Nov 18 01:56:20 CST 2022 org.apache.commons.math3.util.FastMath,3326
Failed time : 22/11/18 01:56
=================================================
Project : math_1	start : 22/11/18 01:56
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[50] | 22/11/18 01:56
Fri Nov 18 01:56:54 CST 2022 org.apache.commons.math3.util.FastMath,3326
Failed time : 22/11/18 01:57
=================================================
Project : math_1	start : 22/11/18 01:57
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/18 01:57
Fri Nov 18 01:57:28 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,425
Failed time : 22/11/18 01:59
=================================================
Project : math_1	start : 22/11/18 01:59
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/11/18 01:59
Fri Nov 18 01:59:28 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,425
Failed time : 22/11/18 02:01
=================================================
Project : math_1	start : 22/11/18 02:01
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest::testSampling | 22/11/18 02:01
Fri Nov 18 02:01:29 CST 2022 org.apache.commons.math3.random.Well19937c,98
Failed time : 22/11/18 02:04
=================================================
Project : math_1	start : 22/11/18 02:04
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest::testSampling | 22/11/18 02:04
Fri Nov 18 02:04:13 CST 2022 org.apache.commons.math3.random.Well19937c,98
Failed time : 22/11/18 02:06
=================================================
Project : math_1	start : 22/11/18 02:06
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/11/18 02:06
Fri Nov 18 02:06:57 CST 2022 Fri Nov 18 02:06:57 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/11/18 02:06
=================================================
Project : math_1	start : 22/11/18 02:06
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/11/18 02:06
Fri Nov 18 02:07:05 CST 2022 Fri Nov 18 02:07:05 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/11/18 02:07
=================================================
Project : math_1	start : 22/11/18 02:07
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testInterpolation2 | 22/11/18 02:07
Fri Nov 18 02:07:14 CST 2022 org.apache.commons.math3.random.Well19937c,109
Failed time : 22/11/18 02:07
=================================================
Project : math_1	start : 22/11/18 02:07
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testInterpolation2 | 22/11/18 02:07
Fri Nov 18 02:07:42 CST 2022 org.apache.commons.math3.random.Well19937c,109
Failed time : 22/11/18 02:08
=================================================
Project : math_1	start : 22/11/18 02:08
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/18 02:08
Fri Nov 18 02:08:12 CST 2022 org.apache.commons.math3.random.Well44497b,99

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7446679513364147 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>0,0]
 final int z0=v[indexRm1];
 final int z1=v0^(vM1^(vM1>>>8));
 final int z2=(vM2^(vM2<<19))^(vM3^(vM3<<14));
 final int z3=z1^z2;
 final int z4=(z0^(z0<<11))^(z1^(z1<<7));

Time : 22/11/18 02:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>30));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:08
----------------------------------------
Success time : 22/11/18 02:09
=================================================
Project : math_1	start : 22/11/18 02:09
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/18 02:09
Fri Nov 18 02:09:25 CST 2022 org.apache.commons.math3.random.Well44497b,99

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7446679513364147 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>0,0]
 final int z0=v[indexRm1];
 final int z1=v0^(vM1^(vM1>>>8));
 final int z2=(vM2^(vM2<<19))^(vM3^(vM3<<14));
 final int z3=z1^z2;
 final int z4=(z0^(z0<<11))^(z1^(z1<<7));

Time : 22/11/18 02:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>30));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/11/18 02:10
----------------------------------------
Success time : 22/11/18 02:10
=================================================
Project : math_1	start : 22/11/18 02:10
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/11/18 02:10
Fri Nov 18 02:10:40 CST 2022 org.apache.commons.math3.random.MersenneTwister,239

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/11/18 02:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:18
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3487739494041857 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/11/18 02:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:24
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2649138936180082 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(ks=p-1;ks>=k;ks--){
if(ks==k){
break;
}
 final double t=(ks!=p?FastMath.abs(e[ks]):0)+(ks!=k+1?FastMath.abs(e[ks-1]):0);
if(FastMath.abs(singularValues[ks])<=TINY+EPS*t){
singularValues[ks]=0;
break;
}
}

Time : 22/11/18 02:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:27
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2324068636341994 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/11/18 02:27
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:27
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=mti;k<N-M;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2121852891348002 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=i+1;k<nvars;k++){
xk=x[k];
x[k]=smartAdd(xk,-xi*r[nextr]);
if(di!=0.0){
r[nextr]=smartAdd(di*r[nextr],(_w*xi)*xk)/dpi;
}else {
r[nextr]=xk/xi;
}
++nextr;
}

Time : 22/11/18 02:30
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:30
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 02:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 02:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 02:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:38
----------------------------------------
Success time : 22/11/18 02:39
=================================================
Project : math_1	start : 22/11/18 02:39
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/11/18 02:39
Fri Nov 18 02:39:35 CST 2022 org.apache.commons.math3.random.MersenneTwister,239

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:41
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/11/18 02:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:42
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<=N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3487739494041857 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/11/18 02:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3249520736601597 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
if(test(values,begin,length)){
int k=begin+length;
for(int i=begin;i<k;i++){
increment(values[i]);
}
}

Time : 22/11/18 02:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=mti;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2649138936180082 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(ks=p-1;ks>=k;ks--){
if(ks==k){
break;
}
 final double t=(ks!=p?FastMath.abs(e[ks]):0)+(ks!=k+1?FastMath.abs(e[ks-1]):0);
if(FastMath.abs(singularValues[ks])<=TINY+EPS*t){
singularValues[ks]=0;
break;
}
}

Time : 22/11/18 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 02:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2121852891348002 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=i+1;k<nvars;k++){
xk=x[k];
x[k]=smartAdd(xk,-xi*r[nextr]);
if(di!=0.0){
r[nextr]=smartAdd(di*r[nextr],(_w*xi)*xk)/dpi;
}else {
r[nextr]=xk/xi;
}
++nextr;
}

Time : 22/11/18 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 03:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/11/18 03:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/11/18 03:09
----------------------------------------
Success time : 22/11/18 03:10
=================================================
Project : math_1	start : 22/11/18 03:10
Current failed test : org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial | 22/11/18 03:10
Fri Nov 18 03:10:30 CST 2022 org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator,386

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.105351295197314 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>0,0]
if(array.length!=nRows){
throw new MatrixDimensionMismatchException(array.length,1,nRows,1);
}
 final int jBlock=column/BLOCK_SIZE;
 final int jColumn=column-jBlock*BLOCK_SIZE;
 final int jWidth=blockWidth(jBlock);
int outIndex=0;

Time : 22/11/18 03:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)==0){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:11
----------------------------------------
Success time : 22/11/18 03:12
=================================================
Project : math_1	start : 22/11/18 03:12
Current failed test : org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial | 22/11/18 03:12
Fri Nov 18 03:12:19 CST 2022 org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator,386

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.105351295197314 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>0,0]
if(array.length!=nRows){
throw new MatrixDimensionMismatchException(array.length,1,nRows,1);
}
 final int jBlock=column/BLOCK_SIZE;
 final int jColumn=column-jBlock*BLOCK_SIZE;
 final int jWidth=blockWidth(jBlock);
int outIndex=0;

Time : 22/11/18 03:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)==0){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/11/18 03:13
----------------------------------------
Success time : 22/11/18 03:14
=================================================
Project : math_1	start : 22/11/18 03:14
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[1] | 22/11/18 03:14
Fri Nov 18 03:14:10 CST 2022 org.apache.commons.math3.util.FastMath,3015
Failed time : 22/11/18 03:14
=================================================
Project : math_1	start : 22/11/18 03:14
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[1] | 22/11/18 03:14
Fri Nov 18 03:14:36 CST 2022 org.apache.commons.math3.util.FastMath,3015
Failed time : 22/11/18 03:14
=================================================
Project : math_1	start : 22/11/18 03:14
Current failed test : org.apache.commons.math3.fraction.BigFractionFormatTest::testLongFormat | 22/11/18 03:14
Fri Nov 18 03:15:03 CST 2022 org.apache.commons.math3.fraction.BigFraction,193
Failed time : 22/11/18 03:16
=================================================
Project : math_1	start : 22/11/18 03:16
Current failed test : org.apache.commons.math3.fraction.BigFractionFormatTest::testLongFormat | 22/11/18 03:16
Fri Nov 18 03:16:57 CST 2022 org.apache.commons.math3.fraction.BigFraction,193
Failed time : 22/11/18 03:18
=================================================
Project : math_1	start : 22/11/18 03:18
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testReciprocal | 22/11/18 03:18
Fri Nov 18 03:18:46 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,650

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:18
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6666666666666665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e^1)!=0){
result*=k2p;
}

Time : 22/11/18 03:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:19
----------------------------------------
Success time : 22/11/18 03:20
=================================================
Project : math_1	start : 22/11/18 03:20
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testReciprocal | 22/11/18 03:20
Fri Nov 18 03:20:09 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,650

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:20
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6666666666666665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e^1)!=0){
result*=k2p;
}

Time : 22/11/18 03:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/11/18 03:20
----------------------------------------
Success time : 22/11/18 03:21
=================================================
Project : math_1	start : 22/11/18 03:21
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/18 03:21
Fri Nov 18 03:21:35 CST 2022 org.apache.commons.math3.dfp.Dfp,269
Failed time : 22/11/18 03:26
=================================================
Project : math_1	start : 22/11/18 03:26
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/11/18 03:26
Fri Nov 18 03:26:29 CST 2022 org.apache.commons.math3.dfp.Dfp,269
Failed time : 22/11/18 03:31
=================================================
Project : math_1	start : 22/11/18 03:31
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/18 03:31
Fri Nov 18 03:31:23 CST 2022 org.apache.commons.math3.util.FastMath,3161
Failed time : 22/11/18 03:32
=================================================
Project : math_1	start : 22/11/18 03:32
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/11/18 03:32
Fri Nov 18 03:32:15 CST 2022 org.apache.commons.math3.util.FastMath,3161
Failed time : 22/11/18 03:32
=================================================
Project : math_1	start : 22/11/18 03:32
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/18 03:33
Fri Nov 18 03:33:07 CST 2022 org.apache.commons.math3.util.FastMath,3078
Failed time : 22/11/18 03:33
=================================================
Project : math_1	start : 22/11/18 03:33
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/11/18 03:33
Fri Nov 18 03:33:50 CST 2022 org.apache.commons.math3.util.FastMath,3078
Failed time : 22/11/18 03:34
=================================================
Project : math_1	start : 22/11/18 03:34
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testPutKeysWithCollision2 | 22/11/18 03:34
Fri Nov 18 03:34:35 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,365
Failed time : 22/11/18 03:36
=================================================
Project : math_1	start : 22/11/18 03:36
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testPutKeysWithCollision2 | 22/11/18 03:36
Fri Nov 18 03:36:19 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,365
Failed time : 22/11/18 03:37
=================================================
Project : math_1	start : 22/11/18 03:37
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/18 03:37
Fri Nov 18 03:38:03 CST 2022 org.apache.commons.math3.random.Well44497b,98
Failed time : 22/11/18 03:38
=================================================
Project : math_1	start : 22/11/18 03:38
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/11/18 03:38
Fri Nov 18 03:38:56 CST 2022 org.apache.commons.math3.random.Well44497b,98
Failed time : 22/11/18 03:39
=================================================
Project : math_1	start : 22/11/18 03:39
Current failed test : org.apache.commons.math3.util.OpenIntToDoubleHashMapTest::testContainsKey | 22/11/18 03:39
Fri Nov 18 03:39:49 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,220
Failed time : 22/11/18 03:41
=================================================
Project : math_1	start : 22/11/18 03:41
Current failed test : org.apache.commons.math3.util.OpenIntToDoubleHashMapTest::testContainsKey | 22/11/18 03:41
Fri Nov 18 03:41:54 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,220
Failed time : 22/11/18 03:43
=================================================
Project : math_1	start : 22/11/18 03:43
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/11/18 03:43
Fri Nov 18 03:44:00 CST 2022 org.apache.commons.math3.random.MersenneTwister,245

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3810926681167348 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/11/18 03:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3741530023138235 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=N-1;k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1566083941l))-i;
mt[i]=(int)(l&0xffffffffL);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}

Time : 22/11/18 03:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.340663923704962 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/11/18 03:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 03:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2322523977903306 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/11/18 04:00
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:00
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:00
----------------------------------------
Success time : 22/11/18 04:03
=================================================
Project : math_1	start : 22/11/18 04:03
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/11/18 04:03
Fri Nov 18 04:03:19 CST 2022 org.apache.commons.math3.random.MersenneTwister,245

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3810926681167348 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/11/18 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3741530023138235 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=N-1;k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1566083941l))-i;
mt[i]=(int)(l&0xffffffffL);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}

Time : 22/11/18 04:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.340663923704962 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/11/18 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2322523977903306 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/11/18 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/11/18 04:19
----------------------------------------
Success time : 22/11/18 04:22
=================================================
Project : math_1	start : 22/11/18 04:22
Current failed test : org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep | 22/11/18 04:22
Fri Nov 18 04:22:47 CST 2022 org.apache.commons.math3.util.FastMath,3267
Failed time : 22/11/18 04:23
=================================================
Project : math_1	start : 22/11/18 04:23
Current failed test : org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep | 22/11/18 04:23
Fri Nov 18 04:23:37 CST 2022 org.apache.commons.math3.util.FastMath,3267
Failed time : 22/11/18 04:24
=================================================
Project : math_1	start : 22/11/18 04:24
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/11/18 04:24
Fri Nov 18 04:24:29 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,886
Failed time : 22/11/18 04:24
=================================================
Project : math_1	start : 22/11/18 04:24
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/11/18 04:24
Fri Nov 18 04:24:38 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,886
Failed time : 22/11/18 04:24
=================================================
Project : math_1	start : 22/11/18 04:24
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/18 04:24
Fri Nov 18 04:24:49 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1409

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:25
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n^1)==0){
v*=x;
}

Time : 22/11/18 04:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:25
----------------------------------------
Success time : 22/11/18 04:27
=================================================
Project : math_1	start : 22/11/18 04:27
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/11/18 04:27
Fri Nov 18 04:27:47 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1409

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:27
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:28
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n^1)==0){
v*=x;
}

Time : 22/11/18 04:28
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n&0x1)==0){
v*=x;
}

Time : 22/11/18 04:28
----------------------------------------
Success time : 22/11/18 04:30
=================================================
Project : math_1	start : 22/12/04 19:46
Current failed test : org.apache.commons.math3.linear.Array2DRowRealMatrixTest::testSetRowMatrix | 22/12/04 19:46
Sun Dec 04 19:46:26 CST 2022 org.apache.commons.math3.linear.AbstractRealMatrix,464

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.326460399656175 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>0,0]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>464,469]
if((matrix.getRowDimension()!=-1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>464,469]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:50
----------------------------------------
Success time : 22/12/04 19:54
=================================================
Project : math_1	start : 22/12/04 19:54
Current failed test : org.apache.commons.math3.linear.Array2DRowRealMatrixTest::testSetRowMatrix | 22/12/04 19:54
Sun Dec 04 19:54:52 CST 2022 org.apache.commons.math3.linear.AbstractRealMatrix,464

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.326460399656175 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>0,0]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>464,469]
if((matrix.getRowDimension()!=-1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java=>464,469]
if((matrix.getRowDimension()!=1)||(matrix.getColumnDimension()!=nCols)){
throw new MatrixDimensionMismatchException(matrix.getRowDimension(),matrix.getColumnDimension(),1,nCols);
}

Time : 22/12/04 19:58
----------------------------------------
Success time : 22/12/04 20:02
=================================================
Project : math_1	start : 22/12/04 20:02
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/12/04 20:02
Sun Dec 04 20:02:59 CST 2022 org.apache.commons.math3.linear.RealVector,401
Failed time : 22/12/04 20:07
=================================================
Project : math_1	start : 22/12/04 20:07
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/12/04 20:08
Sun Dec 04 20:08:12 CST 2022 org.apache.commons.math3.linear.RealVector,401
Failed time : 22/12/04 20:11
=================================================
Project : math_1	start : 22/12/04 20:11
Current failed test : org.apache.commons.math3.linear.QRSolverTest::testOverdetermined | 22/12/04 20:12
Sun Dec 04 20:12:11 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,505
Failed time : 22/12/05 00:42
=================================================
Project : math_1	start : 22/12/05 00:42
Current failed test : org.apache.commons.math3.linear.QRSolverTest::testOverdetermined | 22/12/05 00:43
Mon Dec 05 00:43:22 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,505
Failed time : 22/12/05 04:46
=================================================
Project : math_1	start : 22/12/05 04:46
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 04:46
Mon Dec 05 04:46:33 CST 2022 org.apache.commons.math3.util.FastMath,519
Failed time : 22/12/05 05:25
=================================================
Project : math_1	start : 22/12/05 05:25
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 05:25
Mon Dec 05 05:25:17 CST 2022 org.apache.commons.math3.util.FastMath,519
Failed time : 22/12/05 06:01
=================================================
Project : math_1	start : 22/12/05 06:01
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/12/05 06:01
Mon Dec 05 06:01:18 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1565
Failed time : 22/12/05 06:23
=================================================
Project : math_1	start : 22/12/05 06:23
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/12/05 06:23
Mon Dec 05 06:23:37 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1565
Failed time : 22/12/05 06:46
=================================================
Project : math_1	start : 22/12/05 06:46
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testGradient | 22/12/05 06:46
Mon Dec 05 06:46:37 CST 2022 Mon Dec 05 06:46:37 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,170=>Find no block
Failed time : 22/12/05 06:46
=================================================
Project : math_1	start : 22/12/05 06:46
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testGradient | 22/12/05 06:46
Mon Dec 05 06:46:48 CST 2022 Mon Dec 05 06:46:48 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,170=>Find no block
Failed time : 22/12/05 06:46
=================================================
Project : math_1	start : 22/12/05 06:46
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testIsValidPoint | 22/12/05 06:46
Mon Dec 05 06:47:01 CST 2022 org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction,184
Failed time : 22/12/05 06:52
=================================================
Project : math_1	start : 22/12/05 06:52
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testIsValidPoint | 22/12/05 06:52
Mon Dec 05 06:52:58 CST 2022 org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction,184
Failed time : 22/12/05 06:58
=================================================
Project : math_1	start : 22/12/05 06:58
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[47] | 22/12/05 06:58
Mon Dec 05 06:59:03 CST 2022 org.apache.commons.math3.util.FastMath,861
Failed time : 22/12/05 06:59
=================================================
Project : math_1	start : 22/12/05 06:59
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[47] | 22/12/05 06:59
Mon Dec 05 06:59:18 CST 2022 org.apache.commons.math3.util.FastMath,861
Failed time : 22/12/05 06:59
=================================================
Project : math_1	start : 22/12/05 06:59
Current failed test : org.apache.commons.math3.genetics.UniformCrossoverTest::testRatioTooHigh | 22/12/05 06:59
Mon Dec 05 06:59:31 CST 2022 org.apache.commons.math3.genetics.UniformCrossover,64
Failed time : 22/12/05 06:59
=================================================
Project : math_1	start : 22/12/05 06:59
Current failed test : org.apache.commons.math3.genetics.UniformCrossoverTest::testRatioTooHigh | 22/12/05 06:59
Mon Dec 05 07:00:09 CST 2022 org.apache.commons.math3.genetics.UniformCrossover,64
Failed time : 22/12/05 07:00
=================================================
Project : math_1	start : 22/12/05 07:00
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/12/05 07:00
Mon Dec 05 07:00:44 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,865
Failed time : 22/12/05 07:01
=================================================
Project : math_1	start : 22/12/05 07:01
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/12/05 07:01
Mon Dec 05 07:01:45 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,865
Failed time : 22/12/05 07:02
=================================================
Project : math_1	start : 22/12/05 07:02
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testParaboloid | 22/12/05 07:02
Mon Dec 05 07:02:46 CST 2022 org.apache.commons.math3.analysis.interpolation.SplineInterpolator,112
Failed time : 22/12/05 07:07
=================================================
Project : math_1	start : 22/12/05 07:07
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testParaboloid | 22/12/05 07:07
Mon Dec 05 07:07:54 CST 2022 org.apache.commons.math3.analysis.interpolation.SplineInterpolator,112
Failed time : 22/12/05 07:12
=================================================
Project : math_1	start : 22/12/05 07:12
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh | 22/12/05 07:12
Mon Dec 05 07:12:42 CST 2022 org.apache.commons.math3.util.FastMath,727
Failed time : 22/12/05 07:12
=================================================
Project : math_1	start : 22/12/05 07:12
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinhAsinh | 22/12/05 07:12
Mon Dec 05 07:12:57 CST 2022 org.apache.commons.math3.util.FastMath,727
Failed time : 22/12/05 07:12
=================================================
Project : math_1	start : 22/12/05 07:13
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/05 07:13
Mon Dec 05 07:13:09 CST 2022 org.apache.commons.math3.linear.TriDiagonalTransformer,108
Failed time : 22/12/05 07:14
=================================================
Project : math_1	start : 22/12/05 07:14
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/05 07:14
Mon Dec 05 07:15:05 CST 2022 org.apache.commons.math3.linear.TriDiagonalTransformer,108
Failed time : 22/12/05 07:16
=================================================
Project : math_1	start : 22/12/05 07:16
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testSin | 22/12/05 07:16
Mon Dec 05 07:16:52 CST 2022 org.apache.commons.math3.dfp.Dfp,1279
Failed time : 22/12/05 07:18
=================================================
Project : math_1	start : 22/12/05 07:18
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testSin | 22/12/05 07:19
Mon Dec 05 07:19:07 CST 2022 org.apache.commons.math3.dfp.Dfp,1279
Failed time : 22/12/05 07:21
=================================================
Project : math_1	start : 22/12/05 07:21
Current failed test : org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest::testFasterThanNewton | 22/12/05 07:21
Mon Dec 05 07:21:22 CST 2022 org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver,158
Failed time : 22/12/05 07:22
=================================================
Project : math_1	start : 22/12/05 07:22
Current failed test : org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest::testFasterThanNewton | 22/12/05 07:22
Mon Dec 05 07:23:02 CST 2022 org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver,158
Failed time : 22/12/05 07:24
=================================================
Project : math_1	start : 22/12/05 07:24
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanAccuracy | 22/12/05 07:24
Mon Dec 05 07:24:23 CST 2022 org.apache.commons.math3.util.FastMath,1987
Failed time : 22/12/05 07:26
=================================================
Project : math_1	start : 22/12/05 07:26
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanAccuracy | 22/12/05 07:26
Mon Dec 05 07:26:57 CST 2022 org.apache.commons.math3.util.FastMath,1987
Failed time : 22/12/05 07:29
=================================================
Project : math_1	start : 22/12/05 07:29
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/05 07:29
Mon Dec 05 07:29:31 CST 2022 org.apache.commons.math3.dfp.Dfp,2053

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(mant[mant.length-1]==0){
break;
}

Time : 22/12/05 07:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9635460822563595 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(mant[mant.length-1]==0){
return newInstance(this);
}

Time : 22/12/05 07:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 07:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(mant[mant.length-1]==0){
break;
}

Time : 22/12/05 07:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/12/05 07:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3693182879212227 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(row_data.length>nvars){
return Double.NaN;
}

Time : 22/12/05 07:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 07:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/12/05 07:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(RADIX==0){
break;
}

Time : 22/12/05 07:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2417732916656037 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(q==mant.length*rsize+offset+1){
break;
}

Time : 22/12/05 07:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 07:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(RADIX==0){
break;
}

Time : 22/12/05 07:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/12/05 07:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0162911452669756 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if((result.exp+mant.length)<MIN_EXP){
def=newInstance(getZero());
def.sign=result.sign;
}else {
def=newInstance(result);
}

Time : 22/12/05 07:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 07:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/12/05 07:54
----------------------------------------
Success time : 22/12/05 07:55
=================================================
Project : math_1	start : 22/12/05 07:55
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/05 07:55
Mon Dec 05 07:55:30 CST 2022 org.apache.commons.math3.dfp.Dfp,2053

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(mant[mant.length-1]==0){
break;
}

Time : 22/12/05 08:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.9635460822563595 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(mant[mant.length-1]==0){
return newInstance(this);
}

Time : 22/12/05 08:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 08:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(mant[mant.length-1]==0){
break;
}

Time : 22/12/05 08:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/12/05 08:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3693182879212227 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(row_data.length>nvars){
return Double.NaN;
}

Time : 22/12/05 08:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 08:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==RADIX){
break;
}

Time : 22/12/05 08:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(RADIX==0){
break;
}

Time : 22/12/05 08:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2417732916656037 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if(q==mant.length*rsize+offset+1){
break;
}

Time : 22/12/05 08:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 08:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(RADIX==0){
break;
}

Time : 22/12/05 08:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/12/05 08:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0162911452669756 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>0,0]
if((result.exp+mant.length)<MIN_EXP){
def=newInstance(getZero());
def.sign=result.sign;
}else {
def=newInstance(result);
}

Time : 22/12/05 08:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==0){
break;
}

Time : 22/12/05 08:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/dfp/Dfp.java=>2053,2055]
if(dx.mant[mant.length%1]==MIN_EXP){
break;
}

Time : 22/12/05 08:19
----------------------------------------
Success time : 22/12/05 08:20
=================================================
Project : math_1	start : 22/12/05 08:20
Current failed test : org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest::testBackward | 22/12/05 08:20
Mon Dec 05 08:20:42 CST 2022 org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator,171
Failed time : 22/12/05 08:22
=================================================
Project : math_1	start : 22/12/05 08:22
Current failed test : org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest::testBackward | 22/12/05 08:22
Mon Dec 05 08:22:30 CST 2022 org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator,171
Failed time : 22/12/05 08:24
=================================================
Project : math_1	start : 22/12/05 08:24
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testSymmetry | 22/12/05 08:24
Mon Dec 05 08:24:17 CST 2022 org.apache.commons.math3.stat.correlation.StorelessCovariance,99
Failed time : 22/12/05 08:24
=================================================
Project : math_1	start : 22/12/05 08:24
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testSymmetry | 22/12/05 08:24
Mon Dec 05 08:24:40 CST 2022 org.apache.commons.math3.stat.correlation.StorelessCovariance,99
Failed time : 22/12/05 08:24
=================================================
Project : math_1	start : 22/12/05 08:24
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/05 08:24
Mon Dec 05 08:25:04 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1568
Failed time : 22/12/05 08:27
=================================================
Project : math_1	start : 22/12/05 08:27
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/05 08:27
Mon Dec 05 08:27:11 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1568
Failed time : 22/12/05 08:29
=================================================
Project : math_1	start : 22/12/05 08:29
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testAtan2 | 22/12/05 08:29
Mon Dec 05 08:29:21 CST 2022 org.apache.commons.math3.util.FastMath,2567
Failed time : 22/12/05 08:29
=================================================
Project : math_1	start : 22/12/05 08:29
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testAtan2 | 22/12/05 08:29
Mon Dec 05 08:29:40 CST 2022 org.apache.commons.math3.util.FastMath,2567
Failed time : 22/12/05 08:29
=================================================
Project : math_1	start : 22/12/05 08:29
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/05 08:29
Mon Dec 05 08:30:01 CST 2022 org.apache.commons.math3.util.FastMath,2123
Failed time : 22/12/05 08:30
=================================================
Project : math_1	start : 22/12/05 08:30
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/05 08:30
Mon Dec 05 08:30:29 CST 2022 org.apache.commons.math3.util.FastMath,2123
Failed time : 22/12/05 08:30
=================================================
Project : math_1	start : 22/12/05 08:30
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/12/05 08:30
Mon Dec 05 08:30:58 CST 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,567
Failed time : 22/12/05 08:37
=================================================
Project : math_1	start : 22/12/05 08:37
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/12/05 08:37
Mon Dec 05 08:37:11 CST 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,567
Failed time : 22/12/05 08:44
=================================================
Project : math_1	start : 22/12/05 08:44
Current failed test : org.apache.commons.math3.util.PrecisionTest::testCompareToMaxUlps | 22/12/05 08:44
Mon Dec 05 08:44:54 CST 2022 org.apache.commons.math3.util.Precision,338

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(yInt<0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:45
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.540566740280919 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>0,0]
long xInt=Double.doubleToLongBits(x);
long yInt=Double.doubleToLongBits(y);
if(xInt<0){
xInt=SGN_MASK-xInt;
}

Time : 22/12/05 08:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>338,340]
if(yInt<=0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>338,340]
if(yInt<0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:45
----------------------------------------
Success time : 22/12/05 08:46
=================================================
Project : math_1	start : 22/12/05 08:46
Current failed test : org.apache.commons.math3.util.PrecisionTest::testCompareToMaxUlps | 22/12/05 08:46
Mon Dec 05 08:46:19 CST 2022 org.apache.commons.math3.util.Precision,338

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(yInt<0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.540566740280919 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>0,0]
long xInt=Double.doubleToLongBits(x);
long yInt=Double.doubleToLongBits(y);
if(xInt<0){
xInt=SGN_MASK-xInt;
}

Time : 22/12/05 08:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>338,340]
if(yInt<=0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/Precision.java=>338,340]
if(yInt<0){
yInt=SGN_MASK-yInt;
}

Time : 22/12/05 08:47
----------------------------------------
Success time : 22/12/05 08:47
=================================================
Project : math_1	start : 22/12/05 08:47
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/12/05 08:47
Mon Dec 05 08:47:40 CST 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,501
Failed time : 22/12/05 09:07
=================================================
Project : math_1	start : 22/12/05 09:07
Current failed test : org.apache.commons.math3.ode.events.ReappearingEventTest::testGragg | 22/12/05 09:07
Mon Dec 05 09:07:28 CST 2022 org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator,501
Failed time : 22/12/05 09:23
=================================================
Project : math_1	start : 22/12/05 09:23
Current failed test : org.apache.commons.math3.fitting.HarmonicFitterTest::testUnsorted | 22/12/05 09:23
Mon Dec 05 09:23:21 CST 2022 org.apache.commons.math3.fitting.HarmonicFitter,242
Failed time : 22/12/05 09:26
=================================================
Project : math_1	start : 22/12/05 09:26
Current failed test : org.apache.commons.math3.fitting.HarmonicFitterTest::testUnsorted | 22/12/05 09:26
Mon Dec 05 09:26:34 CST 2022 org.apache.commons.math3.fitting.HarmonicFitter,242
Failed time : 22/12/05 09:29
=================================================
Project : math_1	start : 22/12/05 09:30
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/12/05 09:30
Mon Dec 05 09:30:09 CST 2022 org.apache.commons.math3.linear.RealVector,397

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0969718623536642 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>0,0]
xNorm=0;
for(int k=0;k<nC;++k){
double xK=diag[k]*currentPoint[k];
xNorm+=xK*xK;
}
xNorm=FastMath.sqrt(xNorm);
if(checker!=null&&checker.converged(iter,previous,current)){
setCost(currentCost);
point=current.getPoint();
return current;
}

Time : 22/12/05 09:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:34
----------------------------------------
Success time : 22/12/05 09:36
=================================================
Project : math_1	start : 22/12/05 09:36
Current failed test : org.apache.commons.math3.linear.RealVectorTest::testGetDistanceSameType | 22/12/05 09:36
Mon Dec 05 09:36:27 CST 2022 org.apache.commons.math3.linear.RealVector,397

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0969718623536642 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>0,0]
xNorm=0;
for(int k=0;k<nC;++k){
double xK=diag[k]*currentPoint[k];
xNorm+=xK*xK;
}
xNorm=FastMath.sqrt(xNorm);
if(checker!=null&&checker.converged(iter,previous,current)){
setCost(currentCost);
point=current.getPoint();
return current;
}

Time : 22/12/05 09:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/RealVector.java=>396,404]
checkVectorDimensions(v);
double d=1;
Iterator<Entry> it=iterator();
d=0;
while(it.hasNext()){
 final Entry e=it.next();
 final double diff=e.getValue()-v.getEntry(e.getIndex());
d+=diff*diff;
}
return FastMath.sqrt(d);

Time : 22/12/05 09:40
----------------------------------------
Success time : 22/12/05 09:41
=================================================
Project : math_1	start : 22/12/05 09:42
Current failed test : org.apache.commons.math3.ode.JacobianMatricesTest::testLowAccuracyExternalDifferentiation | 22/12/05 09:42
Mon Dec 05 09:42:09 CST 2022 Mon Dec 05 09:42:09 CST 2022 : org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator,152=>Find no block
Failed time : 22/12/05 09:42
=================================================
Project : math_1	start : 22/12/05 09:42
Current failed test : org.apache.commons.math3.ode.JacobianMatricesTest::testLowAccuracyExternalDifferentiation | 22/12/05 09:42
Mon Dec 05 09:42:17 CST 2022 Mon Dec 05 09:42:17 CST 2022 : org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator,152=>Find no block
Failed time : 22/12/05 09:42
=================================================
Project : math_1	start : 22/12/05 09:42
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 09:42
Mon Dec 05 09:42:26 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,421

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(k>(e+52)){
return (sign(bits)==0L)?0:1;
}else {
 final long m=(sign(bits)==0L)?mantissa(bits):-mantissa(bits);
return (int)((m>>(k-e))&0x1L);
}

Time : 22/12/05 09:43
----------------------------------------
Failed time : 22/12/05 09:45
=================================================
Project : math_1	start : 22/12/05 09:45
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 09:45
Mon Dec 05 09:45:30 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,421

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(k>(e+52)){
return (sign(bits)==0L)?0:1;
}else {
 final long m=(sign(bits)==0L)?mantissa(bits):-mantissa(bits);
return (int)((m>>(k-e))&0x1L);
}

Time : 22/12/05 09:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2410445801567371 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java=>0,0]
if(k>n){
throw new NumberIsTooLargeException(LocalizedFormats.PERMUTATION_EXCEEDS_N,k,n,true);
}

Time : 22/12/05 09:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java=>421,426]
if(k>=(e+52)){
return (sign(bits)==0L)?0:1;
}else {
 final long m=(sign(bits)==0L)?mantissa(bits):-mantissa(bits);
return (int)((m>>(k-e))&0x1L);
}

Time : 22/12/05 09:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java=>421,426]
if(k>(e+52)){
return (sign(bits)==0L)?0:1;
}else {
 final long m=(sign(bits)==0L)?mantissa(bits):-mantissa(bits);
return (int)((m>>(k-e))&0x1L);
}

Time : 22/12/05 09:46
----------------------------------------
Success time : 22/12/05 09:48
=================================================
Project : math_1	start : 22/12/05 09:48
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/12/05 09:48
Mon Dec 05 09:48:43 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,1434
Failed time : 22/12/05 09:57
=================================================
Project : math_1	start : 22/12/05 09:57
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/12/05 09:57
Mon Dec 05 09:57:12 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,1434
Failed time : 22/12/05 10:05
=================================================
Project : math_1	start : 22/12/05 10:05
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleVectors | 22/12/05 10:05
Mon Dec 05 10:05:27 CST 2022 Mon Dec 05 10:05:27 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,866=>Find no block
Failed time : 22/12/05 10:05
=================================================
Project : math_1	start : 22/12/05 10:05
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleVectors | 22/12/05 10:05
Mon Dec 05 10:05:36 CST 2022 Mon Dec 05 10:05:36 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,866=>Find no block
Failed time : 22/12/05 10:05
=================================================
Project : math_1	start : 22/12/05 10:05
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/12/05 10:05
Mon Dec 05 10:05:45 CST 2022 org.apache.commons.math3.linear.EigenDecomposition,627
Failed time : 22/12/05 10:07
=================================================
Project : math_1	start : 22/12/05 10:07
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/12/05 10:07
Mon Dec 05 10:08:05 CST 2022 org.apache.commons.math3.linear.EigenDecomposition,627
Failed time : 22/12/05 10:10
=================================================
Project : math_1	start : 22/12/05 10:10
Current failed test : org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest::testHahn1 | 22/12/05 10:10
Mon Dec 05 10:10:25 CST 2022 org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer,165
Failed time : 22/12/05 10:40
=================================================
Project : math_1	start : 22/12/05 10:40
Current failed test : org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizerTest::testHahn1 | 22/12/05 10:41
Mon Dec 05 10:41:14 CST 2022 org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer,165
Failed time : 22/12/05 11:13
=================================================
Project : math_1	start : 22/12/05 11:13
Current failed test : org.apache.commons.math3.distribution.GeometricDistributionTest::testInverseCumulativeProbabilities | 22/12/05 11:13
Mon Dec 05 11:13:37 CST 2022 org.apache.commons.math3.distribution.GeometricDistribution,129
Failed time : 22/12/05 11:13
=================================================
Project : math_1	start : 22/12/05 11:13
Current failed test : org.apache.commons.math3.distribution.GeometricDistributionTest::testInverseCumulativeProbabilities | 22/12/05 11:13
Mon Dec 05 11:13:46 CST 2022 org.apache.commons.math3.distribution.GeometricDistribution,129
Failed time : 22/12/05 11:13
=================================================
Project : math_1	start : 22/12/05 11:13
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/05 11:13
Mon Dec 05 11:13:56 CST 2022 org.apache.commons.math3.special.Erf,214
Failed time : 22/12/05 11:22
=================================================
Project : math_1	start : 22/12/05 11:22
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/05 11:22
Mon Dec 05 11:22:33 CST 2022 org.apache.commons.math3.special.Erf,214
Failed time : 22/12/05 11:31
=================================================
Project : math_1	start : 22/12/05 11:31
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/05 11:31
Mon Dec 05 11:32:09 CST 2022 org.apache.commons.math3.util.MathArrays,1119

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/12/05 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/12/05 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/12/05 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/12/05 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/12/05 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/12/05 11:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/12/05 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/12/05 11:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/12/05 11:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/12/05 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/12/05 11:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/12/05 11:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/12/05 11:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/12/05 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/12/05 11:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.072273090478377 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double s12High=prod1High+prod2High;
 final double s12Prime=s12High-prod2High;
 final double s12Low=(prod2High-(s12High-s12Prime))+(prod1High-s12Prime);
 final double s123High=s12High+prod3High;
 final double s123Prime=s123High-prod3High;

Time : 22/12/05 11:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/12/05 11:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/12/05 11:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0481572586923658 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double b3High=cb3-(cb3-b3);
 final double b3Low=b3-b3High;
 final double prod3High=a3*b3;
 final double prod3Low=a3Low*b3Low-(((prod3High-a3High*b3High)-a3Low*b3High)-a3High*b3Low);
 final double ca4=SPLIT_FACTOR*a4;

Time : 22/12/05 11:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/12/05 11:47
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/12/05 11:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9993148337667671 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/12/05 11:48
----------------------------------------
Success time : 22/12/05 11:52
=================================================
Project : math_1	start : 22/12/05 11:52
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/05 11:52
Mon Dec 05 11:52:19 CST 2022 org.apache.commons.math3.util.MathArrays,1119

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/12/05 11:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*cb2;

Time : 22/12/05 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/12/05 11:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*a3;

Time : 22/12/05 11:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/12/05 11:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*cb2;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4340974424624193 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*b2;

Time : 22/12/05 11:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/12/05 11:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*a3;

Time : 22/12/05 11:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/12/05 11:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 11:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 11:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*a3;

Time : 22/12/05 11:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/12/05 12:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=b3*b2;

Time : 22/12/05 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/12/05 12:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2178148040096386 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double c3=plane3.w.getZ();
 final double d3=plane3.originOffset;
 final double a23=b2*c3-b3*c2;
 final double b23=c2*a3-c3*a2;
 final double c23=a2*b3-a3*b2;

Time : 22/12/05 12:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 12:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=a2*b2;

Time : 22/12/05 12:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/12/05 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.072273090478377 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double s12High=prod1High+prod2High;
 final double s12Prime=s12High-prod2High;
 final double s12Low=(prod2High-(s12High-s12Prime))+(prod1High-s12Prime);
 final double s123High=s12High+prod3High;
 final double s123Prime=s123High-prod3High;

Time : 22/12/05 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*prod2High;

Time : 22/12/05 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/12/05 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0481572586923658 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double b3High=cb3-(cb3-b3);
 final double b3Low=b3-b3High;
 final double prod3High=a3*b3;
 final double prod3Low=a3Low*b3Low-(((prod3High-a3High*b3High)-a3Low*b3High)-a3High*b3Low);
 final double ca4=SPLIT_FACTOR*a4;

Time : 22/12/05 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a4;

Time : 22/12/05 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/12/05 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9993148337667671 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>0,0]
 final double a2Low=a2-a2High;
 final double cb2=SPLIT_FACTOR*b2;
 final double b2High=cb2-(cb2-b2);
 final double b2Low=b2-b2High;
 final double prod2High=a2*b2;

Time : 22/12/05 12:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=SPLIT_FACTOR*a3;

Time : 22/12/05 12:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/MathArrays.java=>1118,1122]
 final double prod2High=a2*b2;
 final double prod2Low=a2Low*b2Low;
 final double ca3=cb2*b2;

Time : 22/12/05 12:13
----------------------------------------
Success time : 22/12/05 12:19
=================================================
Project : math_1	start : 22/12/05 12:19
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testGetSetMatrixLarge | 22/12/05 12:19
Mon Dec 05 12:19:44 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,695

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:20
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.6929011370639184 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>0,0]
 final T[] outBlock=out.blocks[outIndex];
 final int index=pBlock*blockColumns+qBlock;
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>692,695]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift;

Time : 22/12/05 12:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>692,695]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:20
----------------------------------------
Success time : 22/12/05 12:23
=================================================
Project : math_1	start : 22/12/05 12:23
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testGetSetMatrixLarge | 22/12/05 12:23
Mon Dec 05 12:24:02 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,695

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:24
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.6929011370639184 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>0,0]
 final T[] outBlock=out.blocks[outIndex];
 final int index=pBlock*blockColumns+qBlock;
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>692,695]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift;

Time : 22/12/05 12:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java=>692,695]
 final int width=blockWidth(qBlock);
 final int heightExcess=iHeight+rowsShift-BLOCK_SIZE;
 final int widthExcess=jWidth+columnsShift-BLOCK_SIZE;

Time : 22/12/05 12:25
----------------------------------------
Success time : 22/12/05 12:28
=================================================
Project : math_1	start : 22/12/05 12:28
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest::testAccurateCrossProduct | 22/12/05 12:28
Mon Dec 05 12:29:12 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,483
Failed time : 22/12/05 12:40
=================================================
Project : math_1	start : 22/12/05 12:40
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest::testAccurateCrossProduct | 22/12/05 12:40
Mon Dec 05 12:40:29 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,483
Failed time : 22/12/05 12:48
=================================================
Project : math_1	start : 22/12/05 12:48
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/12/05 12:48
Mon Dec 05 12:48:47 CST 2022 org.apache.commons.math3.stat.inference.GTest,372

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.6757781991134864 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>0,0]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
obs1=observed1[i];
obs2=observed2[i];
if(unequalCounts){
dev=obs1/weight-obs2*weight;
}else {
dev=obs1-obs2;
}
sumSq+=(dev*dev)/(obs1+obs2);
}

Time : 22/12/05 12:49
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>372,380]
if(observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:49
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>372,380]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:49
----------------------------------------
Success time : 22/12/05 12:50
=================================================
Project : math_1	start : 22/12/05 12:50
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/12/05 12:50
Mon Dec 05 12:50:32 CST 2022 org.apache.commons.math3.stat.inference.GTest,372

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:50
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.6757781991134864 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>0,0]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
obs1=observed1[i];
obs2=observed2[i];
if(unequalCounts){
dev=obs1/weight-obs2*weight;
}else {
dev=obs1-obs2;
}
sumSq+=(dev*dev)/(obs1+obs2);
}

Time : 22/12/05 12:51
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>372,380]
if(observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:51
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/stat/inference/GTest.java=>372,380]
if(observed1[i]==0&&observed2[i]==0){
throw new ZeroException(LocalizedFormats.OBSERVED_COUNTS_BOTTH_ZERO_FOR_ENTRY,i);
}else {
countSum1+=observed1[i];
countSum2+=observed2[i];
collSums[i]=observed1[i]+observed2[i];
k[0][i]=observed1[i];
k[1][i]=observed2[i];
}

Time : 22/12/05 12:51
----------------------------------------
Success time : 22/12/05 12:52
=================================================
Project : math_1	start : 22/12/05 12:52
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testToDifferentiableMultivariateFunction | 22/12/05 12:52
Mon Dec 05 12:52:30 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,248
Failed time : 22/12/05 12:59
=================================================
Project : math_1	start : 22/12/05 12:59
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testToDifferentiableMultivariateFunction | 22/12/05 12:59
Mon Dec 05 12:59:29 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,248
Failed time : 22/12/05 13:06
=================================================
Project : math_1	start : 22/12/05 13:06
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/12/05 13:06
Mon Dec 05 13:06:34 CST 2022 org.apache.commons.math3.linear.AbstractRealMatrix,130
Failed time : 22/12/05 13:19
=================================================
Project : math_1	start : 22/12/05 13:19
Current failed test : org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest::testFit | 22/12/05 13:19
Mon Dec 05 13:19:53 CST 2022 org.apache.commons.math3.linear.AbstractRealMatrix,130
Failed time : 22/12/05 13:30
=================================================
Project : math_1	start : 22/12/05 13:30
Current failed test : org.apache.commons.math3.linear.FieldMatrixImplTest::testSetSubMatrix | 22/12/05 13:30
Mon Dec 05 13:30:12 CST 2022 org.apache.commons.math3.linear.AbstractFieldMatrix,463
Failed time : 22/12/05 13:30
=================================================
Project : math_1	start : 22/12/05 13:30
Current failed test : org.apache.commons.math3.linear.FieldMatrixImplTest::testSetSubMatrix | 22/12/05 13:30
Mon Dec 05 13:30:43 CST 2022 org.apache.commons.math3.linear.AbstractFieldMatrix,463
Failed time : 22/12/05 13:31
=================================================
Project : math_1	start : 22/12/05 13:31
Current failed test : org.apache.commons.math3.distribution.LogNormalDistributionTest::testQuantiles | 22/12/05 13:31
Mon Dec 05 13:31:14 CST 2022 org.apache.commons.math3.distribution.LogNormalDistribution,230
Failed time : 22/12/05 13:39
=================================================
Project : math_1	start : 22/12/05 13:39
Current failed test : org.apache.commons.math3.distribution.LogNormalDistributionTest::testQuantiles | 22/12/05 13:39
Mon Dec 05 13:39:21 CST 2022 org.apache.commons.math3.distribution.LogNormalDistribution,230
Failed time : 22/12/05 13:47
=================================================
Project : math_1	start : 22/12/05 13:47
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 13:47
Mon Dec 05 13:47:28 CST 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,945

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:49
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7360986626045958 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
for(int i=begin;i<k;i++){
increment(values[i]);
}

Time : 22/12/05 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:50
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4032621275716863 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
double w=matrixT[i][i]-p;
r=0.0;
for(int j=l;j<=idx;j++){
r=r+matrixT[i][j]*matrixT[j][idx];
}

Time : 22/12/05 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:54
----------------------------------------
Success time : 22/12/05 13:56
=================================================
Project : math_1	start : 22/12/05 13:56
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 13:56
Mon Dec 05 13:56:24 CST 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,945

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7360986626045958 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
for(int i=begin;i<k;i++){
increment(values[i]);
}

Time : 22/12/05 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 13:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 14:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4032621275716863 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>0,0]
double w=matrixT[i][i]-p;
r=0.0;
for(int j=l;j<=idx;j++){
r=r+matrixT[i][j]*matrixT[j][idx];
}

Time : 22/12/05 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
for(int i=1;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 14:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java=>945,947]
cc=0.0;
for(int i=DEFAULT_DIAGONALONLY;i<doubles.length;i++){
dis[i]=new DoubleIndex(doubles[i],i);
}

Time : 22/12/05 14:02
----------------------------------------
Success time : 22/12/05 14:04
=================================================
Project : math_1	start : 22/12/05 14:04
Current failed test : org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest::testMultiple | 22/12/05 14:04
Mon Dec 05 14:04:30 CST 2022 org.apache.commons.math3.geometry.partitioning.BSPTree,404
Failed time : 22/12/05 14:09
=================================================
Project : math_1	start : 22/12/05 14:09
Current failed test : org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest::testMultiple | 22/12/05 14:09
Mon Dec 05 14:09:17 CST 2022 org.apache.commons.math3.geometry.partitioning.BSPTree,404
Failed time : 22/12/05 14:13
=================================================
Project : math_1	start : 22/12/05 14:13
Current failed test : org.apache.commons.math3.stat.inference.OneWayAnovaTest::testAnovaPValueSummaryStatistics | 22/12/05 14:13
Mon Dec 05 14:14:07 CST 2022 org.apache.commons.math3.stat.inference.OneWayAnova,320
Failed time : 22/12/05 14:14
=================================================
Project : math_1	start : 22/12/05 14:14
Current failed test : org.apache.commons.math3.stat.inference.OneWayAnovaTest::testAnovaPValueSummaryStatistics | 22/12/05 14:14
Mon Dec 05 14:14:23 CST 2022 org.apache.commons.math3.stat.inference.OneWayAnova,320
Failed time : 22/12/05 14:14
=================================================
Project : math_1	start : 22/12/05 14:14
Current failed test : org.apache.commons.math3.linear.SparseRealVectorTest::testSubtractSameType | 22/12/05 14:14
Mon Dec 05 14:14:41 CST 2022 org.apache.commons.math3.linear.OpenMapRealVector,645
Failed time : 22/12/05 14:14
=================================================
Project : math_1	start : 22/12/05 14:14
Current failed test : org.apache.commons.math3.linear.SparseRealVectorTest::testSubtractSameType | 22/12/05 14:14
Mon Dec 05 14:15:04 CST 2022 org.apache.commons.math3.linear.OpenMapRealVector,645
Failed time : 22/12/05 14:15
=================================================
Project : math_1	start : 22/12/05 14:15
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/12/05 14:15
Mon Dec 05 14:15:29 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1227
Failed time : 22/12/05 14:15
=================================================
Project : math_1	start : 22/12/05 14:15
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/12/05 14:15
Mon Dec 05 14:16:02 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1227
Failed time : 22/12/05 14:16
=================================================
Project : math_1	start : 22/12/05 14:16
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/12/05 14:16
Mon Dec 05 14:16:38 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,336
Failed time : 22/12/05 14:21
=================================================
Project : math_1	start : 22/12/05 14:21
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/12/05 14:21
Mon Dec 05 14:21:49 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,336
Failed time : 22/12/05 14:26
=================================================
Project : math_1	start : 22/12/05 14:26
Current failed test : org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718 | 22/12/05 14:26
Mon Dec 05 14:27:01 CST 2022 org.apache.commons.math3.special.Beta,433

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:28
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.222584973689915 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
d=p/q;
u=x+d;
if(u-a<tol2||b-u<tol2){
if(x<=m){
d=tol1;
}else {
d=-tol1;
}
}

Time : 22/12/05 14:29
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:29
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2187348144101902 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return 2/(b-a);
}

Time : 22/12/05 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:34
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1421685949393148 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/12/05 14:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1101309026582085 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/05 14:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:44
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0906549736373696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(q<0.0){
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q-t);
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
double u=0.0;
double s=1.0;

Time : 22/12/05 14:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:45
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0709984477284888 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(b!=0||c!=0){
shift=FastMath.sqrt(b*b+c);
if(b<0){
shift=-shift;
}
shift=c/(b+shift);
}

Time : 22/12/05 14:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:46
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0269617132963629 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if((a<0)||(a>b)){
throw new OutOfRangeException(a,0,b);
}
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
 final double h=a/b;
 final double p=h/(1.0+h);
 final double q=1.0/(1.0+h);

Time : 22/12/05 14:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:48
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9821685949393149 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/12/05 14:49
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:49
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:49
----------------------------------------
Success time : 22/12/05 14:50
=================================================
Project : math_1	start : 22/12/05 14:50
Current failed test : org.apache.commons.math3.distribution.BinomialDistributionTest::testMath718 | 22/12/05 14:50
Mon Dec 05 14:50:20 CST 2022 org.apache.commons.math3.special.Beta,433

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:52
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.222584973689915 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
d=p/q;
u=x+d;
if(u-a<tol2||b-u<tol2){
if(x<=m){
d=tol1;
}else {
d=-tol1;
}
}

Time : 22/12/05 14:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2187348144101902 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return 2/(b-a);
}

Time : 22/12/05 14:53
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:53
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:53
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:56
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:56
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:56
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:57
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:57
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (u-w)/(v-a);
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 14:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-a;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 14:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2012604384949341 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(x==c){
return (c-a)/(b-a);
}

Time : 22/12/05 15:00
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:00
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-a)-b;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1421685949393148 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/12/05 15:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1101309026582085 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/05 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(a<=c){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0906549736373696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(q<0.0){
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q-t);
}else {
q=realEigenvalues[m]-realEigenvalues[j]+e[j]/(q+t);
}
double u=0.0;
double s=1.0;

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(q<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0709984477284888 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(b!=0||c!=0){
shift=FastMath.sqrt(b*b+c);
if(b<0){
shift=-shift;
}
shift=c/(b+shift);
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0269617132963629 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if((a<0)||(a>b)){
throw new OutOfRangeException(a,0,b);
}
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
 final double h=a/b;
 final double p=h/(1.0+h);
 final double q=1.0/(1.0+h);

Time : 22/12/05 15:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(b<10){
throw new NumberIsTooSmallException(b,10,true);
}
if(a<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9821685949393149 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>0,0]
if(p==1){
return b;
}
if(p<(c-a)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
return b-FastMath.sqrt((1-p)*(b-a));

Time : 22/12/05 15:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/special/Beta.java=>432,436]
if(u<(w-v)/(b-a)){
return a+FastMath.sqrt(p*(b-a));
}
if(p<=v){
return (((-0.5-FastMath.log(b)+HALF_LOG_TWO_PI)+w)-u)-v;
}else {
return (((-0.5*FastMath.log(b)+HALF_LOG_TWO_PI)+w)-v)-u;
}

Time : 22/12/05 15:09
----------------------------------------
Success time : 22/12/05 15:09
=================================================
Project : math_1	start : 22/12/05 15:09
Current failed test : org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest::testStartSimplexInsideRange | 22/12/05 15:09
Mon Dec 05 15:09:51 CST 2022 org.apache.commons.math3.optimization.direct.AbstractSimplex,114
Failed time : 22/12/05 15:10
=================================================
Project : math_1	start : 22/12/05 15:10
Current failed test : org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest::testStartSimplexInsideRange | 22/12/05 15:10
Mon Dec 05 15:10:28 CST 2022 org.apache.commons.math3.optimization.direct.AbstractSimplex,114
Failed time : 22/12/05 15:10
=================================================
Project : math_1	start : 22/12/05 15:10
Current failed test : org.apache.commons.math3.analysis.integration.MidPointIntegratorTest::testLowAccuracy | 22/12/05 15:10
Mon Dec 05 15:11:05 CST 2022 org.apache.commons.math3.analysis.integration.MidPointIntegrator,149
Failed time : 22/12/05 15:11
=================================================
Project : math_1	start : 22/12/05 15:11
Current failed test : org.apache.commons.math3.analysis.integration.MidPointIntegratorTest::testLowAccuracy | 22/12/05 15:11
Mon Dec 05 15:12:06 CST 2022 org.apache.commons.math3.analysis.integration.MidPointIntegrator,149
Failed time : 22/12/05 15:12
=================================================
Project : math_1	start : 22/12/05 15:12
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 15:13
Mon Dec 05 15:13:06 CST 2022 org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet,556
Failed time : 22/12/05 15:17
=================================================
Project : math_1	start : 22/12/05 15:17
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 15:18
Mon Dec 05 15:18:07 CST 2022 org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet,556
Failed time : 22/12/05 15:22
=================================================
Project : math_1	start : 22/12/05 15:22
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testConvergenceOnFunctionAccuracy | 22/12/05 15:23
Mon Dec 05 15:23:07 CST 2022 org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP,227
Failed time : 22/12/05 15:23
=================================================
Project : math_1	start : 22/12/05 15:23
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testConvergenceOnFunctionAccuracy | 22/12/05 15:23
Mon Dec 05 15:23:46 CST 2022 org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP,227
Failed time : 22/12/05 15:24
=================================================
Project : math_1	start : 22/12/05 15:24
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 15:24
Mon Dec 05 15:24:28 CST 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,1254
Failed time : 22/12/05 15:28
=================================================
Project : math_1	start : 22/12/05 15:28
Current failed test : org.apache.commons.math3.optimization.direct.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 15:28
Mon Dec 05 15:28:15 CST 2022 org.apache.commons.math3.optimization.direct.CMAESOptimizer,1254
Failed time : 22/12/05 15:32
=================================================
Project : math_1	start : 22/12/05 15:32
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/12/05 15:32
Mon Dec 05 15:32:26 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,1549
Failed time : 22/12/05 15:37
=================================================
Project : math_1	start : 22/12/05 15:37
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testWalk | 22/12/05 15:37
Mon Dec 05 15:37:14 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,1549
Failed time : 22/12/05 15:41
=================================================
Project : math_1	start : 22/12/05 15:41
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testConvergenceOnFunctionAccuracy | 22/12/05 15:41
Mon Dec 05 15:42:04 CST 2022 org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP,290
Failed time : 22/12/05 15:42
=================================================
Project : math_1	start : 22/12/05 15:42
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testConvergenceOnFunctionAccuracy | 22/12/05 15:42
Mon Dec 05 15:42:47 CST 2022 org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP,290
Failed time : 22/12/05 15:43
=================================================
Project : math_1	start : 22/12/05 15:43
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/05 15:43
Mon Dec 05 15:43:28 CST 2022 Mon Dec 05 15:43:28 CST 2022 : org.apache.commons.math3.analysis.differentiation.DSCompiler,1235=>Find no block
Failed time : 22/12/05 15:43
=================================================
Project : math_1	start : 22/12/05 15:43
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/05 15:43
Mon Dec 05 15:43:37 CST 2022 Mon Dec 05 15:43:37 CST 2022 : org.apache.commons.math3.analysis.differentiation.DSCompiler,1235=>Find no block
Failed time : 22/12/05 15:43
=================================================
Project : math_1	start : 22/12/05 15:43
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testCompareDerivativeSigmoid | 22/12/05 15:43
Mon Dec 05 15:43:47 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,199
Failed time : 22/12/05 15:46
=================================================
Project : math_1	start : 22/12/05 15:46
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testCompareDerivativeSigmoid | 22/12/05 15:46
Mon Dec 05 15:46:10 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,199
Failed time : 22/12/05 15:48
=================================================
Project : math_1	start : 22/12/05 15:48
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/12/05 15:48
Mon Dec 05 15:48:35 CST 2022 Mon Dec 05 15:48:35 CST 2022 : org.apache.commons.math3.linear.EigenDecomposition,738=>Find no block
Failed time : 22/12/05 15:48
=================================================
Project : math_1	start : 22/12/05 15:48
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/12/05 15:48
Mon Dec 05 15:48:45 CST 2022 Mon Dec 05 15:48:45 CST 2022 : org.apache.commons.math3.linear.EigenDecomposition,738=>Find no block
Failed time : 22/12/05 15:48
=================================================
Project : math_1	start : 22/12/05 15:48
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/05 15:48
Mon Dec 05 15:48:54 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,630
Failed time : 22/12/05 16:08
=================================================
Project : math_1	start : 22/12/05 16:08
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/05 16:08
Mon Dec 05 16:08:13 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,630
Failed time : 22/12/05 16:26
=================================================
Project : math_1	start : 22/12/05 16:26
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testPolarForm | 22/12/05 16:26
Mon Dec 05 16:26:52 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Rotation,140
Failed time : 22/12/05 16:28
=================================================
Project : math_1	start : 22/12/05 16:28
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testPolarForm | 22/12/05 16:28
Mon Dec 05 16:28:28 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Rotation,140
Failed time : 22/12/05 16:29
=================================================
Project : math_1	start : 22/12/05 16:29
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition | 22/12/05 16:30
Mon Dec 05 16:30:05 CST 2022 org.apache.commons.math3.util.FastMath,546
Failed time : 22/12/05 16:32
=================================================
Project : math_1	start : 22/12/05 16:32
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshDefinition | 22/12/05 16:32
Mon Dec 05 16:32:46 CST 2022 org.apache.commons.math3.util.FastMath,546
Failed time : 22/12/05 16:35
=================================================
Project : math_1	start : 22/12/05 16:35
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/12/05 16:35
Mon Dec 05 16:35:27 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1229
Failed time : 22/12/05 16:54
=================================================
Project : math_1	start : 22/12/05 16:54
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testSeveralBlocks | 22/12/05 16:54
Mon Dec 05 16:54:46 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1229
Failed time : 22/12/05 17:17
=================================================
Project : math_1	start : 22/12/05 17:17
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/12/05 17:17
Mon Dec 05 17:17:59 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,303
Failed time : 22/12/05 17:21
=================================================
Project : math_1	start : 22/12/05 17:21
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest::testHessian | 22/12/05 17:21
Mon Dec 05 17:21:59 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates,303
Failed time : 22/12/05 17:25
=================================================
Project : math_1	start : 22/12/05 17:25
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testPlane | 22/12/05 17:25
Mon Dec 05 17:25:55 CST 2022 org.apache.commons.math3.linear.QRDecomposition,343
Failed time : 22/12/05 17:26
=================================================
Project : math_1	start : 22/12/05 17:26
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testPlane | 22/12/05 17:26
Mon Dec 05 17:26:09 CST 2022 org.apache.commons.math3.linear.QRDecomposition,343
Failed time : 22/12/05 17:26
=================================================
Project : math_1	start : 22/12/05 17:26
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/12/05 17:26
Mon Dec 05 17:26:23 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1449
Failed time : 22/12/05 17:39
=================================================
Project : math_1	start : 22/12/05 17:39
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testWalk | 22/12/05 17:39
Mon Dec 05 17:39:46 CST 2022 org.apache.commons.math3.linear.BlockFieldMatrix,1449
Failed time : 22/12/05 17:56
=================================================
Project : math_1	start : 22/12/05 17:56
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/05 17:56
Mon Dec 05 17:56:14 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,631
Failed time : 22/12/05 18:00
=================================================
Project : math_1	start : 22/12/05 18:00
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/05 18:00
Mon Dec 05 18:00:08 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,631
Failed time : 22/12/05 18:04
=================================================
Project : math_1	start : 22/12/05 18:04
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/12/05 18:04
Mon Dec 05 18:04:17 CST 2022 org.apache.commons.math3.transform.FastFourierTransformer,344
Failed time : 22/12/05 18:05
=================================================
Project : math_1	start : 22/12/05 18:05
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/12/05 18:05
Mon Dec 05 18:05:52 CST 2022 org.apache.commons.math3.transform.FastFourierTransformer,344
Failed time : 22/12/05 18:07
=================================================
Project : math_1	start : 22/12/05 18:07
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testSingularities | 22/12/05 18:07
Mon Dec 05 18:07:28 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,503
Failed time : 22/12/05 18:08
=================================================
Project : math_1	start : 22/12/05 18:08
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testSingularities | 22/12/05 18:08
Mon Dec 05 18:08:36 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,503
Failed time : 22/12/05 18:09
=================================================
Project : math_1	start : 22/12/05 18:09
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testPlane | 22/12/05 18:09
Mon Dec 05 18:09:45 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,104
Failed time : 22/12/05 18:10
=================================================
Project : math_1	start : 22/12/05 18:10
Current failed test : org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest::testPlane | 22/12/05 18:10
Mon Dec 05 18:10:17 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,104
Failed time : 22/12/05 18:10
=================================================
Project : math_1	start : 22/12/05 18:10
Current failed test : org.apache.commons.math3.distribution.ChiSquaredDistributionTest::testSmallDf | 22/12/05 18:10
Mon Dec 05 18:10:49 CST 2022 org.apache.commons.math3.special.Gamma,323
Failed time : 22/12/05 18:10
=================================================
Project : math_1	start : 22/12/05 18:10
Current failed test : org.apache.commons.math3.distribution.ChiSquaredDistributionTest::testSmallDf | 22/12/05 18:10
Mon Dec 05 18:11:00 CST 2022 org.apache.commons.math3.special.Gamma,323
Failed time : 22/12/05 18:11
=================================================
Project : math_1	start : 22/12/05 18:11
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/12/05 18:11
Mon Dec 05 18:11:10 CST 2022 org.apache.commons.math3.util.FastMath,3836
Failed time : 22/12/05 18:13
=================================================
Project : math_1	start : 22/12/05 18:13
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/12/05 18:13
Mon Dec 05 18:13:24 CST 2022 org.apache.commons.math3.util.FastMath,3836
Failed time : 22/12/05 18:15
=================================================
Project : math_1	start : 22/12/05 18:15
Current failed test : org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest::testBackward | 22/12/05 18:15
Mon Dec 05 18:15:36 CST 2022 org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator,116
Failed time : 22/12/05 18:17
=================================================
Project : math_1	start : 22/12/05 18:17
Current failed test : org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest::testBackward | 22/12/05 18:17
Mon Dec 05 18:17:07 CST 2022 org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator,116
Failed time : 22/12/05 18:18
=================================================
Project : math_1	start : 22/12/05 18:18
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 18:18
Mon Dec 05 18:18:38 CST 2022 org.apache.commons.math3.geometry.euclidean.twod.Line,182
Failed time : 22/12/05 18:18
=================================================
Project : math_1	start : 22/12/05 18:18
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/05 18:18
Mon Dec 05 18:18:46 CST 2022 org.apache.commons.math3.geometry.euclidean.twod.Line,182
Failed time : 22/12/05 18:18
=================================================
Project : math_1	start : 22/12/05 18:18
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/05 18:18
Mon Dec 05 18:18:55 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/12/05 18:19
=================================================
Project : math_1	start : 22/12/05 18:19
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/05 18:19
Mon Dec 05 18:19:50 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/12/05 18:20
=================================================
Project : math_1	start : 22/12/05 18:20
Current failed test : org.apache.commons.math3.dfp.DfpTest::testToString | 22/12/05 18:20
Mon Dec 05 18:20:45 CST 2022 org.apache.commons.math3.dfp.Dfp,2102
Failed time : 22/12/05 18:22
=================================================
Project : math_1	start : 22/12/05 18:22
Current failed test : org.apache.commons.math3.dfp.DfpTest::testToString | 22/12/05 18:23
Mon Dec 05 18:23:05 CST 2022 org.apache.commons.math3.dfp.Dfp,2102
Failed time : 22/12/05 18:25
=================================================
Project : math_1	start : 22/12/05 18:25
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/12/05 18:25
Mon Dec 05 18:25:27 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,535

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:31
----------------------------------------
Failed time : 22/12/05 18:32
=================================================
Project : math_1	start : 22/12/05 18:32
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/12/05 18:32
Mon Dec 05 18:32:39 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,535

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/05 18:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/05 18:38
----------------------------------------
Failed time : 22/12/05 18:39
=================================================
Project : math_1	start : 22/12/05 18:39
Current failed test : org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testGaussian | 22/12/05 18:39
Mon Dec 05 18:39:51 CST 2022 org.apache.commons.math3.analysis.function.Gaussian,83
Failed time : 22/12/05 18:39
=================================================
Project : math_1	start : 22/12/05 18:39
Current failed test : org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest::testGaussian | 22/12/05 18:39
Mon Dec 05 18:40:02 CST 2022 org.apache.commons.math3.analysis.function.Gaussian,83
Failed time : 22/12/05 18:40
=================================================
Project : math_1	start : 22/12/05 18:40
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testToRadiansDefinition | 22/12/05 18:40
Mon Dec 05 18:40:14 CST 2022 org.apache.commons.math3.util.FastMath,2957
Failed time : 22/12/05 18:43
=================================================
Project : math_1	start : 22/12/05 18:43
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testToRadiansDefinition | 22/12/05 18:43
Mon Dec 05 18:43:53 CST 2022 org.apache.commons.math3.util.FastMath,2957
Failed time : 22/12/05 18:47
=================================================
Project : math_1	start : 22/12/05 18:47
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testFrobeniusNorm | 22/12/05 18:47
Mon Dec 05 18:47:34 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,655
Failed time : 22/12/05 18:47
=================================================
Project : math_1	start : 22/12/05 18:47
Current failed test : org.apache.commons.math3.linear.BlockRealMatrixTest::testFrobeniusNorm | 22/12/05 18:47
Mon Dec 05 18:48:04 CST 2022 org.apache.commons.math3.linear.BlockRealMatrix,655
Failed time : 22/12/05 18:48
=================================================
Project : math_1	start : 22/12/05 18:48
Current failed test : org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest::testJacobiOrthogonality | 22/12/05 18:48
Mon Dec 05 18:48:36 CST 2022 Mon Dec 05 18:48:36 CST 2022 : org.apache.commons.math3.analysis.polynomials.PolynomialsUtils,248=>Find no block
Failed time : 22/12/05 18:48
=================================================
Project : math_1	start : 22/12/05 18:48
Current failed test : org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest::testJacobiOrthogonality | 22/12/05 18:48
Mon Dec 05 18:48:43 CST 2022 Mon Dec 05 18:48:43 CST 2022 : org.apache.commons.math3.analysis.polynomials.PolynomialsUtils,248=>Find no block
Failed time : 22/12/05 18:48
=================================================
Project : math_1	start : 22/12/05 18:48
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testMatrix | 22/12/05 18:48
Mon Dec 05 18:48:52 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Rotation,431
Failed time : 22/12/05 18:49
=================================================
Project : math_1	start : 22/12/05 18:49
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testMatrix | 22/12/05 18:49
Mon Dec 05 18:49:14 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Rotation,431
Failed time : 22/12/05 18:49
=================================================
Project : math_1	start : 22/12/05 18:49
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 18:49
Mon Dec 05 18:49:37 CST 2022 org.apache.commons.math3.util.FastMath,427
Failed time : 22/12/05 18:51
=================================================
Project : math_1	start : 22/12/05 18:51
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 18:51
Mon Dec 05 18:51:52 CST 2022 org.apache.commons.math3.util.FastMath,427
Failed time : 22/12/05 18:53
=================================================
Project : math_1	start : 22/12/05 18:54
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/05 18:54
Mon Dec 05 18:54:07 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,488

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.491183234124117 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n;k>0;--k){
value+=1.0/FastMath.pow(k,m);
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4822647673231124 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n-1;k>=p;--k){
va[k][k]=1;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4788481838676337 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int i=n-k+1;i<=n;i++){
logSum+=FastMath.log(i);
}

Time : 22/12/05 18:56
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:56
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<=nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4647985144473945 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=j;k<(end-1);++k){
rawLoop[k]=rawLoop[k+1];
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4565412398262683 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int l=0;l<sequence[k];++l){
fk[k][l+1]=new double[y0.length];
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 18:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
++k;
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2057912151115735 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=1;j<=k-l2;++j){
factor=FastMath.pow(0.5*sequence[j+l2],l);
middleIndex=fk[l2+j].length/2;
for(int i=0;i<y0.length;++i){
diagonal[j-1][i]=factor*fk[l2+j][middleIndex+l][i];
}
extrapolate(l2,j,diagonal,yMidDots[l+1]);
}

Time : 22/12/05 19:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0807945474629004 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=rank;j<nC;++j){
lmDir[permutation[j]]=0;
}

Time : 22/12/05 19:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:05
----------------------------------------
Success time : 22/12/05 19:10
=================================================
Project : math_1	start : 22/12/05 19:10
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/05 19:10
Mon Dec 05 19:10:16 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,488

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.491183234124117 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n;k>0;--k){
value+=1.0/FastMath.pow(k,m);
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4822647673231124 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=n-1;k>=p;--k){
va[k][k]=1;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nC;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4788481838676337 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int i=n-k+1;i<=n;i++){
logSum+=FastMath.log(i);
}

Time : 22/12/05 19:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<=nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4647985144473945 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int k=j;k<(end-1);++k){
rawLoop[k]=rawLoop[k+1];
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=nR;k<(nC-1);++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4565412398262683 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int l=0;l<sequence[k];++l){
fk[k][l+1]=new double[y0.length];
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<permutation[k];++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=nR;k<nC;++k){
++k;
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2057912151115735 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=1;j<=k-l2;++j){
factor=FastMath.pow(0.5*sequence[j+l2],l);
middleIndex=fk[l2+j].length/2;
for(int i=0;i<y0.length;++i){
diagonal[j-1][i]=factor*fk[l2+j][middleIndex+l][i];
}
extrapolate(l2,j,diagonal,yMidDots[l+1]);
}

Time : 22/12/05 19:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC-nR;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:21
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0807945474629004 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
for(int j=rank;j<nC;++j){
lmDir[permutation[j]]=0;
}

Time : 22/12/05 19:21
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=0;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:21
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>487,490]
for(int k=rank;k<nC;++k){
double xK=diag[k]+currentPoint[k];
xNorm+=xK*xK;
}

Time : 22/12/05 19:21
----------------------------------------
Success time : 22/12/05 19:26
=================================================
Project : math_1	start : 22/12/05 19:26
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/05 19:26
Mon Dec 05 19:26:16 CST 2022 org.apache.commons.math3.util.MathArrays,1102
Failed time : 22/12/05 19:27
=================================================
Project : math_1	start : 22/12/05 19:27
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/05 19:27
Mon Dec 05 19:27:21 CST 2022 org.apache.commons.math3.util.MathArrays,1102
Failed time : 22/12/05 19:28
=================================================
Project : math_1	start : 22/12/05 19:28
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 19:28
Mon Dec 05 19:28:27 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer,1041
Failed time : 22/12/05 19:29
=================================================
Project : math_1	start : 22/12/05 19:29
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testConstrainedRosen | 22/12/05 19:29
Mon Dec 05 19:29:44 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer,1041
Failed time : 22/12/05 19:30
=================================================
Project : math_1	start : 22/12/05 19:30
Current failed test : org.apache.commons.math3.linear.SparseRealMatrixTest::testExamples | 22/12/05 19:30
Mon Dec 05 19:31:00 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,210

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:31
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>0,0]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>209,211]
if(containsKey(key,index)){
return false;
}

Time : 22/12/05 19:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>209,211]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:32
----------------------------------------
Success time : 22/12/05 19:32
=================================================
Project : math_1	start : 22/12/05 19:32
Current failed test : org.apache.commons.math3.linear.SparseRealMatrixTest::testExamples | 22/12/05 19:32
Mon Dec 05 19:32:27 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,210

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>0,0]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>209,211]
if(containsKey(key,index)){
return false;
}

Time : 22/12/05 19:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java=>209,211]
if(containsKey(key,index)){
return true;
}

Time : 22/12/05 19:33
----------------------------------------
Success time : 22/12/05 19:33
=================================================
Project : math_1	start : 22/12/05 19:33
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testRandomAccess | 22/12/05 19:33
Mon Dec 05 19:33:53 CST 2022 Mon Dec 05 19:33:53 CST 2022 : org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator,210=>Find no block
Failed time : 22/12/05 19:33
=================================================
Project : math_1	start : 22/12/05 19:33
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testRandomAccess | 22/12/05 19:33
Mon Dec 05 19:34:00 CST 2022 Mon Dec 05 19:34:00 CST 2022 : org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator,210=>Find no block
Failed time : 22/12/05 19:34
=================================================
Project : math_1	start : 22/12/05 19:34
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 19:34
Mon Dec 05 19:34:07 CST 2022 org.apache.commons.math3.util.FastMath,1685
Failed time : 22/12/05 19:43
=================================================
Project : math_1	start : 22/12/05 19:43
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testMultiplyDifferentiable | 22/12/05 19:43
Mon Dec 05 19:43:50 CST 2022 org.apache.commons.math3.util.FastMath,1685
Failed time : 22/12/05 20:05
=================================================
Project : math_1	start : 22/12/05 20:05
Current failed test : org.apache.commons.math3.optimization.fitting.CurveFitterTest::testMath372 | 22/12/05 20:05
Mon Dec 05 20:06:09 CST 2022 org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer,240
Failed time : 22/12/05 20:08
=================================================
Project : math_1	start : 22/12/05 20:08
Current failed test : org.apache.commons.math3.optimization.fitting.CurveFitterTest::testMath372 | 22/12/05 20:08
Mon Dec 05 20:08:23 CST 2022 org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer,240
Failed time : 22/12/05 20:11
=================================================
Project : math_1	start : 22/12/05 20:11
Current failed test : org.apache.commons.math3.stat.inference.TTestTest::testPaired | 22/12/05 20:11
Mon Dec 05 20:11:36 CST 2022 org.apache.commons.math3.stat.StatUtils,714
Failed time : 22/12/05 20:22
=================================================
Project : math_1	start : 22/12/05 20:22
Current failed test : org.apache.commons.math3.stat.inference.TTestTest::testPaired | 22/12/05 20:22
Mon Dec 05 20:22:46 CST 2022 org.apache.commons.math3.stat.StatUtils,714
Failed time : 22/12/05 20:27
=================================================
Project : math_1	start : 22/12/05 20:27
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testExamples | 22/12/05 20:27
Mon Dec 05 20:27:23 CST 2022 org.apache.commons.math3.linear.FieldLUDecomposition,369
Failed time : 22/12/05 20:49
=================================================
Project : math_1	start : 22/12/05 20:49
Current failed test : org.apache.commons.math3.linear.BlockFieldMatrixTest::testExamples | 22/12/05 20:49
Mon Dec 05 20:50:08 CST 2022 org.apache.commons.math3.linear.FieldLUDecomposition,369
Failed time : 22/12/05 21:16
=================================================
Project : math_1	start : 22/12/05 21:16
Current failed test : org.apache.commons.math3.complex.ComplexTest::testScalarDivideInf | 22/12/05 21:16
Mon Dec 05 21:16:32 CST 2022 org.apache.commons.math3.complex.Complex,259
Failed time : 22/12/05 21:16
=================================================
Project : math_1	start : 22/12/05 21:16
Current failed test : org.apache.commons.math3.complex.ComplexTest::testScalarDivideInf | 22/12/05 21:16
Mon Dec 05 21:16:54 CST 2022 org.apache.commons.math3.complex.Complex,259
Failed time : 22/12/05 21:16
=================================================
Project : math_1	start : 22/12/05 21:16
Current failed test : org.apache.commons.math3.genetics.CycleCrossoverTest::testCrossoverExample2 | 22/12/05 21:17
Mon Dec 05 21:17:10 CST 2022 org.apache.commons.math3.genetics.CycleCrossover,160
Failed time : 22/12/05 21:21
=================================================
Project : math_1	start : 22/12/05 21:21
Current failed test : org.apache.commons.math3.genetics.CycleCrossoverTest::testCrossoverExample2 | 22/12/05 21:21
Mon Dec 05 21:22:10 CST 2022 org.apache.commons.math3.genetics.CycleCrossover,160
Failed time : 22/12/05 21:25
=================================================
Project : math_1	start : 22/12/05 21:25
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/05 21:25
Mon Dec 05 21:25:49 CST 2022 org.apache.commons.math3.util.FastMath,1912
Failed time : 22/12/05 21:31
=================================================
Project : math_1	start : 22/12/05 21:31
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/05 21:31
Mon Dec 05 21:32:04 CST 2022 org.apache.commons.math3.util.FastMath,1912
Failed time : 22/12/05 21:38
=================================================
Project : math_1	start : 22/12/05 21:38
Current failed test : org.apache.commons.math3.distribution.GammaDistributionTest::testProbabilities | 22/12/05 21:38
Mon Dec 05 21:38:22 CST 2022 org.apache.commons.math3.distribution.GammaDistribution,277
Failed time : 22/12/05 21:40
=================================================
Project : math_1	start : 22/12/05 21:40
Current failed test : org.apache.commons.math3.distribution.GammaDistributionTest::testProbabilities | 22/12/05 21:40
Mon Dec 05 21:41:01 CST 2022 org.apache.commons.math3.distribution.GammaDistribution,277
Failed time : 22/12/05 21:43
=================================================
Project : math_1	start : 22/12/05 21:43
Current failed test : org.apache.commons.math3.distribution.NormalDistributionTest::testMath280 | 22/12/05 21:43
Mon Dec 05 21:43:40 CST 2022 org.apache.commons.math3.special.Erf,185
Failed time : 22/12/05 21:52
=================================================
Project : math_1	start : 22/12/05 21:52
Current failed test : org.apache.commons.math3.distribution.NormalDistributionTest::testMath280 | 22/12/05 21:52
Mon Dec 05 21:52:24 CST 2022 org.apache.commons.math3.special.Erf,185
Failed time : 22/12/05 22:00
=================================================
Project : math_1	start : 22/12/05 22:00
Current failed test : org.apache.commons.math3.analysis.function.LogitTest::testDerivativesWithInverseFunction | 22/12/05 22:00
Mon Dec 05 22:00:39 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:02
----------------------------------------
Success time : 22/12/05 22:03
=================================================
Project : math_1	start : 22/12/05 22:03
Current failed test : org.apache.commons.math3.analysis.function.LogitTest::testDerivativesWithInverseFunction | 22/12/05 22:03
Mon Dec 05 22:03:20 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32+bits);

Time : 22/12/05 22:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/05 22:05
----------------------------------------
Success time : 22/12/05 22:05
=================================================
Project : math_1	start : 22/12/05 22:05
Current failed test : org.apache.commons.math3.ode.events.EventFilterTest::testTwoOppositeFilters | 22/12/05 22:05
Mon Dec 05 22:06:03 CST 2022 Mon Dec 05 22:06:03 CST 2022 : org.apache.commons.math3.ode.events.FilterType,305=>Find no block
Failed time : 22/12/05 22:06
=================================================
Project : math_1	start : 22/12/05 22:06
Current failed test : org.apache.commons.math3.ode.events.EventFilterTest::testTwoOppositeFilters | 22/12/05 22:06
Mon Dec 05 22:06:09 CST 2022 Mon Dec 05 22:06:09 CST 2022 : org.apache.commons.math3.ode.events.FilterType,305=>Find no block
Failed time : 22/12/05 22:06
=================================================
Project : math_1	start : 22/12/09 11:25
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/09 11:25
Fri Dec 09 11:25:33 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:25
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:26
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:26
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:26
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:27
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:28
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:28
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:28
----------------------------------------
Success time : 22/12/09 11:28
=================================================
Project : math_1	start : 22/12/09 11:28
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testLinearCombination2DSDS | 22/12/09 11:28
Fri Dec 09 11:28:57 CST 2022 org.apache.commons.math3.random.Well1024a,103

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:29
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8679763584701852 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:29
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:29
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.8189507007613197 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z4;
index=indexRm1;
return z4>>(32-bits);

Time : 22/12/09 11:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well1024a.java=>100,103]
v[indexRm1]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 11:31
----------------------------------------
Success time : 22/12/09 11:32
=================================================
Project : math_1	start : 22/12/09 11:32
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 11:32
Fri Dec 09 11:32:25 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:33
----------------------------------------
Success time : 22/12/09 11:33
=================================================
Project : math_1	start : 22/12/09 11:33
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 11:33
Fri Dec 09 11:33:41 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 11:34
----------------------------------------
Success time : 22/12/09 11:34
=================================================
Project : math_1	start : 22/12/09 11:34
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 11:34
Fri Dec 09 11:34:57 CST 2022 org.apache.commons.math3.random.Well44497b,113
Failed time : 22/12/09 11:35
=================================================
Project : math_1	start : 22/12/09 11:35
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 11:35
Fri Dec 09 11:35:20 CST 2022 org.apache.commons.math3.random.Well44497b,113
Failed time : 22/12/09 11:35
=================================================
Project : math_1	start : 22/12/09 11:35
Current failed test : org.apache.commons.math3.fraction.FractionFormatTest::testParseOne2 | 22/12/09 11:35
Fri Dec 09 11:35:44 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,361

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.03710660764619 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
 final int shift=FastMath.min(aTwos,bTwos);
while(a!=b){
 final int delta=a-b;
b=FastMath.min(a,b);
a=FastMath.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a>>>shift;

Time : 22/12/09 11:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:36
----------------------------------------
Success time : 22/12/09 11:40
=================================================
Project : math_1	start : 22/12/09 11:40
Current failed test : org.apache.commons.math3.fraction.FractionFormatTest::testParseOne2 | 22/12/09 11:40
Fri Dec 09 11:40:51 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,361

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:41
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.03710660764619 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
 final int shift=FastMath.min(aTwos,bTwos);
while(a!=b){
 final int delta=a-b;
b=FastMath.min(a,b);
a=FastMath.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a>>>shift;

Time : 22/12/09 11:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>351,361]
while(a!=b){
 final int delta=a-b;
b=Math.min(a,b);
a=Math.abs(delta);
a>>=Integer.numberOfTrailingZeros(a);
}
return a<<shift;

Time : 22/12/09 11:42
----------------------------------------
Success time : 22/12/09 11:45
=================================================
Project : math_1	start : 22/12/09 11:45
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 11:45
Fri Dec 09 11:45:58 CST 2022 org.apache.commons.math3.util.FastMath,3088
Failed time : 22/12/09 11:45
=================================================
Project : math_1	start : 22/12/09 11:45
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 11:46
Fri Dec 09 11:46:06 CST 2022 org.apache.commons.math3.util.FastMath,3088
Failed time : 22/12/09 11:46
=================================================
Project : math_1	start : 22/12/09 11:46
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 11:46
Fri Dec 09 11:46:14 CST 2022 org.apache.commons.math3.random.Well44497b,99
Failed time : 22/12/09 11:46
=================================================
Project : math_1	start : 22/12/09 11:46
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 11:46
Fri Dec 09 11:46:46 CST 2022 org.apache.commons.math3.random.Well44497b,99
Failed time : 22/12/09 11:47
=================================================
Project : math_1	start : 22/12/09 11:47
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 11:47
Fri Dec 09 11:47:19 CST 2022 org.apache.commons.math3.util.FastMath,2128
Failed time : 22/12/09 11:47
=================================================
Project : math_1	start : 22/12/09 11:47
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 11:47
Fri Dec 09 11:47:43 CST 2022 org.apache.commons.math3.util.FastMath,2128
Failed time : 22/12/09 11:48
=================================================
Project : math_1	start : 22/12/09 11:48
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 11:48
Fri Dec 09 11:48:08 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,205
Failed time : 22/12/09 11:48
=================================================
Project : math_1	start : 22/12/09 11:48
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 11:48
Fri Dec 09 11:48:31 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,205
Failed time : 22/12/09 11:48
=================================================
Project : math_1	start : 22/12/09 11:48
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/12/09 11:48
Fri Dec 09 11:48:55 CST 2022 org.apache.commons.math3.random.Well19937c,96
Failed time : 22/12/09 11:49
=================================================
Project : math_1	start : 22/12/09 11:49
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/12/09 11:49
Fri Dec 09 11:49:23 CST 2022 org.apache.commons.math3.random.Well19937c,96
Failed time : 22/12/09 11:49
=================================================
Project : math_1	start : 22/12/09 11:49
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[34] | 22/12/09 11:49
Fri Dec 09 11:49:53 CST 2022 org.apache.commons.math3.util.FastMath,2862
Failed time : 22/12/09 11:52
=================================================
Project : math_1	start : 22/12/09 11:52
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[34] | 22/12/09 11:52
Fri Dec 09 11:52:46 CST 2022 org.apache.commons.math3.util.FastMath,2862
Failed time : 22/12/09 11:55
=================================================
Project : math_1	start : 22/12/09 11:55
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 11:55
Fri Dec 09 11:55:40 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/12/09 11:55
=================================================
Project : math_1	start : 22/12/09 11:55
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 11:55
Fri Dec 09 11:56:04 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/12/09 11:56
=================================================
Project : math_1	start : 22/12/09 11:56
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/12/09 11:56
Fri Dec 09 11:56:29 CST 2022 org.apache.commons.math3.random.Well19937c,95
Failed time : 22/12/09 11:57
=================================================
Project : math_1	start : 22/12/09 11:57
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest::testInterpolation2 | 22/12/09 11:57
Fri Dec 09 11:57:23 CST 2022 org.apache.commons.math3.random.Well19937c,95
Failed time : 22/12/09 11:58
=================================================
Project : math_1	start : 22/12/09 11:58
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testEquivalence | 22/12/09 11:58
Fri Dec 09 11:58:17 CST 2022 org.apache.commons.math3.random.ISAACRandom,183
Failed time : 22/12/09 12:00
=================================================
Project : math_1	start : 22/12/09 12:00
Current failed test : org.apache.commons.math3.stat.correlation.StorelessCovarianceTest::testEquivalence | 22/12/09 12:00
Fri Dec 09 12:01:05 CST 2022 org.apache.commons.math3.random.ISAACRandom,183
Failed time : 22/12/09 12:03
=================================================
Project : math_1	start : 22/12/09 12:03
Current failed test : org.apache.commons.math3.util.CombinatoricsUtilsTest::testStirlingS2 | 22/12/09 12:03
Fri Dec 09 12:03:53 CST 2022 org.apache.commons.math3.util.CombinatoricsUtils,400
Failed time : 22/12/09 12:03
=================================================
Project : math_1	start : 22/12/09 12:03
Current failed test : org.apache.commons.math3.util.CombinatoricsUtilsTest::testStirlingS2 | 22/12/09 12:03
Fri Dec 09 12:04:01 CST 2022 org.apache.commons.math3.util.CombinatoricsUtils,400
Failed time : 22/12/09 12:04
=================================================
Project : math_1	start : 22/12/09 12:04
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 12:04
Fri Dec 09 12:04:10 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:04
----------------------------------------
Success time : 22/12/09 12:05
=================================================
Project : math_1	start : 22/12/09 12:05
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 12:05
Fri Dec 09 12:05:24 CST 2022 org.apache.commons.math3.util.FastMath,3205

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:05
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent>>>23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>3204,3208]
if(scaledExponent<255){
return Float.intBitsToFloat(sign|(scaledExponent<<23));
}else {
return (sign==0)?Float.POSITIVE_INFINITY:Float.NEGATIVE_INFINITY;
}

Time : 22/12/09 12:06
----------------------------------------
Success time : 22/12/09 12:06
=================================================
Project : math_1	start : 22/12/09 12:06
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testSampling | 22/12/09 12:06
Fri Dec 09 12:06:39 CST 2022 org.apache.commons.math3.random.Well19937a,105

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.79098660709696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5991129356476133 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1185990951229758 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
if(count<0){
isaac();
count=SIZE-1;
}
return rsl[count--]>>>32-bits;

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/12/09 12:08
----------------------------------------
Success time : 22/12/09 12:09
=================================================
Project : math_1	start : 22/12/09 12:09
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testSampling | 22/12/09 12:09
Fri Dec 09 12:09:22 CST 2022 org.apache.commons.math3.random.Well19937a,105

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.79098660709696 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[indexRm1]=z4;
v[indexRm2]&=0xffff8000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5991129356476133 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
v[index]=z3;
v[indexRm1]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
v[indexRm2]=z4;
index=indexRm1;
return z4>>>(32-bits);

Time : 22/12/09 12:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/12/09 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1185990951229758 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>0,0]
if(count<0){
isaac();
count=SIZE-1;
}
return rsl[count--]>>>32-bits;

Time : 22/12/09 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return z4<<(32-bits);

Time : 22/12/09 12:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well19937a.java=>102,105]
v[indexRm2]&=0x80000000;
index=indexRm1;
return v[index--]>>>32-bits;

Time : 22/12/09 12:11
----------------------------------------
Success time : 22/12/09 12:11
=================================================
Project : math_1	start : 22/12/09 12:11
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/12/09 12:11
Fri Dec 09 12:12:03 CST 2022 Fri Dec 09 12:12:03 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/12/09 12:12
=================================================
Project : math_1	start : 22/12/09 12:12
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/12/09 12:12
Fri Dec 09 12:12:10 CST 2022 Fri Dec 09 12:12:10 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/12/09 12:12
=================================================
Project : math_1	start : 22/12/09 12:12
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdLong | 22/12/09 12:12
Fri Dec 09 12:12:17 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/12/09 12:15
=================================================
Project : math_1	start : 22/12/09 12:15
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdLong | 22/12/09 12:15
Fri Dec 09 12:15:41 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/12/09 12:18
=================================================
Project : math_1	start : 22/12/09 12:18
Current failed test : org.apache.commons.math3.transform.FastSineTransformerTest::testAdHocData[0] | 22/12/09 12:19
Fri Dec 09 12:19:06 CST 2022 org.apache.commons.math3.transform.FastSineTransformer,160
Failed time : 22/12/09 12:22
=================================================
Project : math_1	start : 22/12/09 12:22
Current failed test : org.apache.commons.math3.transform.FastSineTransformerTest::testAdHocData[0] | 22/12/09 12:22
Fri Dec 09 12:22:18 CST 2022 org.apache.commons.math3.transform.FastSineTransformer,160
Failed time : 22/12/09 12:25
=================================================
Project : math_1	start : 22/12/09 12:25
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 12:25
Fri Dec 09 12:25:30 CST 2022 org.apache.commons.math3.util.FastMath,3093
Failed time : 22/12/09 12:25
=================================================
Project : math_1	start : 22/12/09 12:25
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 12:25
Fri Dec 09 12:26:03 CST 2022 org.apache.commons.math3.util.FastMath,3093
Failed time : 22/12/09 12:26
=================================================
Project : math_1	start : 22/12/09 12:26
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 12:26
Fri Dec 09 12:26:37 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/12/09 12:26
=================================================
Project : math_1	start : 22/12/09 12:26
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 12:26
Fri Dec 09 12:27:00 CST 2022 org.apache.commons.math3.util.FastMath,2209
Failed time : 22/12/09 12:27
=================================================
Project : math_1	start : 22/12/09 12:27
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleRotations | 22/12/09 12:27
Fri Dec 09 12:27:24 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,941
Failed time : 22/12/09 12:28
=================================================
Project : math_1	start : 22/12/09 12:28
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testDoubleRotations | 22/12/09 12:28
Fri Dec 09 12:28:11 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,941
Failed time : 22/12/09 12:28
=================================================
Project : math_1	start : 22/12/09 12:28
Current failed test : org.apache.commons.math3.complex.ComplexTest::testExp | 22/12/09 12:28
Fri Dec 09 12:28:58 CST 2022 org.apache.commons.math3.complex.Complex,505
Failed time : 22/12/09 12:29
=================================================
Project : math_1	start : 22/12/09 12:29
Current failed test : org.apache.commons.math3.complex.ComplexTest::testExp | 22/12/09 12:29
Fri Dec 09 12:29:52 CST 2022 org.apache.commons.math3.complex.Complex,505
Failed time : 22/12/09 12:30
=================================================
Project : math_1	start : 22/12/09 12:30
Current failed test : org.apache.commons.math3.complex.RootsOfUnityTest::testComputeRoots | 22/12/09 12:30
Fri Dec 09 12:30:48 CST 2022 org.apache.commons.math3.util.FastMath,2992
Failed time : 22/12/09 12:31
=================================================
Project : math_1	start : 22/12/09 12:31
Current failed test : org.apache.commons.math3.complex.RootsOfUnityTest::testComputeRoots | 22/12/09 12:31
Fri Dec 09 12:31:41 CST 2022 org.apache.commons.math3.util.FastMath,2992
Failed time : 22/12/09 12:32
=================================================
Project : math_1	start : 22/12/09 12:32
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/09 12:32
Fri Dec 09 12:32:34 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,183
Failed time : 22/12/09 12:41
=================================================
Project : math_1	start : 22/12/09 12:41
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/09 12:41
Fri Dec 09 12:41:55 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,183
Failed time : 22/12/09 12:51
=================================================
Project : math_1	start : 22/12/09 12:51
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testPowDoubleDS | 22/12/09 12:51
Fri Dec 09 12:51:16 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,860
Failed time : 22/12/09 12:58
=================================================
Project : math_1	start : 22/12/09 12:58
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testPowDoubleDS | 22/12/09 12:58
Fri Dec 09 12:58:45 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,860
Failed time : 22/12/09 13:06
=================================================
Project : math_1	start : 22/12/09 13:06
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testSubtract | 22/12/09 13:06
Fri Dec 09 13:06:14 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,505
Failed time : 22/12/09 13:06
=================================================
Project : math_1	start : 22/12/09 13:06
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testSubtract | 22/12/09 13:06
Fri Dec 09 13:06:22 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,505
Failed time : 22/12/09 13:06
=================================================
Project : math_1	start : 22/12/09 13:06
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.LineTest::testContains | 22/12/09 13:06
Fri Dec 09 13:06:30 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Line,165
Failed time : 22/12/09 13:06
=================================================
Project : math_1	start : 22/12/09 13:06
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.LineTest::testContains | 22/12/09 13:06
Fri Dec 09 13:06:57 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Line,165
Failed time : 22/12/09 13:07
=================================================
Project : math_1	start : 22/12/09 13:07
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/09 13:07
Fri Dec 09 13:07:25 CST 2022 org.apache.commons.math3.util.FastMath,2546
Failed time : 22/12/09 13:13
=================================================
Project : math_1	start : 22/12/09 13:13
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/09 13:13
Fri Dec 09 13:13:38 CST 2022 org.apache.commons.math3.util.FastMath,2546
Failed time : 22/12/09 13:19
=================================================
Project : math_1	start : 22/12/09 13:19
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/09 13:19
Fri Dec 09 13:19:53 CST 2022 org.apache.commons.math3.special.Erf,170
Failed time : 22/12/09 13:24
=================================================
Project : math_1	start : 22/12/09 13:24
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/09 13:24
Fri Dec 09 13:24:31 CST 2022 org.apache.commons.math3.special.Erf,170
Failed time : 22/12/09 13:29
=================================================
Project : math_1	start : 22/12/09 13:29
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 13:29
Fri Dec 09 13:29:09 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,793
Failed time : 22/12/09 13:29
=================================================
Project : math_1	start : 22/12/09 13:29
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 13:29
Fri Dec 09 13:29:17 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,793
Failed time : 22/12/09 13:29
=================================================
Project : math_1	start : 22/12/09 13:29
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[45] | 22/12/09 13:29
Fri Dec 09 13:29:25 CST 2022 org.apache.commons.math3.util.FastMath,665
Failed time : 22/12/09 13:30
=================================================
Project : math_1	start : 22/12/09 13:30
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[45] | 22/12/09 13:30
Fri Dec 09 13:31:01 CST 2022 org.apache.commons.math3.util.FastMath,665
Failed time : 22/12/09 13:32
=================================================
Project : math_1	start : 22/12/09 13:32
Current failed test : org.apache.commons.math3.util.FastMathTest::testHyperbolic | 22/12/09 13:32
Fri Dec 09 13:32:37 CST 2022 org.apache.commons.math3.util.FastMath,486

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.2073207578096325 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<mu){
return Double.NaN;
}
 final double delta=x-mu;
 final double f=halfC/delta;
return FastMath.sqrt(f/FastMath.PI)*FastMath.exp(-f)/delta;

Time : 22/12/09 13:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3130608311188006 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<scale){
return 0;
}
return FastMath.pow(scale,shape)/FastMath.pow(x,shape+1)*shape;

Time : 22/12/09 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9922172206645492 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(FastMath.abs(y3)<=functionValueAccuracy){
return x3;
}
 final double delta=1-(y1*y2)/(y3*y3);
 final double correction=(FastMath.signum(y2)*FastMath.signum(y3))*(x3-x1)/FastMath.sqrt(delta);
 final double x=x3-correction;
 final double y=computeObjectiveValue(x);
 final double tolerance=FastMath.max(relativeAccuracy*FastMath.abs(x),absoluteAccuracy);
if(FastMath.abs(x-oldx)<=tolerance){
return x;
}

Time : 22/12/09 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:35
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:35
----------------------------------------
Success time : 22/12/09 13:35
=================================================
Project : math_1	start : 22/12/09 13:35
Current failed test : org.apache.commons.math3.util.FastMathTest::testHyperbolic | 22/12/09 13:35
Fri Dec 09 13:36:00 CST 2022 org.apache.commons.math3.util.FastMath,486

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.2073207578096325 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<mu){
return Double.NaN;
}
 final double delta=x-mu;
 final double f=halfC/delta;
return FastMath.sqrt(f/FastMath.PI)*FastMath.exp(-f)/delta;

Time : 22/12/09 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3130608311188006 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<scale){
return 0;
}
return FastMath.pow(scale,shape)/FastMath.pow(x,shape+1)*shape;

Time : 22/12/09 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<F_1_11){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 0.9922172206645492 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(FastMath.abs(y3)<=functionValueAccuracy){
return x3;
}
 final double delta=1-(y1*y2)/(y3*y3);
 final double correction=(FastMath.signum(y2)*FastMath.signum(y3))*(x3-x1)/FastMath.sqrt(delta);
 final double x=x3-correction;
 final double y=computeObjectiveValue(x);
 final double tolerance=FastMath.max(relativeAccuracy*FastMath.abs(x),absoluteAccuracy);
if(FastMath.abs(x-oldx)<=tolerance){
return x;
}

Time : 22/12/09 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=-LOG_MAX_VALUE){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>481,487]
if(x<=FastMath.max(F_1_11*FastMath.abs(x),F_1_11)){
 final double t=exp(-0.5*x);
return (-0.5*t)*t;
}else {
return -0.5*exp(+x);
}

Time : 22/12/09 13:39
----------------------------------------
Success time : 22/12/09 13:39
=================================================
Project : math_1	start : 22/12/09 13:39
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testTetrahedron | 22/12/09 13:39
Fri Dec 09 13:39:23 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.053529531273319 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(epsilon==0.0&&FastMath.abs(q1)<maxDenominator){
break;
}
throw new FractionConversionException(value,p2,q2);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.984666428506299 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.sqrt(FastMath.abs(meanXSquared-meanX*meanX))<accuracy){
beta=0;
}else {
beta=(meanXY-meanX*meanY)/(meanXSquared-meanX*meanX);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:43
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:45
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/12/09 13:45
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:45
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:45
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:45
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/12/09 13:46
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:46
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:46
----------------------------------------
Success time : 22/12/09 13:47
=================================================
Project : math_1	start : 22/12/09 13:47
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testTetrahedron | 22/12/09 13:47
Fri Dec 09 13:47:54 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Vector3D,328

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.053529531273319 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if((FastMath.abs(p2)>overflow)||(FastMath.abs(q2)>overflow)){
if(epsilon==0.0&&FastMath.abs(q1)<maxDenominator){
break;
}
throw new FractionConversionException(value,p2,q2);
}

Time : 22/12/09 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(serialVersionUID)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:51
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.984666428506299 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.sqrt(FastMath.abs(meanXSquared-meanX*meanX))<accuracy){
beta=0;
}else {
beta=(meanXY-meanX*meanY)/(meanXSquared-meanX*meanX);
}

Time : 22/12/09 13:52
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:52
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<x){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:52
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:53
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.473562793064218 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>0,0]
if(FastMath.abs(sumXX)<10*Double.MIN_VALUE){
return Double.NaN;
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=threshold){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:54
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java=>326,332]
if(FastMath.abs(x)<=10*Double.MIN_VALUE){
double inverse=1/FastMath.sqrt(y*y+z*z);
return new Vector3D(0,inverse*z,+inverse*y);
}else if(FastMath.abs(y)<=threshold){
double inverse=1/FastMath.sqrt(x*x+z*z);
return new Vector3D(-inverse*z,0,inverse*x);
}

Time : 22/12/09 13:54
----------------------------------------
Success time : 22/12/09 13:56
=================================================
Project : math_1	start : 22/12/09 13:56
Current failed test : org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest::testBackward | 22/12/09 13:56
Fri Dec 09 13:56:24 CST 2022 org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator,101
Failed time : 22/12/09 13:56
=================================================
Project : math_1	start : 22/12/09 13:56
Current failed test : org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest::testBackward | 22/12/09 13:56
Fri Dec 09 13:56:42 CST 2022 org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator,101
Failed time : 22/12/09 13:56
=================================================
Project : math_1	start : 22/12/09 13:56
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/12/09 13:56
Fri Dec 09 13:57:01 CST 2022 org.apache.commons.math3.util.FastMath,565
Failed time : 22/12/09 14:03
=================================================
Project : math_1	start : 22/12/09 14:03
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/12/09 14:03
Fri Dec 09 14:03:31 CST 2022 org.apache.commons.math3.util.FastMath,565
Failed time : 22/12/09 14:09
=================================================
Project : math_1	start : 22/12/09 14:09
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testModelsMerging | 22/12/09 14:09
Fri Dec 09 14:10:01 CST 2022 org.apache.commons.math3.ode.ContinuousOutputModel,377
Failed time : 22/12/09 14:10
=================================================
Project : math_1	start : 22/12/09 14:10
Current failed test : org.apache.commons.math3.ode.ContinuousOutputModelTest::testModelsMerging | 22/12/09 14:10
Fri Dec 09 14:10:13 CST 2022 org.apache.commons.math3.ode.ContinuousOutputModel,377
Failed time : 22/12/09 14:10
=================================================
Project : math_1	start : 22/12/09 14:10
Current failed test : org.apache.commons.math3.ode.events.EventStateTest::testIssue695 | 22/12/09 14:10
Fri Dec 09 14:10:26 CST 2022 org.apache.commons.math3.ode.AbstractIntegrator,329
Failed time : 22/12/09 14:10
=================================================
Project : math_1	start : 22/12/09 14:10
Current failed test : org.apache.commons.math3.ode.events.EventStateTest::testIssue695 | 22/12/09 14:10
Fri Dec 09 14:11:03 CST 2022 org.apache.commons.math3.ode.AbstractIntegrator,329
Failed time : 22/12/09 14:11
=================================================
Project : math_1	start : 22/12/09 14:11
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 14:11
Fri Dec 09 14:11:40 CST 2022 org.apache.commons.math3.dfp.Dfp,2494
Failed time : 22/12/09 14:12
=================================================
Project : math_1	start : 22/12/09 14:12
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 14:12
Fri Dec 09 14:12:20 CST 2022 org.apache.commons.math3.dfp.Dfp,2494
Failed time : 22/12/09 14:12
=================================================
Project : math_1	start : 22/12/09 14:12
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest::testAllMonomials[1] | 22/12/09 14:12
Fri Dec 09 14:13:01 CST 2022 org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator,84
Failed time : 22/12/09 14:33
=================================================
Project : math_1	start : 22/12/09 14:33
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest::testAllMonomials[1] | 22/12/09 14:33
Fri Dec 09 14:33:24 CST 2022 org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator,84
Failed time : 22/12/09 14:53
=================================================
Project : math_1	start : 22/12/09 14:53
Current failed test : org.apache.commons.math3.dfp.DfpTest::testTan | 22/12/09 14:53
Fri Dec 09 14:53:50 CST 2022 org.apache.commons.math3.util.FastMath,2413
Failed time : 22/12/09 14:54
=================================================
Project : math_1	start : 22/12/09 14:54
Current failed test : org.apache.commons.math3.dfp.DfpTest::testTan | 22/12/09 14:54
Fri Dec 09 14:54:17 CST 2022 org.apache.commons.math3.util.FastMath,2413
Failed time : 22/12/09 14:54
=================================================
Project : math_1	start : 22/12/09 14:54
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/12/09 14:54
Fri Dec 09 14:54:44 CST 2022 org.apache.commons.math3.stat.inference.GTest,277
Failed time : 22/12/09 15:06
=================================================
Project : math_1	start : 22/12/09 15:06
Current failed test : org.apache.commons.math3.stat.inference.GTestTest::testRootLogLikelihood | 22/12/09 15:06
Fri Dec 09 15:06:25 CST 2022 org.apache.commons.math3.stat.inference.GTest,277
Failed time : 22/12/09 15:18
=================================================
Project : math_1	start : 22/12/09 15:18
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/12/09 15:18
Fri Dec 09 15:18:10 CST 2022 org.apache.commons.math3.util.FastMath,561
Failed time : 22/12/09 15:36
=================================================
Project : math_1	start : 22/12/09 15:36
Current failed test : org.apache.commons.math3.util.FastMathTest::testSinhAccuracy | 22/12/09 15:36
Fri Dec 09 15:36:56 CST 2022 org.apache.commons.math3.util.FastMath,561
Failed time : 22/12/09 15:54
=================================================
Project : math_1	start : 22/12/09 15:54
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinAsin | 22/12/09 15:54
Fri Dec 09 15:54:39 CST 2022 org.apache.commons.math3.util.FastMath,2706

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 15:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7578414886923188 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}

Time : 22/12/09 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/12/09 15:57
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/12/09 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/12/09 15:58
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 15:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 15:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/12/09 15:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/12/09 15:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/12/09 16:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/12/09 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5021086526239489 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<0||invx<0){
if(y<0||invy<0){
return -Math.PI;
}else {
return Math.PI;
}
}else {
return result;
}

Time : 22/12/09 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/12/09 16:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/12/09 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/09 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/12/09 16:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/12/09 16:03
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(c<x&&x<=b){
double divident=2*(b-x);
double divisor=(b-a)*(b-c);
return divident/divisor;
}

Time : 22/12/09 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/12/09 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/12/09 16:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0567451826185024 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=(x-a)*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/09 16:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/12/09 16:05
----------------------------------------
Success time : 22/12/09 16:05
=================================================
Project : math_1	start : 22/12/09 16:05
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSinAsin | 22/12/09 16:05
Fri Dec 09 16:05:25 CST 2022 org.apache.commons.math3.util.FastMath,2706

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<-1.0){
return Double.NaN;
}

Time : 22/12/09 16:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7578414886923188 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return -GAMMA-1/x;
}

Time : 22/12/09 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/12/09 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return Double.NaN;
}

Time : 22/12/09 16:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/12/09 16:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<+1.0){
return x;
}

Time : 22/12/09 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/12/09 16:10
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6527302693675414 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x>0&&x<=S_LIMIT){
return 1/(x*x);
}

Time : 22/12/09 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=+1.0){
return x;
}

Time : 22/12/09 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/12/09 16:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5021086526239489 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(x<0||invx<0){
if(y<0||invy<0){
return -Math.PI;
}else {
return Math.PI;
}
}else {
return result;
}

Time : 22/12/09 16:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||F_1_11<0){
return Double.NaN;
}

Time : 22/12/09 16:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/12/09 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=2*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/09 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<x){
return Double.NaN;
}

Time : 22/12/09 16:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/12/09 16:14
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1161113147418231 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(c<x&&x<=b){
double divident=2*(b-x);
double divisor=(b-a)*(b-c);
return divident/divisor;
}

Time : 22/12/09 16:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<=F_1_11){
return Double.NaN;
}

Time : 22/12/09 16:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/12/09 16:15
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0567451826185024 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>0,0]
if(a<=x&&x<c){
double divident=(x-a)*(x-a);
double divisor=(b-a)*(c-a);
return divident/divisor;
}

Time : 22/12/09 16:15
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0||x<+1.0){
return Double.NaN;
}

Time : 22/12/09 16:15
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/FastMath.java=>2706,2708]
if(x>1.0&&x<x){
return Double.NaN;
}

Time : 22/12/09 16:15
----------------------------------------
Success time : 22/12/09 16:16
=================================================
Project : math_1	start : 22/12/09 16:16
Current failed test : org.apache.commons.math3.optimization.direct.PowellOptimizerTest::testSumSinc | 22/12/09 16:16
Fri Dec 09 16:16:11 CST 2022 org.apache.commons.math3.optimization.univariate.BrentOptimizer,176
Failed time : 22/12/09 16:16
=================================================
Project : math_1	start : 22/12/09 16:16
Current failed test : org.apache.commons.math3.optimization.direct.PowellOptimizerTest::testSumSinc | 22/12/09 16:16
Fri Dec 09 16:17:01 CST 2022 org.apache.commons.math3.optimization.univariate.BrentOptimizer,176
Failed time : 22/12/09 16:17
=================================================
Project : math_1	start : 22/12/09 16:17
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 16:17
Fri Dec 09 16:17:51 CST 2022 Fri Dec 09 16:17:51 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,794=>Find no block
Failed time : 22/12/09 16:17
=================================================
Project : math_1	start : 22/12/09 16:17
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 16:17
Fri Dec 09 16:17:58 CST 2022 Fri Dec 09 16:17:58 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,794=>Find no block
Failed time : 22/12/09 16:17
=================================================
Project : math_1	start : 22/12/09 16:17
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testFitAccuracyDependsOnBoundary | 22/12/09 16:18
Fri Dec 09 16:18:05 CST 2022 org.apache.commons.math3.util.Decimal64,444
Failed time : 22/12/09 16:18
=================================================
Project : math_1	start : 22/12/09 16:18
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest::testFitAccuracyDependsOnBoundary | 22/12/09 16:18
Fri Dec 09 16:18:39 CST 2022 org.apache.commons.math3.util.Decimal64,444
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testVectorTwoPairs | 22/12/09 16:19
Fri Dec 09 16:19:13 CST 2022 Fri Dec 09 16:19:13 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,921=>Find no block
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testVectorTwoPairs | 22/12/09 16:19
Fri Dec 09 16:19:20 CST 2022 Fri Dec 09 16:19:20 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,921=>Find no block
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSignum | 22/12/09 16:19
Fri Dec 09 16:19:27 CST 2022 org.apache.commons.math3.util.FastMath,780
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testSignum | 22/12/09 16:19
Fri Dec 09 16:19:35 CST 2022 org.apache.commons.math3.util.FastMath,780
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testNorm | 22/12/09 16:19
Fri Dec 09 16:19:44 CST 2022 org.apache.commons.math3.complex.Quaternion,115
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.complex.QuaternionTest::testNorm | 22/12/09 16:19
Fri Dec 09 16:19:51 CST 2022 org.apache.commons.math3.complex.Quaternion,115
Failed time : 22/12/09 16:19
=================================================
Project : math_1	start : 22/12/09 16:19
Current failed test : org.apache.commons.math3.complex.ComplexTest::testConjugate | 22/12/09 16:19
Fri Dec 09 16:20:00 CST 2022 org.apache.commons.math3.complex.Complex,201
Failed time : 22/12/09 16:20
=================================================
Project : math_1	start : 22/12/09 16:20
Current failed test : org.apache.commons.math3.complex.ComplexTest::testConjugate | 22/12/09 16:20
Fri Dec 09 16:20:56 CST 2022 org.apache.commons.math3.complex.Complex,201
Failed time : 22/12/09 16:21
=================================================
Project : math_1	start : 22/12/09 16:21
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/12/09 16:21
Fri Dec 09 16:21:52 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,583

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:30
----------------------------------------
Failed time : 22/12/09 16:31
=================================================
Project : math_1	start : 22/12/09 16:31
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testAngles | 22/12/09 16:31
Fri Dec 09 16:31:30 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,583

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}

Time : 22/12/09 16:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getY().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getY().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getZ().getReal()<-1.0)||(v2.getX().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((v2.getX().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(false);
}

Time : 22/12/09 16:40
----------------------------------------
Failed time : 22/12/09 16:41
=================================================
Project : math_1	start : 22/12/09 16:41
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 16:41
Fri Dec 09 16:41:09 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,270
Failed time : 22/12/09 16:41
=================================================
Project : math_1	start : 22/12/09 16:41
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 16:41
Fri Dec 09 16:42:04 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,270
Failed time : 22/12/09 16:42
=================================================
Project : math_1	start : 22/12/09 16:42
Current failed test : org.apache.commons.math3.linear.MatrixUtilsTest::testBlockInverse | 22/12/09 16:42
Fri Dec 09 16:43:00 CST 2022 org.apache.commons.math3.linear.SingularValueDecomposition,124
Failed time : 22/12/09 16:43
=================================================
Project : math_1	start : 22/12/09 16:43
Current failed test : org.apache.commons.math3.linear.MatrixUtilsTest::testBlockInverse | 22/12/09 16:43
Fri Dec 09 16:43:37 CST 2022 org.apache.commons.math3.linear.SingularValueDecomposition,124
Failed time : 22/12/09 16:44
=================================================
Project : math_1	start : 22/12/09 16:44
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/09 16:44
Fri Dec 09 16:44:15 CST 2022 org.apache.commons.math3.special.Erf,165
Failed time : 22/12/09 16:48
=================================================
Project : math_1	start : 22/12/09 16:48
Current failed test : org.apache.commons.math3.distribution.LevyDistributionTest::testInverseCumulativeProbabilities | 22/12/09 16:48
Fri Dec 09 16:48:42 CST 2022 org.apache.commons.math3.special.Erf,165
Failed time : 22/12/09 16:53
=================================================
Project : math_1	start : 22/12/09 16:53
Current failed test : org.apache.commons.math3.linear.SchurTransformerTest::testRandomData | 22/12/09 16:53
Fri Dec 09 16:53:10 CST 2022 org.apache.commons.math3.linear.SchurTransformer,384
Failed time : 22/12/09 16:55
=================================================
Project : math_1	start : 22/12/09 16:55
Current failed test : org.apache.commons.math3.linear.SchurTransformerTest::testRandomData | 22/12/09 16:55
Fri Dec 09 16:55:09 CST 2022 org.apache.commons.math3.linear.SchurTransformer,384
Failed time : 22/12/09 16:57
=================================================
Project : math_1	start : 22/12/09 16:57
Current failed test : org.apache.commons.math3.util.FastMathTest::testAsinAccuracy | 22/12/09 16:57
Fri Dec 09 16:57:10 CST 2022 org.apache.commons.math3.util.FastMath,2764
Failed time : 22/12/09 17:35
=================================================
Project : math_1	start : 22/12/09 17:35
Current failed test : org.apache.commons.math3.util.FastMathTest::testAsinAccuracy | 22/12/09 17:35
Fri Dec 09 17:35:52 CST 2022 org.apache.commons.math3.util.FastMath,2764
Failed time : 22/12/09 18:14
=================================================
Project : math_1	start : 22/12/09 18:14
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/09 18:14
Fri Dec 09 18:14:21 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,793
Failed time : 22/12/09 18:28
=================================================
Project : math_1	start : 22/12/09 18:28
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/09 18:28
Fri Dec 09 18:28:21 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,793
Failed time : 22/12/09 18:42
=================================================
Project : math_1	start : 22/12/09 18:42
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testNeta | 22/12/09 18:42
Fri Dec 09 18:42:20 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/12/09 18:42
=================================================
Project : math_1	start : 22/12/09 18:42
Current failed test : org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest::testNeta | 22/12/09 18:43
Fri Dec 09 18:43:05 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/12/09 18:43
=================================================
Project : math_1	start : 22/12/09 18:43
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/12/09 18:43
Fri Dec 09 18:43:52 CST 2022 org.apache.commons.math3.util.FastMath,2817
Failed time : 22/12/09 18:49
=================================================
Project : math_1	start : 22/12/09 18:49
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/12/09 18:49
Fri Dec 09 18:49:56 CST 2022 org.apache.commons.math3.util.FastMath,2817
Failed time : 22/12/09 18:55
=================================================
Project : math_1	start : 22/12/09 18:55
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/12/09 18:55
Fri Dec 09 18:56:02 CST 2022 org.apache.commons.math3.util.FastMath,2849
Failed time : 22/12/09 19:02
=================================================
Project : math_1	start : 22/12/09 19:02
Current failed test : org.apache.commons.math3.util.FastMathTest::testAcosAccuracy | 22/12/09 19:02
Fri Dec 09 19:02:57 CST 2022 org.apache.commons.math3.util.FastMath,2849
Failed time : 22/12/09 19:09
=================================================
Project : math_1	start : 22/12/09 19:09
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/12/09 19:09
Fri Dec 09 19:09:52 CST 2022 org.apache.commons.math3.util.FastMath,675
Failed time : 22/12/09 19:16
=================================================
Project : math_1	start : 22/12/09 19:16
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/12/09 19:16
Fri Dec 09 19:16:44 CST 2022 org.apache.commons.math3.util.FastMath,675
Failed time : 22/12/09 19:23
=================================================
Project : math_1	start : 22/12/09 19:23
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/12/09 19:23
Fri Dec 09 19:23:36 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,268
Failed time : 22/12/09 19:38
=================================================
Project : math_1	start : 22/12/09 19:38
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testHdiagConstant | 22/12/09 19:38
Fri Dec 09 19:38:55 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,268
Failed time : 22/12/09 19:54
=================================================
Project : math_1	start : 22/12/09 19:54
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testVectorOnePair | 22/12/09 19:54
Fri Dec 09 19:54:14 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,448

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<+0.1)&&(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:54
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:55
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:56
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5013541523645468 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>0,0]
 final FieldVector3D<T> v1=applyTo(vector(0,0,1));
 final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}
return buildArray(v1.getY().negate().atan2(v1.getZ()),v2.getZ().asin(),v2.getY().negate().atan2(v2.getX()));

Time : 22/12/09 19:56
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<+0.1)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:56
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:56
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:57
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:58
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 19:59
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:00
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:01
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:02
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:04
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:06
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:08
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:10
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:13
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:15
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:16
----------------------------------------
Success time : 22/12/09 20:17
=================================================
Project : math_1	start : 22/12/09 20:17
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest::testVectorOnePair | 22/12/09 20:17
Fri Dec 09 20:17:56 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.FieldRotation,448

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<+0.1)&&(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:19
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.5013541523645468 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>0,0]
 final FieldVector3D<T> v1=applyTo(vector(0,0,1));
 final FieldVector3D<T> v2=applyInverseTo(vector(1,0,0));
if((v2.getZ().getReal()<-1.0)||(v2.getZ().getReal()>1.0)){
throw new CardanEulerSingularityException(true);
}
return buildArray(v1.getY().negate().atan2(v1.getZ()),v2.getZ().asin(),v2.getY().negate().atan2(v2.getX()));

Time : 22/12/09 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<+0.1)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java=>448,452]
if((q0.getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:21
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:27
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:30
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:32
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:34
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(1,0,0)).getX().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(1,0,0)).getX().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:35
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,1,0)).getY().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:37
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,1,0)).getY().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>0.1)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:39
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((applyInverseTo(vector(0,0,1)).getZ().getReal()<-1.0)||(q0.getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:40
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((q0.getReal()<-1.0)||(applyInverseTo(vector(0,0,1)).getZ().getReal()>1.0)){
return q1.multiply(q1).add(q2.multiply(q2)).add(q3.multiply(q3)).sqrt().asin().multiply(2);
}else if(q0.getReal()<0){
return q0.negate().acos().multiply(2);
}

Time : 22/12/09 20:40
----------------------------------------
Success time : 22/12/09 20:41
=================================================
Project : math_1	start : 22/12/09 20:41
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/12/09 20:41
Fri Dec 09 20:41:44 CST 2022 org.apache.commons.math3.util.FastMath,3834
Failed time : 22/12/09 20:44
=================================================
Project : math_1	start : 22/12/09 20:44
Current failed test : org.apache.commons.math3.analysis.FunctionUtilsTest::testAddDifferentiable | 22/12/09 20:44
Fri Dec 09 20:44:36 CST 2022 org.apache.commons.math3.util.FastMath,3834
Failed time : 22/12/09 20:47
=================================================
Project : math_1	start : 22/12/09 20:47
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testPow | 22/12/09 20:47
Fri Dec 09 20:47:29 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/12/09 20:48
=================================================
Project : math_1	start : 22/12/09 20:48
Current failed test : org.apache.commons.math3.dfp.DfpMathTest::testPow | 22/12/09 20:48
Fri Dec 09 20:48:41 CST 2022 org.apache.commons.math3.dfp.Dfp,1160
Failed time : 22/12/09 20:49
=================================================
Project : math_1	start : 22/12/09 20:49
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 20:49
Fri Dec 09 20:49:55 CST 2022 Fri Dec 09 20:49:55 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,998=>Find no block
Failed time : 22/12/09 20:49
=================================================
Project : math_1	start : 22/12/09 20:49
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest::testVectorialProducts | 22/12/09 20:49
Fri Dec 09 20:50:01 CST 2022 Fri Dec 09 20:50:01 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D,998=>Find no block
Failed time : 22/12/09 20:50
=================================================
Project : math_1	start : 22/12/09 20:50
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testGradientComponent0Component4 | 22/12/09 20:50
Fri Dec 09 20:50:09 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,126
Failed time : 22/12/09 20:51
=================================================
Project : math_1	start : 22/12/09 20:51
Current failed test : org.apache.commons.math3.analysis.function.LogisticTest::testGradientComponent0Component4 | 22/12/09 20:51
Fri Dec 09 20:51:09 CST 2022 org.apache.commons.math3.analysis.function.Sigmoid,126
Failed time : 22/12/09 20:52
=================================================
Project : math_1	start : 22/12/09 20:52
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/12/09 20:52
Fri Dec 09 20:52:10 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,412
Failed time : 22/12/09 20:52
=================================================
Project : math_1	start : 22/12/09 20:52
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/12/09 20:52
Fri Dec 09 20:52:51 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,412
Failed time : 22/12/09 20:53
=================================================
Project : math_1	start : 22/12/09 20:53
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/09 20:53
Fri Dec 09 20:53:32 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,239
Failed time : 22/12/09 21:08
=================================================
Project : math_1	start : 22/12/09 21:08
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalDistributionTest::testDensities | 22/12/09 21:08
Fri Dec 09 21:08:21 CST 2022 org.apache.commons.math3.distribution.MultivariateNormalDistribution,239
Failed time : 22/12/09 21:23
=================================================
Project : math_1	start : 22/12/09 21:23
Current failed test : org.apache.commons.math3.util.FastMathTest::testPowAccuracy | 22/12/09 21:23
Fri Dec 09 21:23:09 CST 2022 org.apache.commons.math3.util.FastMath,1345
Failed time : 22/12/09 21:27
=================================================
Project : math_1	start : 22/12/09 21:27
Current failed test : org.apache.commons.math3.util.FastMathTest::testPowAccuracy | 22/12/09 21:27
Fri Dec 09 21:27:45 CST 2022 org.apache.commons.math3.util.FastMath,1345
Failed time : 22/12/09 21:32
=================================================
Project : math_1	start : 22/12/09 21:32
Current failed test : org.apache.commons.math3.linear.BiDiagonalTransformerTest::testSingularMatrix | 22/12/09 21:32
Fri Dec 09 21:32:22 CST 2022 org.apache.commons.math3.linear.BiDiagonalTransformer,198
Failed time : 22/12/09 21:38
=================================================
Project : math_1	start : 22/12/09 21:38
Current failed test : org.apache.commons.math3.linear.BiDiagonalTransformerTest::testSingularMatrix | 22/12/09 21:38
Fri Dec 09 21:38:19 CST 2022 org.apache.commons.math3.linear.BiDiagonalTransformer,198
Failed time : 22/12/09 21:44
=================================================
Project : math_1	start : 22/12/09 21:44
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/12/09 21:44
Fri Dec 09 21:44:16 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/12/09 21:47
=================================================
Project : math_1	start : 22/12/09 21:47
Current failed test : org.apache.commons.math3.util.ArithmeticUtilsTest::testGcdConsistency | 22/12/09 21:47
Fri Dec 09 21:47:40 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,448
Failed time : 22/12/09 21:50
=================================================
Project : math_1	start : 22/12/09 21:50
Current failed test : org.apache.commons.math3.fraction.FractionTest::testGetReducedFraction | 22/12/09 21:50
Fri Dec 09 21:51:04 CST 2022 org.apache.commons.math3.fraction.Fraction,638

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(numerator<0){
if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,numerator,denominator);
}
numerator=-numerator;
denominator=~denominator;
}

Time : 22/12/09 21:51
----------------------------------------
Failed time : 22/12/09 21:52
=================================================
Project : math_1	start : 22/12/09 21:52
Current failed test : org.apache.commons.math3.fraction.FractionTest::testGetReducedFraction | 22/12/09 21:52
Fri Dec 09 21:52:09 CST 2022 org.apache.commons.math3.fraction.Fraction,638

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(numerator<0){
if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
throw new MathArithmeticException(LocalizedFormats.OVERFLOW_IN_FRACTION,numerator,denominator);
}
numerator=-numerator;
denominator=~denominator;
}

Time : 22/12/09 21:52
----------------------------------------
Failed time : 22/12/09 21:53
=================================================
Project : math_1	start : 22/12/09 21:53
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/09 21:53
Fri Dec 09 21:53:14 CST 2022 org.apache.commons.math3.util.FastMath,629
Failed time : 22/12/09 21:58
=================================================
Project : math_1	start : 22/12/09 21:58
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanhAtanh | 22/12/09 21:58
Fri Dec 09 21:58:54 CST 2022 org.apache.commons.math3.util.FastMath,629
Failed time : 22/12/09 22:04
=================================================
Project : math_1	start : 22/12/09 22:04
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/12/09 22:04
Fri Dec 09 22:04:35 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/12/09 22:05
=================================================
Project : math_1	start : 22/12/09 22:05
Current failed test : org.apache.commons.math3.util.FastMathTest::testTanhAccuracy | 22/12/09 22:05
Fri Dec 09 22:05:27 CST 2022 org.apache.commons.math3.util.FastMath,623
Failed time : 22/12/09 22:06
=================================================
Project : math_1	start : 22/12/09 22:06
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/09 22:06
Fri Dec 09 22:06:20 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,615
Failed time : 22/12/09 22:06
=================================================
Project : math_1	start : 22/12/09 22:06
Current failed test : org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest::testPCorr | 22/12/09 22:06
Fri Dec 09 22:06:30 CST 2022 org.apache.commons.math3.stat.regression.MillerUpdatingRegression,615
Failed time : 22/12/09 22:06
=================================================
Project : math_1	start : 22/12/09 22:06
Current failed test : org.apache.commons.math3.special.ErfTest::testErfcInv | 22/12/09 22:06
Fri Dec 09 22:06:42 CST 2022 org.apache.commons.math3.special.Erf,213
Failed time : 22/12/09 22:11
=================================================
Project : math_1	start : 22/12/09 22:11
Current failed test : org.apache.commons.math3.special.ErfTest::testErfcInv | 22/12/09 22:11
Fri Dec 09 22:11:57 CST 2022 org.apache.commons.math3.special.Erf,213
Failed time : 22/12/09 22:17
=================================================
Project : math_1	start : 22/12/09 22:17
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest::testHalfBounded | 22/12/09 22:17
Fri Dec 09 22:17:13 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter,257

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:17
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:17
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/12/09 22:17
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:17
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.abs(+y);

Time : 22/12/09 22:18
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4358192003574064 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return FastMath.abs(x)+FastMath.abs(y);

Time : 22/12/09 22:18
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/12/09 22:18
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.abs(+y);

Time : 22/12/09 22:18
----------------------------------------
Success time : 22/12/09 22:19
=================================================
Project : math_1	start : 22/12/09 22:19
Current failed test : org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest::testHalfBounded | 22/12/09 22:19
Fri Dec 09 22:19:27 CST 2022 org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter,257

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 3.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/12/09 22:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(-y);

Time : 22/12/09 22:20
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
return upper-FastMath.abs(+y);

Time : 22/12/09 22:20
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.4358192003574064 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>0,0]
return FastMath.abs(x)+FastMath.abs(y);

Time : 22/12/09 22:21
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.exp(+y);

Time : 22/12/09 22:21
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter.java=>257,257]
return upper-FastMath.abs(+y);

Time : 22/12/09 22:21
----------------------------------------
Success time : 22/12/09 22:21
=================================================
Project : math_1	start : 22/12/09 22:21
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/12/09 22:21
Fri Dec 09 22:21:40 CST 2022 org.apache.commons.math3.linear.HessenbergTransformer,198
Failed time : 22/12/09 22:27
=================================================
Project : math_1	start : 22/12/09 22:27
Current failed test : org.apache.commons.math3.linear.EigenDecompositionTest::testUnsymmetric | 22/12/09 22:27
Fri Dec 09 22:27:33 CST 2022 org.apache.commons.math3.linear.HessenbergTransformer,198
Failed time : 22/12/09 22:33
=================================================
Project : math_1	start : 22/12/09 22:33
Current failed test : org.apache.commons.math3.complex.ComplexTest::testLogInf | 22/12/09 22:33
Fri Dec 09 22:33:26 CST 2022 org.apache.commons.math3.util.FastMath,2625
Failed time : 22/12/09 22:34
=================================================
Project : math_1	start : 22/12/09 22:34
Current failed test : org.apache.commons.math3.complex.ComplexTest::testLogInf | 22/12/09 22:34
Fri Dec 09 22:34:20 CST 2022 org.apache.commons.math3.util.FastMath,2625
Failed time : 22/12/09 22:35
=================================================
Project : math_1	start : 22/12/09 22:35
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/12/09 22:35
Fri Dec 09 22:35:14 CST 2022 Fri Dec 09 22:35:14 CST 2022 : org.apache.commons.math3.fraction.BigFraction,981=>Find no block
Failed time : 22/12/09 22:35
=================================================
Project : math_1	start : 22/12/09 22:35
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/12/09 22:35
Fri Dec 09 22:35:21 CST 2022 Fri Dec 09 22:35:21 CST 2022 : org.apache.commons.math3.fraction.BigFraction,981=>Find no block
Failed time : 22/12/09 22:35
=================================================
Project : math_1	start : 22/12/09 22:35
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 22:35
Fri Dec 09 22:35:28 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Plane,238
Failed time : 22/12/09 22:35
=================================================
Project : math_1	start : 22/12/09 22:35
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 22:35
Fri Dec 09 22:35:35 CST 2022 org.apache.commons.math3.geometry.euclidean.threed.Plane,238
Failed time : 22/12/09 22:35
=================================================
Project : math_1	start : 22/12/09 22:35
Current failed test : org.apache.commons.math3.analysis.solvers.BrentSolverTest::testMath832 | 22/12/09 22:35
Fri Dec 09 22:35:44 CST 2022 org.apache.commons.math3.analysis.solvers.BrentSolver,197
Failed time : 22/12/09 22:36
=================================================
Project : math_1	start : 22/12/09 22:36
Current failed test : org.apache.commons.math3.analysis.solvers.BrentSolverTest::testMath832 | 22/12/09 22:36
Fri Dec 09 22:36:44 CST 2022 org.apache.commons.math3.analysis.solvers.BrentSolver,197
Failed time : 22/12/09 22:37
=================================================
Project : math_1	start : 22/12/09 22:37
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/12/09 22:37
Fri Dec 09 22:37:44 CST 2022 org.apache.commons.math3.fraction.BigFraction,980
Failed time : 22/12/09 22:37
=================================================
Project : math_1	start : 22/12/09 22:37
Current failed test : org.apache.commons.math3.fraction.BigFractionTest::testPow | 22/12/09 22:37
Fri Dec 09 22:37:57 CST 2022 org.apache.commons.math3.fraction.BigFraction,980
Failed time : 22/12/09 22:38
=================================================
Project : math_1	start : 22/12/09 22:38
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/09 22:38
Fri Dec 09 22:38:11 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,439

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0654441396047276 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
if(FastMath.abs(actRed)<=TWO_EPS&&preRed<=TWO_EPS&&ratio<=2.0){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,costRelativeTolerance);
}else if(delta<=TWO_EPS*xNorm){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,parRelativeTolerance);
}else if(maxCosine<=TWO_EPS){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,orthoTolerance);
}

Time : 22/12/09 22:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*currentCost<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:39
----------------------------------------
Success time : 22/12/09 22:39
=================================================
Project : math_1	start : 22/12/09 22:39
Current failed test : org.apache.commons.math3.fitting.GaussianFitterTest::testMath519 | 22/12/09 22:39
Fri Dec 09 22:39:46 CST 2022 org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer,439

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:40
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.0654441396047276 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>0,0]
if(FastMath.abs(actRed)<=TWO_EPS&&preRed<=TWO_EPS&&ratio<=2.0){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_COST_RELATIVE_TOLERANCE,costRelativeTolerance);
}else if(delta<=TWO_EPS*xNorm){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_PARAMETERS_RELATIVE_TOLERANCE,parRelativeTolerance);
}else if(maxCosine<=TWO_EPS){
throw new ConvergenceException(LocalizedFormats.TOO_SMALL_ORTHOGONALITY_TOLERANCE,orthoTolerance);
}

Time : 22/12/09 22:41
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*currentCost<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:41
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java=>436,443]
currentCost=computeCost(currentResiduals);
double actRed=+1.0;
if(0.1*TWO_EPS<previousCost){
double r=currentCost/previousCost;
actRed=1.0-r*r;
}

Time : 22/12/09 22:41
----------------------------------------
Success time : 22/12/09 22:41
=================================================
Project : math_1	start : 22/12/09 22:41
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testAngles | 22/12/09 22:41
Fri Dec 09 22:41:21 CST 2022 Fri Dec 09 22:41:21 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,660=>Find no block
Failed time : 22/12/09 22:41
=================================================
Project : math_1	start : 22/12/09 22:41
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.RotationTest::testAngles | 22/12/09 22:41
Fri Dec 09 22:41:28 CST 2022 Fri Dec 09 22:41:28 CST 2022 : org.apache.commons.math3.geometry.euclidean.threed.Rotation,660=>Find no block
Failed time : 22/12/09 22:41
=================================================
Project : math_1	start : 22/12/09 22:41
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest | 22/12/09 22:41
Fri Dec 09 22:41:35 CST 2022 org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory,156
=================================================
Project : math_1	start : 22/12/09 22:41
Current failed test : org.apache.commons.math3.analysis.integration.gauss.HermiteParametricTest | 22/12/09 22:41
Fri Dec 09 22:41:48 CST 2022 org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory,156
=================================================
Project : math_1	start : 22/12/09 22:41
Current failed test : org.apache.commons.math3.complex.ComplexTest::testTan | 22/12/09 22:41
Fri Dec 09 22:42:03 CST 2022 org.apache.commons.math3.complex.Complex,1022

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:42
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>0,0]
if(real<-20.0){
return createComplex(-1.0,0.0);
}

Time : 22/12/09 22:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<+20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:42
----------------------------------------
Success time : 22/12/09 22:43
=================================================
Project : math_1	start : 22/12/09 22:43
Current failed test : org.apache.commons.math3.complex.ComplexTest::testTan | 22/12/09 22:43
Fri Dec 09 22:43:10 CST 2022 org.apache.commons.math3.complex.Complex,1022

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>0,0]
if(real<-20.0){
return createComplex(-1.0,0.0);
}

Time : 22/12/09 22:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<+20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/complex/Complex.java=>1022,1024]
if(imaginary<-20.0){
return createComplex(0.0,-1.0);
}

Time : 22/12/09 22:43
----------------------------------------
Success time : 22/12/09 22:44
=================================================
Project : math_1	start : 22/12/09 22:44
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh | 22/12/09 22:44
Fri Dec 09 22:44:19 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1624

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:44
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:44
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n^1)==0){
v*=x;
}

Time : 22/12/09 22:44
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:44
----------------------------------------
Success time : 22/12/09 22:46
=================================================
Project : math_1	start : 22/12/09 22:46
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCoshAcosh | 22/12/09 22:46
Fri Dec 09 22:46:26 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1624

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:46
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n^1)==0){
v*=x;
}

Time : 22/12/09 22:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1624,1626]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/09 22:47
----------------------------------------
Success time : 22/12/09 22:48
=================================================
Project : math_1	start : 22/12/09 22:48
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testContainsKey | 22/12/09 22:48
Fri Dec 09 22:48:34 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,377
Failed time : 22/12/09 22:49
=================================================
Project : math_1	start : 22/12/09 22:49
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testContainsKey | 22/12/09 22:49
Fri Dec 09 22:49:45 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,377
Failed time : 22/12/09 22:50
=================================================
Project : math_1	start : 22/12/09 22:50
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[50] | 22/12/09 22:50
Fri Dec 09 22:50:56 CST 2022 org.apache.commons.math3.util.FastMath,3326
Failed time : 22/12/09 22:51
=================================================
Project : math_1	start : 22/12/09 22:51
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[50] | 22/12/09 22:51
Fri Dec 09 22:51:21 CST 2022 org.apache.commons.math3.util.FastMath,3326
Failed time : 22/12/09 22:51
=================================================
Project : math_1	start : 22/12/09 22:51
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 22:51
Fri Dec 09 22:51:46 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,425
Failed time : 22/12/09 22:53
=================================================
Project : math_1	start : 22/12/09 22:53
Current failed test : org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest::testBox | 22/12/09 22:53
Fri Dec 09 22:53:10 CST 2022 org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple,425
Failed time : 22/12/09 22:54
=================================================
Project : math_1	start : 22/12/09 22:54
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest::testSampling | 22/12/09 22:54
Fri Dec 09 22:54:34 CST 2022 org.apache.commons.math3.random.Well19937c,98
Failed time : 22/12/09 22:56
=================================================
Project : math_1	start : 22/12/09 22:56
Current failed test : org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest::testSampling | 22/12/09 22:56
Fri Dec 09 22:56:24 CST 2022 org.apache.commons.math3.random.Well19937c,98
Failed time : 22/12/09 22:58
=================================================
Project : math_1	start : 22/12/09 22:58
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/12/09 22:58
Fri Dec 09 22:58:16 CST 2022 Fri Dec 09 22:58:16 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/12/09 22:58
=================================================
Project : math_1	start : 22/12/09 22:58
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testCbrtPow3 | 22/12/09 22:58
Fri Dec 09 22:58:22 CST 2022 Fri Dec 09 22:58:22 CST 2022 : org.apache.commons.math3.util.FastMath,2887=>Find no block
Failed time : 22/12/09 22:58
=================================================
Project : math_1	start : 22/12/09 22:58
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testInterpolation2 | 22/12/09 22:58
Fri Dec 09 22:58:29 CST 2022 org.apache.commons.math3.random.Well19937c,109
Failed time : 22/12/09 22:58
=================================================
Project : math_1	start : 22/12/09 22:58
Current failed test : org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest::testInterpolation2 | 22/12/09 22:58
Fri Dec 09 22:58:51 CST 2022 org.apache.commons.math3.random.Well19937c,109
Failed time : 22/12/09 22:59
=================================================
Project : math_1	start : 22/12/09 22:59
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 22:59
Fri Dec 09 22:59:13 CST 2022 org.apache.commons.math3.random.Well44497b,99

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 22:59
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7446679513364147 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>0,0]
 final int z0=v[indexRm1];
 final int z1=v0^(vM1^(vM1>>>8));
 final int z2=(vM2^(vM2<<19))^(vM3^(vM3<<14));
 final int z3=z1^z2;
 final int z4=(z0^(z0<<11))^(z1^(z1<<7));

Time : 22/12/09 22:59
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>30));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 22:59
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 22:59
----------------------------------------
Success time : 22/12/09 23:00
=================================================
Project : math_1	start : 22/12/09 23:00
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/09 23:00
Fri Dec 09 23:00:12 CST 2022 org.apache.commons.math3.random.Well44497b,99

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 23:00
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.7446679513364147 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>0,0]
 final int z0=v[indexRm1];
 final int z1=v0^(vM1^(vM1>>>8));
 final int z2=(vM2^(vM2<<19))^(vM3^(vM3<<14));
 final int z3=z1^z2;
 final int z4=(z0^(z0<<11))^(z1^(z1<<7));

Time : 22/12/09 23:00
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>30));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 23:00
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/Well44497b.java=>98,100]
 final int z1=(v0^(v0<<24))^(vM1^(vM1>>>8));
 final int z2=(vM2|(vM2<<10))^(vM3<<26);
 final int z3=z1^z2;

Time : 22/12/09 23:00
----------------------------------------
Success time : 22/12/09 23:01
=================================================
Project : math_1	start : 22/12/09 23:01
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/12/09 23:01
Fri Dec 09 23:01:13 CST 2022 org.apache.commons.math3.random.MersenneTwister,239

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:02
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/09 23:03
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:03
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:03
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:04
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/09 23:05
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:05
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:05
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3487739494041857 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/12/09 23:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3249520736601597 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
if(test(values,begin,length)){
int k=begin+length;
for(int i=begin;i<k;i++){
increment(values[i]);
}
}

Time : 22/12/09 23:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=mti;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:11
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2649138936180082 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(ks=p-1;ks>=k;ks--){
if(ks==k){
break;
}
 final double t=(ks!=p?FastMath.abs(e[ks]):0)+(ks!=k+1?FastMath.abs(e[ks-1]):0);
if(FastMath.abs(singularValues[ks])<=TINY+EPS*t){
singularValues[ks]=0;
break;
}
}

Time : 22/12/09 23:11
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:11
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:11
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:13
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2121852891348002 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=i+1;k<nvars;k++){
xk=x[k];
x[k]=smartAdd(xk,-xi*r[nextr]);
if(di!=0.0){
r[nextr]=smartAdd(di*r[nextr],(_w*xi)*xk)/dpi;
}else {
r[nextr]=xk/xi;
}
++nextr;
}

Time : 22/12/09 23:14
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:14
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:14
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:15
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/12/09 23:16
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:16
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;mti<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:17
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/12/09 23:18
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:18
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:18
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/12/09 23:20
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:20
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:20
----------------------------------------
Success time : 22/12/09 23:20
=================================================
Project : math_1	start : 22/12/09 23:20
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/12/09 23:20
Fri Dec 09 23:21:01 CST 2022 org.apache.commons.math3.random.MersenneTwister,239

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:22
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/09 23:23
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:23
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:23
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:24
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<=N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3825994719708665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/09 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<=N-M;++k){
if(serialVersionUID>>(k-1)==0){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:26
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:28
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3487739494041857 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/12/09 23:29
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:29
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:29
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:31
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2649138936180082 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(ks=p-1;ks>=k;ks--){
if(ks==k){
break;
}
 final double t=(ks!=p?FastMath.abs(e[ks]):0)+(ks!=k+1?FastMath.abs(e[ks-1]):0);
if(FastMath.abs(singularValues[ks])<=TINY+EPS*t){
singularValues[ks]=0;
break;
}
}

Time : 22/12/09 23:31
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:31
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
if(mti==k){
break;
}
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:31
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=mti;k<N-M;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:33
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2324068636341994 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/12/09 23:33
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:33
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=mti;k<N-M;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:33
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:35
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2121852891348002 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=i+1;k<nvars;k++){
xk=x[k];
x[k]=smartAdd(xk,-xi*r[nextr]);
if(di!=0.0){
r[nextr]=smartAdd(di*r[nextr],(_w*xi)*xk)/dpi;
}else {
r[nextr]=xk/xi;
}
++nextr;
}

Time : 22/12/09 23:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
++mti;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:36
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:37
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/12/09 23:38
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:38
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
mt[0]=(int)mtNext;
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:38
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:39
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.1894239538454108 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
long longMT=seed;
mt[0]=(int)longMT;
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}
clear();

Time : 22/12/09 23:40
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:40
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>235,240]
clear();
for(int k=0;k<N-M;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+M]^(y>>>1);
}

Time : 22/12/09 23:40
----------------------------------------
Success time : 22/12/09 23:40
=================================================
Project : math_1	start : 22/12/09 23:41
Current failed test : org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial | 22/12/09 23:41
Fri Dec 09 23:41:06 CST 2022 org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator,386

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:41
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.105351295197314 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>0,0]
if(array.length!=nRows){
throw new MatrixDimensionMismatchException(array.length,1,nRows,1);
}
 final int jBlock=column/BLOCK_SIZE;
 final int jColumn=column-jBlock*BLOCK_SIZE;
 final int jWidth=blockWidth(jBlock);
int outIndex=0;

Time : 22/12/09 23:42
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)==0){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:42
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:42
----------------------------------------
Success time : 22/12/09 23:42
=================================================
Project : math_1	start : 22/12/09 23:42
Current failed test : org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest::polynomial | 22/12/09 23:42
Fri Dec 09 23:42:31 CST 2022 org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator,386

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:43
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.105351295197314 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>0,0]
if(array.length!=nRows){
throw new MatrixDimensionMismatchException(array.length,1,nRows,1);
}
 final int jBlock=column/BLOCK_SIZE;
 final int jColumn=column-jBlock*BLOCK_SIZE;
 final int jWidth=blockWidth(jBlock);
int outIndex=0;

Time : 22/12/09 23:43
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)==0){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:43
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java=>386,390]
if((row|1)!=row){
after[column]-=value;
}else {
after[column]+=value;
}

Time : 22/12/09 23:43
----------------------------------------
Success time : 22/12/09 23:43
=================================================
Project : math_1	start : 22/12/09 23:43
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[1] | 22/12/09 23:43
Fri Dec 09 23:43:55 CST 2022 org.apache.commons.math3.util.FastMath,3015
Failed time : 22/12/09 23:44
=================================================
Project : math_1	start : 22/12/09 23:44
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[1] | 22/12/09 23:44
Fri Dec 09 23:44:15 CST 2022 org.apache.commons.math3.util.FastMath,3015
Failed time : 22/12/09 23:44
=================================================
Project : math_1	start : 22/12/09 23:44
Current failed test : org.apache.commons.math3.fraction.BigFractionFormatTest::testLongFormat | 22/12/09 23:44
Fri Dec 09 23:44:35 CST 2022 org.apache.commons.math3.fraction.BigFraction,193
Failed time : 22/12/09 23:45
=================================================
Project : math_1	start : 22/12/09 23:45
Current failed test : org.apache.commons.math3.fraction.BigFractionFormatTest::testLongFormat | 22/12/09 23:45
Fri Dec 09 23:45:50 CST 2022 org.apache.commons.math3.fraction.BigFraction,193
Failed time : 22/12/09 23:46
=================================================
Project : math_1	start : 22/12/09 23:46
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testReciprocal | 22/12/09 23:47
Fri Dec 09 23:47:06 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,650

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:47
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6666666666666665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:47
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e^1)!=0){
result*=k2p;
}

Time : 22/12/09 23:47
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:47
----------------------------------------
Success time : 22/12/09 23:48
=================================================
Project : math_1	start : 22/12/09 23:48
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testReciprocal | 22/12/09 23:48
Fri Dec 09 23:48:12 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,650

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:48
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.6666666666666665 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>0,0]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:48
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e^1)!=0){
result*=k2p;
}

Time : 22/12/09 23:48
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java=>650,652]
if((e&0x1)!=0){
result*=k2p;
}

Time : 22/12/09 23:48
----------------------------------------
Success time : 22/12/09 23:49
=================================================
Project : math_1	start : 22/12/09 23:49
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 23:49
Fri Dec 09 23:49:19 CST 2022 org.apache.commons.math3.dfp.Dfp,269
Failed time : 22/12/09 23:52
=================================================
Project : math_1	start : 22/12/09 23:52
Current failed test : org.apache.commons.math3.analysis.function.SincTest::testDerivativeShortcut | 22/12/09 23:52
Fri Dec 09 23:52:41 CST 2022 org.apache.commons.math3.dfp.Dfp,269
Failed time : 22/12/09 23:55
=================================================
Project : math_1	start : 22/12/09 23:55
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 23:55
Fri Dec 09 23:56:04 CST 2022 org.apache.commons.math3.util.FastMath,3161
Failed time : 22/12/09 23:56
=================================================
Project : math_1	start : 22/12/09 23:56
Current failed test : org.apache.commons.math3.util.FastMathTest::testFloatScalbSpecialCases | 22/12/09 23:56
Fri Dec 09 23:56:41 CST 2022 org.apache.commons.math3.util.FastMath,3161
Failed time : 22/12/09 23:57
=================================================
Project : math_1	start : 22/12/09 23:57
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 23:57
Fri Dec 09 23:57:19 CST 2022 org.apache.commons.math3.util.FastMath,3078
Failed time : 22/12/09 23:57
=================================================
Project : math_1	start : 22/12/09 23:57
Current failed test : org.apache.commons.math3.util.FastMathStrictComparisonTest::test1[46] | 22/12/09 23:57
Fri Dec 09 23:57:50 CST 2022 org.apache.commons.math3.util.FastMath,3078
Failed time : 22/12/09 23:58
=================================================
Project : math_1	start : 22/12/09 23:58
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testPutKeysWithCollision2 | 22/12/09 23:58
Fri Dec 09 23:58:22 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,365
Failed time : 22/12/09 23:59
=================================================
Project : math_1	start : 22/12/09 23:59
Current failed test : org.apache.commons.math3.util.OpenIntToFieldTest::testPutKeysWithCollision2 | 22/12/09 23:59
Fri Dec 09 23:59:33 CST 2022 org.apache.commons.math3.util.OpenIntToFieldHashMap,365
Failed time : 22/12/10 00:00
=================================================
Project : math_1	start : 22/12/10 00:00
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/10 00:00
Sat Dec 10 00:00:46 CST 2022 org.apache.commons.math3.random.Well44497b,98
Failed time : 22/12/10 00:01
=================================================
Project : math_1	start : 22/12/10 00:01
Current failed test : org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizerTest::testCircleFitting2 | 22/12/10 00:01
Sat Dec 10 00:01:23 CST 2022 org.apache.commons.math3.random.Well44497b,98
Failed time : 22/12/10 00:01
=================================================
Project : math_1	start : 22/12/10 00:01
Current failed test : org.apache.commons.math3.util.OpenIntToDoubleHashMapTest::testContainsKey | 22/12/10 00:01
Sat Dec 10 00:02:01 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,220
Failed time : 22/12/10 00:03
=================================================
Project : math_1	start : 22/12/10 00:03
Current failed test : org.apache.commons.math3.util.OpenIntToDoubleHashMapTest::testContainsKey | 22/12/10 00:03
Sat Dec 10 00:03:27 CST 2022 org.apache.commons.math3.util.OpenIntToDoubleHashMap,220
Failed time : 22/12/10 00:04
=================================================
Project : math_1	start : 22/12/10 00:04
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/12/10 00:04
Sat Dec 10 00:04:54 CST 2022 org.apache.commons.math3.random.MersenneTwister,245

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:06
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3810926681167348 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/10 00:07
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:07
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:07
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:09
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3741530023138235 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=N-1;k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1566083941l))-i;
mt[i]=(int)(l&0xffffffffL);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}

Time : 22/12/10 00:09
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:09
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:09
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:12
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.340663923704962 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/12/10 00:12
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:12
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:12
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:16
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2322523977903306 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/12/10 00:16
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:16
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:16
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;mti<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:19
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2143545635866453 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(mti=1;mti<N;++mti){
longMT=(1812433253l*(longMT^(longMT>>30))+mti)&0xffffffffL;
mt[mti]=(int)longMT;
}

Time : 22/12/10 00:19
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:19
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;mti<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:19
----------------------------------------
Success time : 22/12/10 00:20
=================================================
Project : math_1	start : 22/12/10 00:20
Current failed test : org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest::testLinearFunction2D | 22/12/10 00:20
Sat Dec 10 00:20:36 CST 2022 org.apache.commons.math3.random.MersenneTwister,245

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:22
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3810926681167348 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=1;k<=BITS;k++){
 final long shift=grayCode>>(k-1);
if(shift==0){
break;
}
 final long ik=shift&1;
result^=ik*direction[j][k];
}

Time : 22/12/10 00:22
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:22
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=k;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:22
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:24
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.3741530023138235 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=N-1;k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1566083941l))-i;
mt[i]=(int)(l&0xffffffffL);
i++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
}

Time : 22/12/10 00:25
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:25
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:25
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:28
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.340663923704962 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int k=FastMath.max(N,seed.length);k!=0;k--){
long l0=(mt[i]&0x7fffffffl)|((mt[i]<0)?0x80000000l:0x0l);
long l1=(mt[i-1]&0x7fffffffl)|((mt[i-1]<0)?0x80000000l:0x0l);
long l=(l0^((l1^(l1>>30))*1664525l))+seed[j];
mt[i]=(int)(l&0xffffffffl);
i++;
j++;
if(i>=N){
mt[0]=mt[N-1];
i=1;
}
if(j>=seed.length){
j=0;
}
}

Time : 22/12/10 00:28
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:28
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
k++;
mti++;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:28
----------------------------------------

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:32
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 1.2322523977903306 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>0,0]
for(int q=qStart;q<qEnd;++q){
double sum=0;
int r=rStart;
for(int l=lStart;l<lEnd;++l){
sum+=tBlock[l]*m.getEntry(r,q);
++r;
}
outBlock[k]+=sum;
++k;
}

Time : 22/12/10 00:32
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:32
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/random/MersenneTwister.java=>241,246]
for(int k=N-M;k<N-1;++k){
++k;
int mtCurr=mtNext;
mtNext=mt[k+1];
y=(mtCurr&0x80000000)|(mtNext&0x7fffffff);
mt[k]=mt[k+(M-N)]^(y>>>1);
}

Time : 22/12/10 00:32
----------------------------------------
Success time : 22/12/10 00:34
=================================================
Project : math_1	start : 22/12/10 00:34
Current failed test : org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep | 22/12/10 00:34
Sat Dec 10 00:34:43 CST 2022 org.apache.commons.math3.util.FastMath,3267
Failed time : 22/12/10 00:35
=================================================
Project : math_1	start : 22/12/10 00:35
Current failed test : org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest::testTooLargeFirstStep | 22/12/10 00:35
Sat Dec 10 00:35:19 CST 2022 org.apache.commons.math3.util.FastMath,3267
Failed time : 22/12/10 00:35
=================================================
Project : math_1	start : 22/12/10 00:35
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/12/10 00:35
Sat Dec 10 00:35:56 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,886
Failed time : 22/12/10 00:35
=================================================
Project : math_1	start : 22/12/10 00:35
Current failed test : org.apache.commons.math3.transform.FastCosineTransformerTest::testAdHocData[0] | 22/12/10 00:35
Sat Dec 10 00:36:04 CST 2022 org.apache.commons.math3.util.ArithmeticUtils,886
Failed time : 22/12/10 00:36
=================================================
Project : math_1	start : 22/12/10 00:36
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/10 00:36
Sat Dec 10 00:36:12 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1409

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:36
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:36
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n^1)==0){
v*=x;
}

Time : 22/12/10 00:36
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:36
----------------------------------------
Success time : 22/12/10 00:38
=================================================
Project : math_1	start : 22/12/10 00:38
Current failed test : org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest::testTanAtan | 22/12/10 00:38
Sat Dec 10 00:38:22 CST 2022 org.apache.commons.math3.analysis.differentiation.DSCompiler,1409

----------------------------------------
----------------------------------------
Pass Single Test : [=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:38
----------------------------------------

----------------------------------------
----------------------------------------
Similar code block : 2.0 : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>0,0]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:39
----------------------------------------

----------------------------------------
----------------------------------------
Original source code : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n^1)==0){
v*=x;
}

Time : 22/12/10 00:39
----------------------------------------

----------------------------------------
----------------------------------------
Find a patch : [/home/jun/research/dlapr/repo_simfix/math/math_1_buggy/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java=>1409,1411]
if((n&0x1)==0){
v*=x;
}

Time : 22/12/10 00:39
----------------------------------------
Success time : 22/12/10 00:40
