{
          "0": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "1": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!_hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "2": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(hasTextAsCharacters()){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "3": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!hasTextAsCharacters()){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "4": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!_hasSegments){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "5": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreleaseBuffers();\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "6": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nresetWithEmpty();\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "7": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nclearSegments();\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "8": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nensureNotShared();\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "9": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_currentSegment){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "10": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "11": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments._hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "12": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(hasTextAsCharacters()._hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "13": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!_hasSegments()){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "14": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments()){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "15": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(-_hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "16": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!_currentSegment){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "17": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_resultArray){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "18": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments++){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "19": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_resultString){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "20": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!_hasSegments._hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "21": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!hasTextAsCharacters()._hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "22": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_resultString._hasSegments){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "23": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && !hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "24": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_inputBuffer){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "25": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "26": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_inputStart){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "27": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn 0;        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "28": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn;\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "29": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments && !hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "30": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(hasTextAsCharacters()){\nreturn _resultArray;}        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "31": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_resultString.toCharArray()){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "32": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments || !hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "33": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments && hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "34": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!hasTextAsCharacters(_hasSegments)){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "35": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments || hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "36": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn _hasSegments;        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "37": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments){\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n}\n    }",
          "38": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments || !hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "39": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn _resultArray;        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "40": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments || hasTextAsCharacters())){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "41": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nbreak;\n        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "42": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(hasTextAsCharacters()){\nreturn 0;}        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "43": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn _inputBuffer;        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "44": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(!hasTextAsCharacters()){\nreturn 0;}        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "45": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif(_hasSegments--){        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "46": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_inputStart >= 0)){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "47": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments == null)){\nreturn 0;}        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "48": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && (_currentSegment != null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "49": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && (_currentSegment == null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "50": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn _currentSegment;        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "51": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && (_hasSegments == null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "52": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments && (_hasSegments != null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "53": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "54": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments || (_currentSegment == null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "55": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((_hasSegments && (_currentSegment != null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "56": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nif((!_hasSegments || (_currentSegment != null))){\n        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "57": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn contentsAsArray();        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }",
          "58": "    public char[] getTextBuffer()\n    {\n        // Are we just using shared input buffer?\n        if (_inputStart >= 0) return _inputBuffer;\n        if (_resultArray != null)  return _resultArray;\n        if (_resultString != null) {\n            return (_resultArray = _resultString.toCharArray());\n        }\n        // Nope; but does it fit in just one segment?\nreturn _resultArray = _resultString.toCharArray();        if (!_hasSegments)  return _currentSegment;        // Nope, need to have/create a non-segmented array and return it\n        return contentsAsArray();\n    }"
}