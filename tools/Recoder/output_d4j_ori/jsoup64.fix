{
          "0": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((startTag != null)){\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n}\n    }",
          "1": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(tb);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "2": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((tb != null)){\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n}\n    }",
          "3": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ninsert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "4": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(Text);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "5": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(TokeniserState.Rawtext);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "6": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "7": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((startTag == null)){\nreturn;\n}        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "8": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.handleRawtext(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "9": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert();\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "10": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ninsert(TokeniserState.Rawtext);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "11": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((startTag == null)){\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n}\n    }",
          "12": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "13": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ninsert(startTag, tb);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "14": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.transition(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "15": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nreturn;\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "16": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert();\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "17": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.debug(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "18": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((tb == null)){\nreturn;\n}        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "19": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((tb == null)){\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n}\n    }",
          "20": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag, tb);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "21": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.markInsertionMode();\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "22": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.add(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "23": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(Rawtext);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "24": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.transition(Text);\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "25": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nstartTag = tb.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "26": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nstartTag.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "27": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "28": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb = tb.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "29": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif((Text != null)){\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n}\n    }",
          "30": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nsuper.handleRawtext();\n        tb.insert(startTag);        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "31": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag, false);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "32": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(\"null\", startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "33": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.markInsertionMode();\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "34": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag, true);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "35": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.e(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "36": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "37": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.transition(Text);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "38": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag, \"null\");\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "39": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.tokeniser.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "40": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert();\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "41": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\nif(tb.insert(startTag)){\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "42": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ninsert(startTag, Text);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "43": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.put(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "44": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\n.insert(startTag);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "45": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ntb.insert(startTag, null);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }",
          "46": "    private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {\ninsert(startTag, false);\n        tb.tokeniser.transition(TokeniserState.Rawtext);\n        tb.markInsertionMode();\n        tb.transition(Text);\n    }"
}