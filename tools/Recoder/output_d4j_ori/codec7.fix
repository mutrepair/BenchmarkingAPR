{
          "0": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "1": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64URLSafe(binaryData, true));    }",
          "2": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64Chunked(binaryData, true));    }",
          "3": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(decode(binaryData, true));    }",
          "4": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(decodeBase64(binaryData, true));    }",
          "5": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(discardWhitespace(binaryData, true));    }",
          "6": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encode(binaryData, true));    }",
          "7": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, false));    }",
          "8": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64String(binaryData, true));    }",
          "9": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, true);    }",
          "10": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData);    }",
          "11": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData));    }",
          "12": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, eof));    }",
          "13": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, false);    }",
          "14": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.encodeBase64String(encodeBase64(binaryData, true));    }",
          "15": "    public static String encodeBase64String(byte[] binaryData) {\nreturn encodeBase64(binaryData, true);    }",
          "16": "    public static String encodeBase64String(byte[] binaryData) {\nreturn newStringUtf8(binaryData, true);    }",
          "17": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true), false);    }",
          "18": "    public static String encodeBase64String(byte[] binaryData) {\nresizeBuffer();\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "19": "    public static String encodeBase64String(byte[] binaryData) {\nreset();\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "20": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true), true);    }",
          "21": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.debug(encodeBase64(binaryData, true));    }",
          "22": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.add(encodeBase64(binaryData, true));    }",
          "23": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, false, false));    }",
          "24": "    public static String encodeBase64String(byte[] binaryData) {\nreturn newStringUtf8(encodeBase64(binaryData, true));    }",
          "25": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(add(binaryData, true));    }",
          "26": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.e(encodeBase64(binaryData, true));    }",
          "27": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64());    }",
          "28": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(debug(binaryData, true));    }",
          "29": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));    }",
          "30": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true), binaryData);    }",
          "31": "    public static String encodeBase64String(byte[] binaryData) {\nreturn binaryData;    }",
          "32": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true, false));    }",
          "33": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(CHUNK_SEPARATOR));    }",
          "34": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(STANDARD_ENCODE_TABLE));    }",
          "35": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(URL_SAFE_ENCODE_TABLE));    }",
          "36": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(PAD));    }",
          "37": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(DECODE_TABLE));    }",
          "38": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(encodeTable));    }",
          "39": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(lineSeparator));    }",
          "40": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(buffer));    }",
          "41": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, false, eof));    }",
          "42": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.max(encodeBase64(binaryData, true));    }",
          "43": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData), false);    }",
          "44": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8();    }",
          "45": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(StringUtils.encodeBase64(binaryData));    }",
          "46": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, 0));    }",
          "47": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8().newStringUtf8(binaryData, true);    }",
          "48": "    public static String encodeBase64String(byte[] binaryData) {\nif((binaryData == null)){\nreturn null;}        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "49": "    public static String encodeBase64String(byte[] binaryData) {\nreturn (String)StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "50": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true), false, false);    }",
          "51": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData.encodeBase64());    }",
          "52": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(binaryData, encodeBase64(binaryData, true));    }",
          "53": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, 1));    }",
          "54": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.put(encodeBase64(binaryData, true));    }",
          "55": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(get(binaryData, true));    }",
          "56": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, binaryData));    }",
          "57": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true, true));    }",
          "58": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(false, binaryData));    }",
          "59": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(encodeBase64(binaryData, true)));    }",
          "60": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(max(binaryData, true));    }",
          "61": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8((String)binaryData);    }",
          "62": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(StringUtils.encodeBase64(binaryData, false));    }",
          "63": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(StringUtils.encodeBase64(binaryData, eof));    }",
          "64": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData), true);    }",
          "65": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(e(binaryData, true));    }",
          "66": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, true, eof));    }",
          "67": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, null));    }",
          "68": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, eof, false));    }",
          "69": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(true, binaryData));    }",
          "70": "    public static String encodeBase64String(byte[] binaryData) {\nreturn encodeBase64String(binaryData, true);    }",
          "71": "    public static String encodeBase64String(byte[] binaryData) {\nStringUtils.resizeBuffer();\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "72": "    public static String encodeBase64String(byte[] binaryData) {\nStringUtils.reset();\n        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));    }",
          "73": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(put(binaryData, true));    }",
          "74": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, -1));    }",
          "75": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.newStringUtf8(encodeBase64(binaryData, false), false);    }",
          "76": "    public static String encodeBase64String(byte[] binaryData) {\nreturn Math.newStringUtf8(encodeBase64(binaryData, true));    }",
          "77": "    public static String encodeBase64String(byte[] binaryData) {\nreturn StringUtils.i(encodeBase64(binaryData, true));    }"
}