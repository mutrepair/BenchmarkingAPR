{
          "0": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.segment.add((p + 1), segment);\n         }\n    }",
          "1": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 0), segment);\n         }\n    }",
          "2": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), p);\n         }\n    }",
          "3": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), segment);\n         }\n    }",
          "4": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.p.add((p + 1), segment);\n         }\n    }",
          "5": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.addException((p + 1), segment);\n         }\n    }",
          "6": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 2), segment);\n         }\n    }",
          "7": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p - 1), segment);\n         }\n    }",
          "8": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((segment + 1), segment);\n         }\n    }",
          "9": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((p + 1)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "10": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1));\n         }\n    }",
          "11": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nadd((p + 1), segment);\n         }\n    }",
          "12": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\ninc();\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "13": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\ndec();\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "14": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nmoveIndexToStart();\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "15": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nmoveIndexToEnd();\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "16": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, (p + 1));\n         }\n    }",
          "17": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment);\n         }\n    }",
          "18": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.debug((p + 1), segment);\n         }\n    }",
          "19": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.add((p + 1), segment);\n         }\n    }",
          "20": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, p);\n         }\n    }",
          "21": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.e((p + 1), segment);\n         }\n    }",
          "22": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis..add((p + 1), segment);\n         }\n    }",
          "23": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p / 1), segment);\n         }\n    }",
          "24": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((p != null)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "25": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(((p + 1) + 1));\n         }\n    }",
          "26": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((this.exceptionSegments.add((p + 1), segment) != null)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "27": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), segment);\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "28": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), 0);\n         }\n    }",
          "29": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((p == null)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "30": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p * 1), segment);\n         }\n    }",
          "31": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((segment != null)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "32": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.segment.add((p + 1));\n         }\n    }",
          "33": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), );\n         }\n    }",
          "34": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif(p){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "35": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.segment.add(segment);\n         }\n    }",
          "36": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), segment).add(segment);\n         }\n    }",
          "37": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nsegment.add((p + 1), segment);\n         }\n    }",
          "38": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\naddException(segment);\n         }\n    }",
          "39": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), );\n         }\n    }",
          "40": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif((this.exceptionSegments != null)){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "41": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, false);\n         }\n    }",
          "42": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), (p + 1));\n         }\n    }",
          "43": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), p.exceptionSegments);\n         }\n    }",
          "44": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nreturn;\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "45": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(p);\n         }\n    }",
          "46": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, true);\n         }\n    }",
          "47": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nadd(segment, (p + 1));\n         }\n    }",
          "48": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nif(segment.inIncludeSegments()){\n}\n             this.exceptionSegments.add(+(p + 1), segment);         }\n    }",
          "49": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add();\n         }\n    }",
          "50": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), 1);\n         }\n    }",
          "51": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.max((p + 1), segment);\n         }\n    }",
          "52": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis..add((p + 1), segment);\n         }\n    }",
          "53": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p == 1), segment);\n         }\n    }",
          "54": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(( + 1), segment);\n         }\n    }",
          "55": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, 0);\n         }\n    }",
          "56": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + 1), false);\n         }\n    }",
          "57": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, );\n         }\n    }",
          "58": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\n         }\n    }",
          "59": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.segment.add(p);\n         }\n    }",
          "60": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(((p + 1) + p));\n         }\n    }",
          "61": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, 1);\n         }\n    }",
          "62": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p <= 1), segment);\n         }\n    }",
          "63": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, exceptionSegments);\n         }\n    }",
          "64": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.segment((p + 1), segment);\n         }\n    }",
          "65": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.binarySearchExceptionSegments((p + 1), segment);\n         }\n    }",
          "66": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(((p + 1) + segment));\n         }\n    }",
          "67": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(( + 1), segment);\n         }\n    }",
          "68": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.put((p + 1), segment);\n         }\n    }",
          "69": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p % 1), segment);\n         }\n    }",
          "70": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p + p));\n         }\n    }",
          "71": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add(segment, ((p + 1) + 1));\n         }\n    }",
          "72": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p >= 1), segment);\n         }\n    }",
          "73": "    private void addException(Segment segment) {\n         if (segment.inIncludeSegments()) {\n             int p = binarySearchExceptionSegments(segment);\nthis.exceptionSegments.add((p != 1), segment);\n         }\n    }"
}