{
          "0": "        public double unboundedToBounded(final double y) {\nreturn (lower - FastMath.exp(+y));        }",
          "1": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.exp(+y));        }",
          "2": "        public double unboundedToBounded(final double y) {\nreturn (y - FastMath.exp(+y));        }",
          "3": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.unboundedToBounded(+y));        }",
          "4": "        public double unboundedToBounded(final double y) {\nreturn FastMath.exp(+y);        }",
          "5": "        public double unboundedToBounded(final double y) {\nreturn upper;        }",
          "6": "        public double unboundedToBounded(final double y) {\nreturn (upper - y);        }",
          "7": "        public double unboundedToBounded(final double y) {\nreturn y;        }",
          "8": "        public double unboundedToBounded(final double y) {\nreturn (lower.upper - FastMath.exp(+y));        }",
          "9": "        public double unboundedToBounded(final double y) {\nreturn (upper.upper - FastMath.exp(+y));        }",
          "10": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) - y);        }",
          "11": "        public double unboundedToBounded(final double y) {\nreturn (y - upper);        }",
          "12": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.add(+y));        }",
          "13": "        public double unboundedToBounded(final double y) {\nreturn (upper + FastMath.exp(+y));        }",
          "14": "        public double unboundedToBounded(final double y) {\nreturn (upper - upper);        }",
          "15": "        public double unboundedToBounded(final double y) {\nreturn ((upper - FastMath.exp(+y)) - y);        }",
          "16": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.max(+y));        }",
          "17": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) - FastMath.exp(+y));        }",
          "18": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.exp(y));        }",
          "19": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) - FastMath.exp(+y));        }",
          "20": "        public double unboundedToBounded(final double y) {\nreturn (upper - Math.exp(+y));        }",
          "21": "        public double unboundedToBounded(final double y) {\nreturn (upper - y.exp(+y));        }",
          "22": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.debug(+y));        }",
          "23": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) - upper);        }",
          "24": "        public double unboundedToBounded(final double y) {\nreturn 0;        }",
          "25": "        public double unboundedToBounded(final double y) {\nreturn (upper + y);        }",
          "26": "        public double unboundedToBounded(final double y) {\nreturn ((upper - FastMath.exp(+y)) + y);        }",
          "27": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) - 0);        }",
          "28": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y) - FastMath.exp(+y));        }",
          "29": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.e(+y));        }",
          "30": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.get(+y));        }",
          "31": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) + y);        }",
          "32": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) + upper);        }",
          "33": "        public double unboundedToBounded(final double y) {\nreturn ((upper - FastMath.exp(+y)) - upper);        }",
          "34": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.exp(upper));        }",
          "35": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y) - upper);        }",
          "36": "        public double unboundedToBounded(final double y) {\nreturn (upper - LOG.exp(+y));        }",
          "37": "        public double unboundedToBounded(final double y) {\nif((y == null)){\nreturn 0;}            return upper - FastMath.exp(+y);        }",
          "38": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.max(+y) - upper);        }",
          "39": "        public double unboundedToBounded(final double y) {\nreturn ( - FastMath.exp(+y));        }",
          "40": "        public double unboundedToBounded(final double y) {\nreturn (y + upper);        }",
          "41": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y, 0) - FastMath.exp(+y));        }",
          "42": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.add(+y) - upper);        }",
          "43": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) - upper);        }",
          "44": "        public double unboundedToBounded(final double y) {\nreturn FastMath.max(+y);        }",
          "45": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.put(+y));        }",
          "46": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) + FastMath.exp(+y));        }",
          "47": "        public double unboundedToBounded(final double y) {\nreturn (upper / FastMath.exp(+y));        }",
          "48": "        public double unboundedToBounded(final double y) {\nreturn (exp - FastMath.exp(+y));        }",
          "49": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.exp(upper, y));        }",
          "50": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.put(+y) - upper);        }",
          "51": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(+y) - 1);        }",
          "52": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y, upper) - FastMath.exp(+y));        }",
          "53": "        public double unboundedToBounded(final double y) {\nif((upper == null)){\nreturn 0;}            return upper - FastMath.exp(+y);        }",
          "54": "        public double unboundedToBounded(final double y) {\nreturn ((upper - y) - FastMath.exp(+y));        }",
          "55": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper) - y);        }",
          "56": "        public double unboundedToBounded(final double y) {\nreturn (y.upper - FastMath.exp(+y));        }",
          "57": "        public double unboundedToBounded(final double y) {\nreturn (y - FastMath.exp(upper));        }",
          "58": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y) - y);        }",
          "59": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(y) - 0);        }",
          "60": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) - y);        }",
          "61": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) - 0);        }",
          "62": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, 0) - FastMath.exp(+y));        }",
          "63": "        public double unboundedToBounded(final double y) {\nreturn (unboundedToBounded - FastMath.exp(+y));        }",
          "64": "        public double unboundedToBounded(final double y) {\nreturn (upper * FastMath.exp(+y));        }",
          "65": "        public double unboundedToBounded(final double y) {\nreturn (upper <= FastMath.exp(+y));        }",
          "66": "        public double unboundedToBounded(final double y) {\nreturn ((upper - y) + FastMath.exp(+y));        }",
          "67": "        public double unboundedToBounded(final double y) {\nreturn (!y - FastMath.exp(+y));        }",
          "68": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.y(+y));        }",
          "69": "        public double unboundedToBounded(final double y) {\nreturn (upper - FastMath.i(+y));        }",
          "70": "        public double unboundedToBounded(final double y) {\nreturn (FastMath.exp(upper, y) + upper);        }"
}