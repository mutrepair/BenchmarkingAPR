{
          "0": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.add(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "1": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.divide(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "2": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.multiply(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "3": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "4": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.subtract(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "5": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "6": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "7": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(denominator, +exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "8": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(numerator, -exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "9": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn ArithmeticUtils.pow(denominator, +exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "10": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn exponent;        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "11": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction();        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "12": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.getName(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "13": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "14": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(ONE_HUNDRED, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "15": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(denominator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "16": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "17": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "18": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(denominator, +exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "19": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), denominator);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "20": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), denominator);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "21": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(exponent, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "22": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), ArithmeticUtils.pow(denominator, +exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "23": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.get(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "24": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(ONE_HUNDRED, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "25": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "26": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(exponent, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "27": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), numerator);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "28": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "29": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn ArithmeticUtils.pow(numerator, -exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "30": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), numerator);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "31": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), 0);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "32": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.toString(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "33": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(exponent, ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "34": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, -exponent), 0);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "35": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "36": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(denominator, ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "37": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), exponent.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "38": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn denominator;        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "39": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "40": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(exponent, ArithmeticUtils.pow(denominator, +exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "41": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(denominator, ArithmeticUtils.pow(denominator, +exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "42": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), false);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "43": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "44": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nif((exponent < 0)){\n            return new BigFraction(ArithmeticUtils.pow(denominator, +exponent),\n}\n                                   ArithmeticUtils.pow(numerator,   -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "45": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.lastIndexOf(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "46": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.debug(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "47": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.valueOf(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "48": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "49": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, exponent), ArithmeticUtils.pow(denominator, exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "50": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn null;        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "51": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn pow(denominator, +exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "52": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(numerator, exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "53": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, ));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "54": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn pow(numerator, -exponent);        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "55": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "56": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.exponent(denominator, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "57": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, denominator));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "58": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(-exponent, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "59": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(, +exponent), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "60": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn null;            return new BigFraction(ArithmeticUtils.pow(denominator, +exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "61": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, ), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "62": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, ));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "63": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), ArithmeticUtils.pow(numerator, numerator));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "64": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), LOG.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "65": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, +exponent), Math.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "66": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, exponent), ArithmeticUtils.pow(denominator, exponent));            return new BigFraction(ArithmeticUtils.pow(denominator, +exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "67": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, denominator), ArithmeticUtils.pow(numerator, -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "68": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn;\n            return new BigFraction(ArithmeticUtils.pow(denominator, +exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "69": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(exponent, numerator));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "70": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(denominator, exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "71": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nreturn new BigFraction(ArithmeticUtils.pow(numerator, exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }",
          "72": "    public BigFraction pow(final long exponent) {\n        if (exponent < 0) {\nbreak;\n            return new BigFraction(ArithmeticUtils.pow(denominator, +exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));        }\n        return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));\n    }"
}