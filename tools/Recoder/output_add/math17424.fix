{
          "0": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0);    }",
          "1": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1);    }",
          "2": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2);    }",
          "3": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3);    }",
          "4": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q0, -q2, -q3);    }",
          "5": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q1, -q2, -q3);    }",
          "6": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q2, -q2, -q3);    }",
          "7": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3, -q2, -q3);    }",
          "8": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q0, -q3);    }",
          "9": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q1, -q3);    }",
          "10": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q2, -q3);    }",
          "11": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q3, -q3);    }",
          "12": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, -q3);    }",
          "13": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1, +q1, -q2, -q3);    }",
          "14": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2, +q1, -q2, -q3);    }",
          "15": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3, +q1, -q2, -q3);    }",
          "16": "    public Quaternion getConjugate() {\nreturn null;    }",
          "17": "    public Quaternion getConjugate() {\nreturn q0;    }",
          "18": "    public Quaternion getConjugate() {\nreturn q1;    }",
          "19": "    public Quaternion getConjugate() {\nreturn q3;    }",
          "20": "    public Quaternion getConjugate() {\nreturn q2;    }",
          "21": "    public Quaternion getConjugate() {\nreturn new Quaternion();    }",
          "22": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1);    }",
          "23": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0);    }",
          "24": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2);    }",
          "25": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3);    }",
          "26": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, -q0);    }",
          "27": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, -q1);    }",
          "28": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, -q2);    }",
          "29": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, !q0);    }",
          "30": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, !q1);    }",
          "31": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, !q2);    }",
          "32": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, !q3);    }",
          "33": "    public Quaternion getConjugate() {\nreturn \"null\";    }",
          "34": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0.q3);    }",
          "35": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1.q3);    }",
          "36": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2.q3);    }",
          "37": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3.q3);    }",
          "38": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getNorm().q3);    }",
          "39": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ0().q3);    }",
          "40": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ1().q3);    }",
          "41": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ2().q3);    }",
          "42": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ3().q3);    }",
          "43": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getScalarPart().q3);    }",
          "44": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getVectorPart().q3);    }",
          "45": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getConjugate);    }",
          "46": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q0, -q3);    }",
          "47": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q1, -q3);    }",
          "48": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q3, -q3);    }",
          "49": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, -q0, -q2, -q3);    }",
          "50": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, -q1, -q2, -q3);    }",
          "51": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, -q2, -q2, -q3);    }",
          "52": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, -q3, -q2, -q3);    }",
          "53": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0.q2);    }",
          "54": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1.q2);    }",
          "55": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2.q2);    }",
          "56": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3.q2);    }",
          "57": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getNorm().q2);    }",
          "58": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ0().q2);    }",
          "59": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ1().q2);    }",
          "60": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ2().q2);    }",
          "61": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ3().q2);    }",
          "62": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getScalarPart().q2);    }",
          "63": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getVectorPart().q2);    }",
          "64": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0.q1);    }",
          "65": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1.q1);    }",
          "66": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2.q1);    }",
          "67": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3.q1);    }",
          "68": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getNorm().q1);    }",
          "69": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ0().q1);    }",
          "70": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ1().q1);    }",
          "71": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ2().q1);    }",
          "72": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ3().q1);    }",
          "73": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getScalarPart().q1);    }",
          "74": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getVectorPart().q1);    }",
          "75": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, !q0, -q2, -q3);    }",
          "76": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, !q1, -q2, -q3);    }",
          "77": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, !q2, -q2, -q3);    }",
          "78": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, !q3, -q2, -q3);    }",
          "79": "    public Quaternion getConjugate() {\nreturn new Quaternion(-q0, +q1, -q2, -q3);    }",
          "80": "    public Quaternion getConjugate() {\nreturn new Quaternion(-q1, +q1, -q2, -q3);    }",
          "81": "    public Quaternion getConjugate() {\nreturn new Quaternion(-q2, +q1, -q2, -q3);    }",
          "82": "    public Quaternion getConjugate() {\nreturn new Quaternion(-q3, +q1, -q2, -q3);    }",
          "83": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0.q0);    }",
          "84": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1.q0);    }",
          "85": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2.q0);    }",
          "86": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3.q0);    }",
          "87": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getNorm().q0);    }",
          "88": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ0().q0);    }",
          "89": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ1().q0);    }",
          "90": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ2().q0);    }",
          "91": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getQ3().q0);    }",
          "92": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getScalarPart().q0);    }",
          "93": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, getVectorPart().q0);    }",
          "94": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, !q0, -q3);    }",
          "95": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, !q1, -q3);    }",
          "96": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, !q2, -q3);    }",
          "97": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, !q3, -q3);    }",
          "98": "    public Quaternion getConjugate() {\nreturn new Quaternion(!q0, +q1, -q2, -q3);    }",
          "99": "    public Quaternion getConjugate() {\nreturn new Quaternion(!q1, +q1, -q2, -q3);    }",
          "100": "    public Quaternion getConjugate() {\nreturn new Quaternion(!q2, +q1, -q2, -q3);    }",
          "101": "    public Quaternion getConjugate() {\nreturn new Quaternion(!q3, +q1, -q2, -q3);    }",
          "102": "    public Quaternion getConjugate() {\nreturn new Quaternion(getConjugate, +q1, -q2, -q3);    }",
          "103": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q0.q3, -q2, -q3);    }",
          "104": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q1.q3, -q2, -q3);    }",
          "105": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q2.q3, -q2, -q3);    }",
          "106": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3.q3, -q2, -q3);    }",
          "107": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getNorm().q3, -q2, -q3);    }",
          "108": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ0().q3, -q2, -q3);    }",
          "109": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ1().q3, -q2, -q3);    }",
          "110": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ2().q3, -q2, -q3);    }",
          "111": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ3().q3, -q2, -q3);    }",
          "112": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getScalarPart().q3, -q2, -q3);    }",
          "113": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getVectorPart().q3, -q2, -q3);    }",
          "114": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1, q3);    }",
          "115": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getConjugate, -q2, -q3);    }",
          "116": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1, q1);    }",
          "117": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1, q2);    }",
          "118": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0.q3, +q1, -q2, -q3);    }",
          "119": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1.q3, +q1, -q2, -q3);    }",
          "120": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2.q3, +q1, -q2, -q3);    }",
          "121": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3.q3, +q1, -q2, -q3);    }",
          "122": "    public Quaternion getConjugate() {\nreturn new Quaternion(getNorm().q3, +q1, -q2, -q3);    }",
          "123": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ0().q3, +q1, -q2, -q3);    }",
          "124": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ1().q3, +q1, -q2, -q3);    }",
          "125": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ2().q3, +q1, -q2, -q3);    }",
          "126": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ3().q3, +q1, -q2, -q3);    }",
          "127": "    public Quaternion getConjugate() {\nreturn new Quaternion(getScalarPart().q3, +q1, -q2, -q3);    }",
          "128": "    public Quaternion getConjugate() {\nreturn new Quaternion(getVectorPart().q3, +q1, -q2, -q3);    }",
          "129": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getConjugate, -q3);    }",
          "130": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q0.q3, -q3);    }",
          "131": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q1.q3, -q3);    }",
          "132": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q2.q3, -q3);    }",
          "133": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q3.q3, -q3);    }",
          "134": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getNorm().q3, -q3);    }",
          "135": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ0().q3, -q3);    }",
          "136": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ1().q3, -q3);    }",
          "137": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ2().q3, -q3);    }",
          "138": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ3().q3, -q3);    }",
          "139": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getScalarPart().q3, -q3);    }",
          "140": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getVectorPart().q3, -q3);    }",
          "141": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3, q3);    }",
          "142": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3);    }",
          "143": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2, q3);    }",
          "144": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q0.q2, -q2, -q3);    }",
          "145": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q1.q2, -q2, -q3);    }",
          "146": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q2.q2, -q2, -q3);    }",
          "147": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3.q2, -q2, -q3);    }",
          "148": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getNorm().q2, -q2, -q3);    }",
          "149": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ0().q2, -q2, -q3);    }",
          "150": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ1().q2, -q2, -q3);    }",
          "151": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ2().q2, -q2, -q3);    }",
          "152": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ3().q2, -q2, -q3);    }",
          "153": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getScalarPart().q2, -q2, -q3);    }",
          "154": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getVectorPart().q2, -q2, -q3);    }",
          "155": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q0.q1, -q2, -q3);    }",
          "156": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q1.q1, -q2, -q3);    }",
          "157": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q2.q1, -q2, -q3);    }",
          "158": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3.q1, -q2, -q3);    }",
          "159": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getNorm().q1, -q2, -q3);    }",
          "160": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ0().q1, -q2, -q3);    }",
          "161": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ1().q1, -q2, -q3);    }",
          "162": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ2().q1, -q2, -q3);    }",
          "163": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ3().q1, -q2, -q3);    }",
          "164": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getScalarPart().q1, -q2, -q3);    }",
          "165": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getVectorPart().q1, -q2, -q3);    }",
          "166": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q0.q2, -q3);    }",
          "167": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q1.q2, -q3);    }",
          "168": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q2.q2, -q3);    }",
          "169": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q3.q2, -q3);    }",
          "170": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getNorm().q2, -q3);    }",
          "171": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ0().q2, -q3);    }",
          "172": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ1().q2, -q3);    }",
          "173": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ2().q2, -q3);    }",
          "174": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ3().q2, -q3);    }",
          "175": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getScalarPart().q2, -q3);    }",
          "176": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getVectorPart().q2, -q3);    }",
          "177": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0.q2, +q1, -q2, -q3);    }",
          "178": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1.q2, +q1, -q2, -q3);    }",
          "179": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2.q2, +q1, -q2, -q3);    }",
          "180": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3.q2, +q1, -q2, -q3);    }",
          "181": "    public Quaternion getConjugate() {\nreturn new Quaternion(getNorm().q2, +q1, -q2, -q3);    }",
          "182": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ0().q2, +q1, -q2, -q3);    }",
          "183": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ1().q2, +q1, -q2, -q3);    }",
          "184": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ2().q2, +q1, -q2, -q3);    }",
          "185": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ3().q2, +q1, -q2, -q3);    }",
          "186": "    public Quaternion getConjugate() {\nreturn new Quaternion(getScalarPart().q2, +q1, -q2, -q3);    }",
          "187": "    public Quaternion getConjugate() {\nreturn new Quaternion(getVectorPart().q2, +q1, -q2, -q3);    }",
          "188": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q0.q1, -q3);    }",
          "189": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q1.q1, -q3);    }",
          "190": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q2.q1, -q3);    }",
          "191": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q3.q1, -q3);    }",
          "192": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getNorm().q1, -q3);    }",
          "193": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ0().q1, -q3);    }",
          "194": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ1().q1, -q3);    }",
          "195": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ2().q1, -q3);    }",
          "196": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ3().q1, -q3);    }",
          "197": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getScalarPart().q1, -q3);    }",
          "198": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getVectorPart().q1, -q3);    }",
          "199": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, );    }",
          "200": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0.q1, +q1, -q2, -q3);    }",
          "201": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1.q1, +q1, -q2, -q3);    }",
          "202": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2.q1, +q1, -q2, -q3);    }",
          "203": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3.q1, +q1, -q2, -q3);    }",
          "204": "    public Quaternion getConjugate() {\nreturn new Quaternion(getNorm().q1, +q1, -q2, -q3);    }",
          "205": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ0().q1, +q1, -q2, -q3);    }",
          "206": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ1().q1, +q1, -q2, -q3);    }",
          "207": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ2().q1, +q1, -q2, -q3);    }",
          "208": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ3().q1, +q1, -q2, -q3);    }",
          "209": "    public Quaternion getConjugate() {\nreturn new Quaternion(getScalarPart().q1, +q1, -q2, -q3);    }",
          "210": "    public Quaternion getConjugate() {\nreturn new Quaternion(getVectorPart().q1, +q1, -q2, -q3);    }",
          "211": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q0.q0, -q2, -q3);    }",
          "212": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q1.q0, -q2, -q3);    }",
          "213": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q2.q0, -q2, -q3);    }",
          "214": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, q3.q0, -q2, -q3);    }",
          "215": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getNorm().q0, -q2, -q3);    }",
          "216": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ0().q0, -q2, -q3);    }",
          "217": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ1().q0, -q2, -q3);    }",
          "218": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ2().q0, -q2, -q3);    }",
          "219": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getQ3().q0, -q2, -q3);    }",
          "220": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getScalarPart().q0, -q2, -q3);    }",
          "221": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, getVectorPart().q0, -q2, -q3);    }",
          "222": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q0.q0, -q3);    }",
          "223": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q1.q0, -q3);    }",
          "224": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q2.q0, -q3);    }",
          "225": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, q3.q0, -q3);    }",
          "226": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getNorm().q0, -q3);    }",
          "227": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ0().q0, -q3);    }",
          "228": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ1().q0, -q3);    }",
          "229": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ2().q0, -q3);    }",
          "230": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getQ3().q0, -q3);    }",
          "231": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getScalarPart().q0, -q3);    }",
          "232": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, getVectorPart().q0, -q3);    }",
          "233": "    public Quaternion getConjugate() {\nsuper.getConjugate();\n        return new Quaternion(q0, +q1, -q2, -q3);    }",
          "234": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q0++);    }",
          "235": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q1++);    }",
          "236": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q2++);    }",
          "237": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0, +q1, -q2, q3++);    }",
          "238": "    public Quaternion getConjugate() {\nreturn new Quaternion(q0.q0, +q1, -q2, -q3);    }",
          "239": "    public Quaternion getConjugate() {\nreturn new Quaternion(q1.q0, +q1, -q2, -q3);    }",
          "240": "    public Quaternion getConjugate() {\nreturn new Quaternion(q2.q0, +q1, -q2, -q3);    }",
          "241": "    public Quaternion getConjugate() {\nreturn new Quaternion(q3.q0, +q1, -q2, -q3);    }",
          "242": "    public Quaternion getConjugate() {\nreturn new Quaternion(getNorm().q0, +q1, -q2, -q3);    }",
          "243": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ0().q0, +q1, -q2, -q3);    }",
          "244": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ1().q0, +q1, -q2, -q3);    }",
          "245": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ2().q0, +q1, -q2, -q3);    }",
          "246": "    public Quaternion getConjugate() {\nreturn new Quaternion(getQ3().q0, +q1, -q2, -q3);    }",
          "247": "    public Quaternion getConjugate() {\nreturn new Quaternion(getScalarPart().q0, +q1, -q2, -q3);    }",
          "248": "    public Quaternion getConjugate() {\nreturn new Quaternion(getVectorPart().q0, +q1, -q2, -q3);    }"
}