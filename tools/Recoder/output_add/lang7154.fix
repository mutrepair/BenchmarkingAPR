{
          "0": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(2 & (src << shift));\n        }\n        return dst;\n    }",
          "1": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(true & (src << shift));\n        }\n        return dst;\n    }",
          "2": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "3": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(false & (src << shift));\n        }\n        return dst;\n    }",
          "4": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(32 & (src << shift));\n        }\n        return dst;\n    }",
          "5": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift = ((i * 8) + srcPos);\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "6": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(8 & (src << shift));\n        }\n        return dst;\n    }",
          "7": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(null & (src << shift));\n        }\n        return dst;\n    }",
          "8": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff | (src << shift));\n        }\n        return dst;\n    }",
          "9": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "10": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nbreak;\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "11": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(-1 & (src << shift));\n        }\n        return dst;\n    }",
          "12": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift[(dstPos + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "13": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(\"null\" & (src << shift));\n        }\n        return dst;\n    }",
          "14": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nreturn dst;            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "15": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nsrcPos[(dstPos + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "16": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (0xff & (src << shift));\n        }\n        return dst;\n    }",
          "17": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff && (src << shift));\n        }\n        return dst;\n    }",
          "18": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "19": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] += (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "20": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nsrcPos = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "21": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nsrc[(dstPos + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "22": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ni = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "23": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(src << shift);\n        }\n        return dst;\n    }",
          "24": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(1 & (src << shift));\n        }\n        return dst;\n    }",
          "25": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src << shift));\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "26": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(dstPos + i);\n        }\n        return dst;\n    }",
          "27": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nsrc = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "28": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0 & (src << shift));\n        }\n        return dst;\n    }",
          "29": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ncontinue;\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "30": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift = ((i * 8) + srcPos);\n        }\n        return dst;\n    }",
          "31": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = srcPos;\n        }\n        return dst;\n    }",
          "32": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ni[(dstPos + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "33": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nreturn 0;            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "34": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "35": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src & shift));\n        }\n        return dst;\n    }",
          "36": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = srcPos[(dstPos + i)];\n        }\n        return dst;\n    }",
          "37": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nreturn;\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "38": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (shift << shift));\n        }\n        return dst;\n    }",
          "39": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift = 0xff;\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "40": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = dst;\n        }\n        return dst;\n    }",
          "41": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = this.srcPos;\n        }\n        return dst;\n    }",
          "42": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nfor(int i = 0;(i < nBytes);i++) {            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "43": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = this.dst;\n        }\n        return dst;\n    }",
          "44": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(shift + i)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "45": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nshift = shift;\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "46": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = shift;\n        }\n        return dst;\n    }",
          "47": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = this.src;\n        }\n        return dst;\n    }",
          "48": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + shift)] = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "49": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nif(((((nBytes - 1) * 8) + srcPos) >= 32)){\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "50": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (0xff | (src << shift));\n        }\n        return dst;\n    }",
          "51": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff || (src << shift));\n        }\n        return dst;\n    }",
          "52": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src | shift));\n        }\n        return dst;\n    }",
          "53": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff + (src << shift));\n        }\n        return dst;\n    }",
          "54": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src + shift));\n        }\n        return dst;\n    }",
          "55": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nreturn 0xff;            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "56": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (long)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "57": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src - shift));\n        }\n        return dst;\n    }",
          "58": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nif((0 == nBytes)){\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "59": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\nif((i * 8)){\n}\n            dst[dstPos + i] = (byte)(0xff & (src << shift));        }\n        return dst;\n    }",
          "60": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndstPos = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "61": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (int)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "62": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "63": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n = (byte)(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "64": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src * shift));\n        }\n        return dst;\n    }",
          "65": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte[])(0xff & (src << shift));\n        }\n        return dst;\n    }",
          "66": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src <= shift));\n        }\n        return dst;\n    }",
          "67": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src < shift));\n        }\n        return dst;\n    }",
          "68": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src / shift));\n        }\n        return dst;\n    }",
          "69": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src % shift));\n        }\n        return dst;\n    }",
          "70": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (byte)(0xff & (src > shift));\n        }\n        return dst;\n    }",
          "71": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (((0xff & (src << shift)) && (dst == dst[0])))?dst[0]:0;\n        }\n        return dst;\n    }",
          "72": "    public static byte[] intToByteArray(final int src, final int srcPos, final byte[] dst, final int dstPos, final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\n        if ((nBytes - 1) * 8 + srcPos >= 32) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 32\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\ndst[(dstPos + i)] = (((0xff & (src << shift)) && (dst == dst[0])))?dst[1]:0;\n        }\n        return dst;\n    }"
}