{
          "0": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (0 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "1": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (1 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "2": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (2 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "3": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> bits);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "4": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "5": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> i);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "6": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal long mask = (255 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "7": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nif((bits != null)){\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "8": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (false >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "9": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "10": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (-1 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "11": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (0xff >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "12": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 - shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "13": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> out);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "14": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> mask);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "15": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (true >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "16": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nint mask = (255 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "17": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift + shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "18": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> srcPos);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "19": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn 0;            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "20": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nshift = ((i * 8) + dstPos);\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "21": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nout = (short)((out & ~mask) | bits);\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "22": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (\"null\" >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "23": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nif((bits == null)){\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "24": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 | shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "25": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nif((i != null)){\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "26": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift | shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "27": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nbreak;\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "28": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 <= shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "29": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((255 >>> shift) + shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "30": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 * shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "31": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = out;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "32": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift - shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "33": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 + shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "34": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift * shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "35": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn;\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "36": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (((nBytes - 1) * 8) + dstPos);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "37": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "38": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (0 == nBytes);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "39": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (null >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "40": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = 0;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "41": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (srcPos == 0);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "42": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (src.length == 0);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "43": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((nBytes - 1) * 8);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "44": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = i;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "45": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nif((0xff & src[(i + srcPos)])){\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "46": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift + out);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "47": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn 1;            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "48": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift & shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "49": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (nBytes - 1);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "50": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 / shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "51": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn dstInit;            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "52": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((255 >>> shift) | shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "53": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> );\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "54": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (out & ~mask);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "55": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (0xff & src[(i + srcPos)]);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "56": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >= shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "57": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "58": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> dstInit);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "59": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 >>> src);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "60": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nbits++;\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "61": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn false;            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "62": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift + i);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "63": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 % shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "64": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal short mask = (255 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "65": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift + 1);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "66": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((255 >>> shift) * shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "67": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift / shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "68": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (255 & shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "69": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((255 >>> shift) + out);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "70": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = (shift + srcPos);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "71": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nreturn out;            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "72": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal byte[] mask = (255 >>> shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "73": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\ncontinue;\n            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "74": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfor(int i = 0;(i < nBytes);i++) {            final int mask = 255 >>> shift;            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "75": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "76": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((255 + shift) + shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "77": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\nfinal int mask = ((shift + shift) + shift);\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }"
}