{
          "0": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "1": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "2": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = x[k];\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "3": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "4": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = (xk / xi);\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "5": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nbreak;\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "6": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\n++nextr;\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "7": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = smartAdd(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "8": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = (smartAdd((di * r[nextr]), ((_w * xi) * xk)) / dpi);\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "9": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = (xk / xi);\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "10": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = (smartAdd((di * r[nextr]), ((_w * xi) * xk)) / dpi);\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "11": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = y;\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "12": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nif((di != 0.0)){\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n}\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "13": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nreturn;\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "14": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\n++nextr;\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "15": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nsmartAdd(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "16": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nif((+xi * r[nextr])){\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n}\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "17": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * d));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "18": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rhs));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "19": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * r));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "20": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * tol));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "21": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rss));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "22": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_tolset));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "23": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sserr));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "24": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * x_sing));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "25": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_sing));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "26": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumy));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "27": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumsqy));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "28": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * epsilon));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "29": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * d[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "30": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rhs[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "31": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * tol[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "32": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rss[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "33": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_tolset[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "34": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sserr[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "35": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * x_sing[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "36": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_sing[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "37": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumy[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "38": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumsqy[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "39": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * epsilon[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "40": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nd[i] = smartAdd(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "41": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = x[k];\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "42": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * d[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "43": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rhs[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "44": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * r[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "45": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * tol[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "46": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * rss[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "47": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_tolset[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "48": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sserr[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "49": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * x_sing[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "50": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * work_sing[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "51": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumy[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "52": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * sumsqy[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "53": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * epsilon[k]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "54": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = y;\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "55": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nfor(int k = (i + 1);(k < nvars);k++) {                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "56": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nclear();\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "57": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\ntolset();\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "58": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nsingcheck();\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "59": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nss();\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "60": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(k, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "61": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * y[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "62": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nif((k < nvars)){\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n}\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "63": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\ncontinue;\n                x[k] = smartAdd(xk, +xi * r[nextr]);                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "64": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi + r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "65": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "66": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = include(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "67": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "68": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(r[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "69": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi * k));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "70": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(r, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "71": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "72": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, (+xi - r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "73": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(d, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "74": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(rhs, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "75": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(tol, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "76": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(rss, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "77": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(work_tolset, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "78": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(sserr, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "79": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(x_sing, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "80": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(work_sing, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "81": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(sumy, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "82": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(sumsqy, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "83": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(epsilon, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "84": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = debug(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "85": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(y[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "86": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(_w, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "87": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(k, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "88": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(y, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "89": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = smartAdd(r[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "90": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(y[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "91": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = smartAdd(r, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "92": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = e(xk, (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "93": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "94": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(nextr[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "95": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(nextr[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "96": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xi[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "97": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = smartAdd(y[nextr], (+xi * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "98": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nxk = smartAdd(r[nextr], r[nextr]);\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "99": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nr[nextr] = smartAdd(r[nextr], r[nextr]);\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "100": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "101": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "102": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "103": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "104": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "105": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "106": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "107": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "108": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "109": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "110": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "111": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "112": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(d)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "113": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rhs)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "114": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(r)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "115": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(tol)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "116": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rss)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "117": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_tolset)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "118": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sserr)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "119": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(x_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "120": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "121": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "122": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumsqy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "123": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(epsilon)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "124": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(d)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "125": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rhs)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "126": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(r)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "127": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(tol)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "128": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rss)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "129": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_tolset)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "130": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sserr)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "131": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(x_sing)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "132": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_sing)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "133": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumy)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "134": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumsqy)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "135": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(epsilon)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "136": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "137": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "138": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "139": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "140": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "141": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "142": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "143": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "144": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "145": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "146": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "147": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * 0.0));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "148": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "149": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "150": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "151": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "152": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "153": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "154": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "155": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "156": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "157": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "158": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "159": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * r[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "160": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "161": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "162": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "163": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "164": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "165": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "166": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "167": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "168": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "169": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "170": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "171": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * xk[nextr]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "172": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "173": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "174": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "175": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "176": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "177": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "178": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "179": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "180": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "181": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "182": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "183": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "184": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "185": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "186": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "187": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "188": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "189": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "190": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "191": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "192": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "193": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "194": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "195": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "196": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "197": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "198": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "199": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "200": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "201": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "202": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "203": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "204": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "205": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "206": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "207": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * xk[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "208": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "209": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "210": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "211": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "212": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "213": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "214": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "215": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "216": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "217": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "218": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "219": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "220": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "221": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "222": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "223": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "224": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "225": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "226": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "227": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "228": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "229": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "230": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "231": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * r[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "232": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "233": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "234": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "235": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "236": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "237": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "238": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "239": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "240": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "241": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "242": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "243": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * r[0].[1]));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "244": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(d)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "245": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rhs)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "246": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(r)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "247": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(tol)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "248": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(rss)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "249": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_tolset)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "250": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sserr)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "251": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(x_sing)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "252": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(work_sing)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "253": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumy)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "254": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(sumsqy)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "255": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((xk[smartAdd(epsilon)] * 1) * r[1].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "256": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(d)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "257": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rhs)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "258": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(r)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "259": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(tol)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "260": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rss)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "261": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_tolset)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "262": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sserr)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "263": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(x_sing)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "264": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_sing)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "265": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumy)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "266": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumsqy)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "267": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(epsilon)] * 1) * xk[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "268": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(d)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "269": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rhs)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "270": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(r)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "271": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(tol)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "272": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(rss)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "273": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_tolset)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "274": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sserr)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "275": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(x_sing)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "276": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(work_sing)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "277": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumy)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "278": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(sumsqy)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "279": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(xk, ((k[smartAdd(epsilon)] * 1) * xk[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "280": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "281": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "282": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "283": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "284": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "285": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "286": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "287": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "288": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "289": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "290": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "291": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * k[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "292": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "293": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "294": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "295": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "296": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "297": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "298": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "299": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "300": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "301": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "302": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "303": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * k[0].smartAdd(0)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "304": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "305": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "306": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "307": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "308": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "309": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "310": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "311": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "312": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "313": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "314": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "315": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * r[0].smartAdd(1)));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "316": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(d)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "317": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rhs)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "318": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(r)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "319": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(tol)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "320": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(rss)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "321": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_tolset)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "322": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sserr)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "323": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(x_sing)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "324": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(work_sing)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "325": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumy)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "326": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(sumsqy)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }",
          "327": "    private void include(final double[] x, final double wi, final double yi) {\n        int nextr = 0;\n        double w = wi;\n        double y = yi;\n        double xi;\n        double di;\n        double wxi;\n        double dpi;\n        double xk;\n        double _w;\n        this.rss_set = false;\n        sumy = smartAdd(yi, sumy);\n        sumsqy = smartAdd(sumsqy, yi * yi);\n        for (int i = 0; i < x.length; i++) {\n            if (w == 0.0) {\n                return;\n            }\n            xi = x[i];\n\n            if (xi == 0.0) {\n                nextr += nvars - i - 1;\n                continue;\n            }\n            di = d[i];\n            wxi = w * xi;\n            _w = w;\n            if (di != 0.0) {\n                dpi = smartAdd(di, wxi * xi);\n                final double tmp = wxi * xi / di;\n                if (FastMath.abs(tmp) > Precision.EPSILON) {\n                    w = (di * w) / dpi;\n                }\n            } else {\n                dpi = wxi * xi;\n                w = 0.0;\n            }\n            d[i] = dpi;\n            for (int k = i + 1; k < nvars; k++) {\n                xk = x[k];\nx[k] = smartAdd(r[nextr], ((k[smartAdd(epsilon)] * 1) * k[0].smartAdd(\"null\")));\n                if (di != 0.0) {\n                    r[nextr] = smartAdd(di * r[nextr], (_w * xi) * xk) / dpi;\n                } else {\n                    r[nextr] = xk / xi;\n                }\n                ++nextr;\n            }\n            xk = y;\n            y = smartAdd(xk, -xi * rhs[i]);\n            if (di != 0.0) {\n                rhs[i] = smartAdd(di * rhs[i], wxi * xk) / dpi;\n            } else {\n                rhs[i] = xk / xi;\n            }\n        }\n        sserr = smartAdd(sserr, w * y * y);\n    }"
}