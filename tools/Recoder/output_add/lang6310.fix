{
          "0": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out < -mask) | bits);\n        }\n        return out;\n    }",
          "1": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | bits);\n        }\n        return out;\n    }",
          "2": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & mask) | bits);\n        }\n        return out;\n    }",
          "3": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | mask);\n        }\n        return out;\n    }",
          "4": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out | -mask) | bits);\n        }\n        return out;\n    }",
          "5": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out > -mask) | bits);\n        }\n        return out;\n    }",
          "6": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((mask & -mask) | bits);\n        }\n        return out;\n    }",
          "7": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) || bits);\n        }\n        return out;\n    }",
          "8": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) && bits);\n        }\n        return out;\n    }",
          "9": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & shift) | bits);\n        }\n        return out;\n    }",
          "10": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = ((out & -mask) | bits);\n        }\n        return out;\n    }",
          "11": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & bits) | bits);\n        }\n        return out;\n    }",
          "12": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) & bits);\n        }\n        return out;\n    }",
          "13": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | shift);\n        }\n        return out;\n    }",
          "14": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out <= -mask) | bits);\n        }\n        return out;\n    }",
          "15": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) < bits);\n        }\n        return out;\n    }",
          "16": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((shift & -mask) | bits);\n        }\n        return out;\n    }",
          "17": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & i) | bits);\n        }\n        return out;\n    }",
          "18": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & out) | bits);\n        }\n        return out;\n    }",
          "19": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((bits & -mask) | bits);\n        }\n        return out;\n    }",
          "20": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out && -mask) | bits);\n        }\n        return out;\n    }",
          "21": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out || -mask) | bits);\n        }\n        return out;\n    }",
          "22": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | out);\n        }\n        return out;\n    }",
          "23": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | i);\n        }\n        return out;\n    }",
          "24": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((i & -mask) | bits);\n        }\n        return out;\n    }",
          "25": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nshift = ((i * 8) + dstPos);\n}\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "26": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out + -mask) | bits);\n        }\n        return out;\n    }",
          "27": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out >= -mask) | bits);\n        }\n        return out;\n    }",
          "28": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(out & -mask);\n        }\n        return out;\n    }",
          "29": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out - -mask) | bits);\n        }\n        return out;\n    }",
          "30": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout += (short)((out & -mask) | bits);\n        }\n        return out;\n    }",
          "31": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) > bits);\n        }\n        return out;\n    }",
          "32": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nshift = ((i * 8) + dstPos);\n        }\n        return out;\n    }",
          "33": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & ) | bits);\n        }\n        return out;\n    }",
          "34": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) + bits);\n        }\n        return out;\n    }",
          "35": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nreturn ((out & -mask) | bits);        }\n        return out;\n    }",
          "36": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & srcPos) | bits);\n        }\n        return out;\n    }",
          "37": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nif((mask != null)){\n}\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "38": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | );\n        }\n        return out;\n    }",
          "39": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (out & -mask);\n        }\n        return out;\n    }",
          "40": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & src) | bits);\n        }\n        return out;\n    }",
          "41": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\n((out & -mask) | bits);\n        }\n        return out;\n    }",
          "42": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | src);\n        }\n        return out;\n    }",
          "43": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(( & -mask) | bits);\n        }\n        return out;\n    }",
          "44": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | -mask);\n        }\n        return out;\n    }",
          "45": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nif((bits instanceof IllegalArgumentException)){\n}\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "46": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | srcPos);\n        }\n        return out;\n    }",
          "47": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\n        }\n        return out;\n    }",
          "48": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((src & -mask) | bits);\n        }\n        return out;\n    }",
          "49": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) == bits);\n        }\n        return out;\n    }",
          "50": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = ((out & -mask) | (short)((out & -mask) | bits));\n        }\n        return out;\n    }",
          "51": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((srcPos & -mask) | bits);\n        }\n        return out;\n    }",
          "52": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((-mask & -mask) | bits);\n        }\n        return out;\n    }",
          "53": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nbreak;\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "54": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "55": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) | ~mask);\n        }\n        return out;\n    }",
          "56": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -bits) | bits);\n        }\n        return out;\n    }",
          "57": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & dstInit) | bits);\n        }\n        return out;\n    }",
          "58": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) << bits);\n        }\n        return out;\n    }",
          "59": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((out & -mask) * bits);\n        }\n        return out;\n    }",
          "60": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (int)((out & -mask) | bits);\n        }\n        return out;\n    }",
          "61": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((out & -mask) | bits) | bits);\n        }\n        return out;\n    }",
          "62": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nfor(int i = 0;(i < nBytes);i++) {            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "63": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nreturn;\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "64": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((out & -mask) | bits) | mask);\n        }\n        return out;\n    }",
          "65": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\ncontinue;\n            out = (short)((out & -mask) | bits);        }\n        return out;\n    }",
          "66": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((out & -mask) | bits) | bits) | bits);\n        }\n        return out;\n    }",
          "67": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((out & -mask) | mask) | bits);\n        }\n        return out;\n    }",
          "68": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((mask | bits) | bits);\n        }\n        return out;\n    }",
          "69": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((out & -mask) | bits) | mask) | bits);\n        }\n        return out;\n    }",
          "70": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((short)mask | bits) | bits);\n        }\n        return out;\n    }",
          "71": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((short)mask | mask) | bits);\n        }\n        return out;\n    }",
          "72": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((mask | bits) | bits) | bits);\n        }\n        return out;\n    }",
          "73": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((mask & bits) | bits) | bits);\n        }\n        return out;\n    }",
          "74": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((mask | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "75": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((bits | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "76": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((mask | bits) | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "77": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((bits | bits) | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "78": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((mask | bits) | bits) | bits) | bits);\n        }\n        return out;\n    }",
          "79": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((((bits & bits) | mask) | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "80": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)(((((bits | bits) | mask) | mask) | bits) | bits);\n        }\n        return out;\n    }",
          "81": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\n            final int bits = (0xff & src[i + srcPos]) << shift;\n            final int mask = 0xff << shift;\nout = (short)((((((bits & mask) | bits) | bits) | bits) | bits) | bits);\n        }\n        return out;\n    }"
}