{
          "0": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nshift = ((i * 1) + srcPos);\n}\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "1": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = (1 | (src >> shift));\n        }\n        return dst;\n    }",
          "2": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nbreak;\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "3": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nsrcPos[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "4": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nshift[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "5": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = (src >> shift);\n        }\n        return dst;\n    }",
          "6": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nsrc[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "7": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn dst;            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "8": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nshift = ((i * 1) + srcPos);\n        }\n        return dst;\n    }",
          "9": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nshift = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "10": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "11": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src < shift)) != 0);\n        }\n        return dst;\n    }",
          "12": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src > shift)) != 0);\n        }\n        return dst;\n    }",
          "13": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = (dstPos + i);\n        }\n        return dst;\n    }",
          "14": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] += ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "15": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) > 0);\n        }\n        return dst;\n    }",
          "16": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) < 0);\n        }\n        return dst;\n    }",
          "17": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 || (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "18": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] += (1 | (src >> shift));\n        }\n        return dst;\n    }",
          "19": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = srcPos;\n        }\n        return dst;\n    }",
          "20": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = srcPos[(dstPos + i)];\n        }\n        return dst;\n    }",
          "21": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nsrcPos = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "22": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ni[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "23": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "24": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 && (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "25": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn false;            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "26": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ncontinue;\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "27": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src <= shift)) != 0);\n        }\n        return dst;\n    }",
          "28": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >= shift)) != 0);\n        }\n        return dst;\n    }",
          "29": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(shift + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "30": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 < (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "31": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (shift >> shift)) != 0);\n        }\n        return dst;\n    }",
          "32": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ni = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "33": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) != 0);\n}\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "34": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) >= 0);\n        }\n        return dst;\n    }",
          "35": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nsrc = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "36": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = dst;\n        }\n        return dst;\n    }",
          "37": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> srcPos[(dstPos + i)])) != 0);\n        }\n        return dst;\n    }",
          "38": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 > (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "39": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift[(dstPos + i)])) != 0);\n        }\n        return dst;\n    }",
          "40": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> dst[(dstPos + i)])) != 0);\n        }\n        return dst;\n    }",
          "41": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) <= 0);\n        }\n        return dst;\n    }",
          "42": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nif((1 | (src >> shift))){\n}\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "43": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn (1 | (src >> shift));}\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "44": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn true;            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "45": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(shift[(dstPos + i)] + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "46": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn false;        }\n        return dst;\n    }",
          "47": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> i)) != 0);\n        }\n        return dst;\n    }",
          "48": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn (1 | (src >> shift));        }\n        return dst;\n    }",
          "49": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (srcPos[(dstPos + i)] >> shift)) != 0);\n        }\n        return dst;\n    }",
          "50": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nif((src >> shift)){\n}\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "51": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (shift[(dstPos + i)] >> shift)) != 0);\n        }\n        return dst;\n    }",
          "52": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + shift)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "53": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(srcPos[(dstPos + i)] + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "54": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(i + i)] = ((1 | (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "55": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn;\n            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "56": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (i >> shift)) != 0);\n        }\n        return dst;\n    }",
          "57": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (dst[(dstPos + i)] >> shift)) != 0);\n        }\n        return dst;\n    }",
          "58": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src == shift)) != 0);\n        }\n        return dst;\n    }",
          "59": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nreturn dst;        }\n        return dst;\n    }",
          "60": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> dst)) != 0);\n        }\n        return dst;\n    }",
          "61": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) == 0);\n        }\n        return dst;\n    }",
          "62": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src || shift)) != 0);\n        }\n        return dst;\n    }",
          "63": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src && shift)) != 0);\n        }\n        return dst;\n    }",
          "64": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\nfor(int i = 0;(i < nBools);i++) {            dst[dstPos + i] = ((1 | (src >> shift)) != 0);        }\n        return dst;\n    }",
          "65": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) || 0);\n        }\n        return dst;\n    }",
          "66": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src >> shift)) && 0);\n        }\n        return dst;\n    }",
          "67": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src & shift)) != 0);\n        }\n        return dst;\n    }",
          "68": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src | shift)) != 0);\n        }\n        return dst;\n    }",
          "69": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 | (src != shift)) != 0);\n        }\n        return dst;\n    }",
          "70": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 == (src >> shift)) != 0);\n        }\n        return dst;\n    }",
          "71": "    public static boolean[] byteToBinary(final byte src, final int srcPos, final boolean[] dst, final int dstPos,\n        final int nBools) {\n        if (0 == nBools) {\n            return dst;\n        }\n        if (nBools - 1 + srcPos >= 8) {\n            throw new IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBools; i++ ) {\n            shift = i * 1 + srcPos;\ndst[(dstPos + i)] = ((1 >= (src >> shift)) != 0);\n        }\n        return dst;\n    }"
}