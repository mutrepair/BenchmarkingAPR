{
          "0": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table);\n\t    }",
          "1": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.globalCrc);\n\t    }",
          "2": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nreturn;\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "3": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 2) ^<> CRC.crc32Table[temp]);\n\t    }",
          "4": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "5": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table.crc32Table);\n\t    }",
          "6": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> globalCrc.crc32Table);\n\t    }",
          "7": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> getFinalCRC().crc32Table);\n\t    }",
          "8": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> getGlobalCRC().crc32Table);\n\t    }",
          "9": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 0) ^<> CRC.crc32Table[temp]);\n\t    }",
          "10": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table.crc32Table[temp]);\n\t    }",
          "11": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> globalCrc.crc32Table[temp]);\n\t    }",
          "12": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> getFinalCRC().crc32Table[temp]);\n\t    }",
          "13": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> getGlobalCRC().crc32Table[temp]);\n\t    }",
          "14": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 1) ^<> CRC.crc32Table[temp]);\n\t    }",
          "15": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.globalCrc[temp]);\n\t    }",
          "16": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table[temp]);\n\t    }",
          "17": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> globalCrc[temp]);\n\t    }",
          "18": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc - 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "19": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table);\n\t    }",
          "20": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> globalCrc);\n\t    }",
          "21": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc += ((globalCrc >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "22": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) & CRC.crc32Table[temp]);\n\t    }",
          "23": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\ntemp = (256 + temp);\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "24": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[crc32Table]);\n\t    }",
          "25": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[globalCrc]);\n\t    }",
          "26": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) % CRC.crc32Table[temp]);\n\t    }",
          "27": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((temp >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "28": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) / CRC.crc32Table[temp]);\n\t    }",
          "29": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) - CRC.crc32Table[temp]);\n\t    }",
          "30": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) | CRC.crc32Table[temp]);\n\t    }",
          "31": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nbreak;\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "32": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = (globalCrc >>> 8);\n\t    }",
          "33": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) * CRC.crc32Table[temp]);\n\t    }",
          "34": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[((globalCrc >>> 8) ^<> CRC.crc32Table[temp])]);\n\t    }",
          "35": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> -CRC.crc32Table);\n\t    }",
          "36": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) >> CRC.crc32Table[temp]);\n\t    }",
          "37": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> -CRC.globalCrc);\n\t    }",
          "38": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 256) ^<> CRC.crc32Table[temp]);\n\t    }",
          "39": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) + CRC.crc32Table[temp]);\n\t    }",
          "40": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) << CRC.crc32Table[temp]);\n\t    }",
          "41": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "42": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) >>> CRC.crc32Table[temp]);\n\t    }",
          "43": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc + 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "44": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\ninitialiseCRC();\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "45": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc % 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "46": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((temp[temp] >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "47": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nif((globalCrc >>> 8)){\n}\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "48": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((CRC.crc32Table >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "49": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((CRC.globalCrc >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "50": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> -crc32Table);\n\t    }",
          "51": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc[temp] >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "52": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc / 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "53": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((inCh >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "54": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((crc32Table[temp] >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "55": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[0]);\n\t    }",
          "56": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nif((temp < 0)){\n}\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "57": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((crc32Table >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "58": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\ncontinue;\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "59": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = temp;\n\t    }",
          "60": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc -= ((globalCrc >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "61": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[(globalCrc >>> 8)]);\n\t    }",
          "62": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[1]);\n\t    }",
          "63": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table[CRC.crc32Table]);\n\t    }",
          "64": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> crc32Table[CRC.globalCrc]);\n\t    }",
          "65": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc * 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "66": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> inCh[temp]);\n\t    }",
          "67": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((inCh[temp] >>> 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "68": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nif((256 + temp)){\n}\n\t        globalCrc = (globalCrc >>> 8) ^ CRC.crc32Table[temp];\t    }",
          "69": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc <= 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "70": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> inCh);\n\t    }",
          "71": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >= 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "72": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 24) ^<> CRC.crc32Table[temp]);\n\t    }",
          "73": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\n\t    }",
          "74": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc & 8) ^<> CRC.crc32Table[temp]);\n\t    }",
          "75": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\ntemp = (256 + temp);\n\t    }",
          "76": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[(CRC.crc32Table * CRC.crc32Table)]);\n\t    }",
          "77": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((globalCrc >>> 8) ^<> CRC.crc32Table[(CRC.crc32Table * CRC.globalCrc)]);\n\t    }",
          "78": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((((globalCrc >>> 8) ^<> CRC.crc32Table[temp]) * CRC.crc32Table) + CRC.crc32Table[temp]);\n\t    }",
          "79": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((((globalCrc >>> 8) ^<> CRC.crc32Table[temp]) * CRC.crc32Table) * CRC.crc32Table[temp]);\n\t    }",
          "80": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((((globalCrc >>> 8) ^<> CRC.crc32Table[temp]) * CRC.crc32Table) / CRC.crc32Table[temp]);\n\t    }",
          "81": "\t    void updateCRC(int inCh) {\n\t        int temp = (globalCrc >> 24) ^ inCh;\n\t        if (temp < 0) {\n\t            temp = 256 + temp;\n\t        }\nglobalCrc = ((((globalCrc >>> 8) ^<> CRC.crc32Table[temp]) * CRC.crc32Table) | CRC.crc32Table[temp]);\n\t    }"
}