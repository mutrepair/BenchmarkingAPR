{
          "0": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = 0;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "1": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "2": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "3": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nrhs = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "4": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ni = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "5": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = rhs;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "6": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "7": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = ((lhs.length < rhs.length))?-1:+1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "8": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = 2;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "9": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = 1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "10": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nappend(lhs[i], rhs[i]);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "11": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = null;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "12": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nlhs = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "13": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -2;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "14": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\n = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "15": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = true;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "16": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = false;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "17": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = +1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "18": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "19": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -1;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "20": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = ((lhs.length < rhs.length))?-1:+1;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "21": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = lhs;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "22": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((i < lhs.length)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "23": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison += -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "24": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nappend(lhs[i], rhs[i]);\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "25": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison += comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "26": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((lhs == null)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "27": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison[i];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "28": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = ;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "29": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison[i] = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "30": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\n-comparison = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "31": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((comparison == 0)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "32": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison -= -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "33": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison += 0;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "34": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison++;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "35": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif(comparison){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "36": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison &= -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "37": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = 0;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "38": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -rhs;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "39": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((lhs.length != rhs.length)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "40": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison &= comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "41": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison -= comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "42": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nreturn;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "43": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((lhs.length < rhs.length)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "44": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif(((i < lhs.length) && (comparison == 0))){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "45": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = lhs.comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "46": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = -0;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "47": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((comparison != null)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "48": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nlhs.comparison = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "49": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = rhs;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "50": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison++ = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "51": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison += rhs;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "52": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\n~comparison = -1;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "53": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nbreak;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "54": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((rhs == null)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "55": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = ~comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "56": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((comparison != 0)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "57": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison[0];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "58": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nif((lhs == rhs)){\n            comparison = -1;            return this;\n}\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "59": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = this.comparison;\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "60": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nreturn this;            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "61": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nreturn;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "62": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\nreturn this;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "63": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison[1];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "64": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison[2];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "65": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = comparison[comparison];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "66": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncontinue;\n            comparison = -1;            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "67": "    public CompareToBuilder append(final short[] lhs, final short[] rhs) {\n        if (comparison != 0) {\n            return this;\n        }\n        if (lhs == rhs) {\n            return this;\n        }\n        if (lhs == null) {\n            comparison = -1;\n            return this;\n        }\n        if (rhs == null) {\ncomparison = rhs[0];\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            comparison = (lhs.length < rhs.length) ? -1 : +1;\n            return this;\n        }\n        for (int i = 0; i < lhs.length && comparison == 0; i++) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }"
}