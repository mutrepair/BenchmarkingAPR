{
          "0": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 2) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "1": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 2)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "2": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 2)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "3": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 2) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "4": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 2)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "5": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 2));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "6": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >>> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "7": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 2)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "8": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 0)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "9": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() & 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "10": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "11": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() >>> 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "12": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 0) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "13": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 0)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "14": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() >> 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "15": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 0) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "16": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() - 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "17": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() | 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "18": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() & 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "19": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 0));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "20": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 0)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "21": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() % 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "22": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() << 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "23": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 0)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "24": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() <= 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "25": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 1) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "26": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() < 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "27": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() > 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "28": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() - 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "29": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 1)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "30": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() % 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "31": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 1900) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "32": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 1)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "33": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 1980) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "34": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() <= 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "35": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() > 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "36": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 1900)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "37": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() < 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "38": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() | 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "39": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 1900)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "40": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "41": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 1980)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "42": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = ((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "43": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "44": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = ((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "45": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 1980)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "46": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1900) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "47": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> -1) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "48": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((year - 1980) >>> 25) | (month << 21));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "49": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << -1)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "50": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << -1)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "51": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 11) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "52": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 1)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "53": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (time.getSeconds() >> 1);\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "54": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 5) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "55": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 11)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "56": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 25)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "57": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - -1) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "58": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 1900)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "59": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 1)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "60": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (time.getHours() << 11);\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "61": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 11)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "62": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (time.getMinutes() << 5);\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "63": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 5)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "64": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 1980)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "65": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 25)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "66": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 1900)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "67": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1900));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "68": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nfinal long value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "69": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 11) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "70": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 1980)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "71": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1980));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "72": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 5) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "73": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 25) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << 11)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }",
          "74": "    public static byte[] toDosTime(long t) {\n        Date time = new Date(t);\n        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants\n        //                                   here will improve the readablity\n        int year = time.getYear() + 1900;\n        if (year < 1980) {\n            return DOS_TIME_MIN;\n        }\n        int month = time.getMonth() + 1;\nlong value = (((((((year - 1980) >>> 25) | (month << 21)) | (time.getDate() << 16)) | (time.getHours() << -1)) | (time.getMinutes() << 5)) | (time.getSeconds() >> 1));\n        return ZipLong.getBytes(value);\n        // CheckStyle:MagicNumberCheck ON\n    }"
}