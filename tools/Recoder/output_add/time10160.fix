{
          "0": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "1": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year);        } else {\n            return instant;\n        }\n    }",
          "2": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(year, +year);        } else {\n            return instant;\n        }\n    }",
          "3": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.set(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "4": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, oldEra);        } else {\n            return instant;\n        }\n    }",
          "5": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant);        } else {\n            return instant;\n        }\n    }",
          "6": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.verifyValueBounds(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "7": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.add(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "8": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "9": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.debug(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "10": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(oldEra, +year);        } else {\n            return instant;\n        }\n    }",
          "11": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, -year);        } else {\n            return instant;\n        }\n    }",
          "12": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, instant);        } else {\n            return instant;\n        }\n    }",
          "13": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.e(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "14": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, );        } else {\n            return instant;\n        }\n    }",
          "15": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(-year, +year);        } else {\n            return instant;\n        }\n    }",
          "16": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, year);        } else {\n            return instant;\n        }\n    }",
          "17": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(, +year);        } else {\n            return instant;\n        }\n    }",
          "18": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, era);        } else {\n            return instant;\n        }\n    }",
          "19": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.max(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "20": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn instant;        } else {\n            return instant;\n        }\n    }",
          "21": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.put(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "22": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, );        } else {\n            return instant;\n        }\n    }",
          "23": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nif((year != null)){\n            return iChronology.setYear(instant, +year);        } else {\n            return instant;\n}\n        }\n    }",
          "24": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn setYear(instant);        } else {\n            return instant;\n        }\n    }",
          "25": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, this);        } else {\n            return instant;\n        }\n    }",
          "26": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, era);        } else {\n            return instant;\n        }\n    }",
          "27": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, false);        } else {\n            return instant;\n        }\n    }",
          "28": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, true);        } else {\n            return instant;\n        }\n    }",
          "29": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(era, +year);        } else {\n            return instant;\n        }\n    }",
          "30": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);        } else {\n            return instant;\n        }\n    }",
          "31": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, oldEra);        } else {\n            return instant;\n        }\n    }",
          "32": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(year, year);        } else {\n            return instant;\n        }\n    }",
          "33": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(year);        } else {\n            return instant;\n        }\n    }",
          "34": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear();        } else {\n            return instant;\n        }\n    }",
          "35": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, false);        } else {\n            return instant;\n        }\n    }",
          "36": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, -oldEra);        } else {\n            return instant;\n        }\n    }",
          "37": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, instant);        } else {\n            return instant;\n        }\n    }",
          "38": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.get(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "39": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, 0);        } else {\n            return instant;\n        }\n    }",
          "40": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, true);        } else {\n            return instant;\n        }\n    }",
          "41": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn instant.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "42": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, -instant);        } else {\n            return instant;\n        }\n    }",
          "43": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.i(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "44": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn year;        } else {\n            return instant;\n        }\n    }",
          "45": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, instant, year);        } else {\n            return instant;\n        }\n    }",
          "46": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn Math.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "47": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, ~year);        } else {\n            return instant;\n        }\n    }",
          "48": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, -);        } else {\n            return instant;\n        }\n    }",
          "49": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(-oldEra, +year);        } else {\n            return instant;\n        }\n    }",
          "50": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year++);        } else {\n            return instant;\n        }\n    }",
          "51": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, !year);        } else {\n            return instant;\n        }\n    }",
          "52": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(-instant, +year);        } else {\n            return instant;\n        }\n    }",
          "53": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nFieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            return iChronology.setYear(instant, +year);        } else {\n            return instant;\n}\n        }\n    }",
          "54": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn FieldUtils.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "55": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, );        } else {\n            return instant;\n        }\n    }",
          "56": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, 1);        } else {\n            return instant;\n        }\n    }",
          "57": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, true, year);        } else {\n            return instant;\n        }\n    }",
          "58": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, CE);        } else {\n            return instant;\n        }\n    }",
          "59": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, oldEra, year);        } else {\n            return instant;\n        }\n    }",
          "60": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, false, year);        } else {\n            return instant;\n        }\n    }",
          "61": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nif((year == null)){\nreturn 0;}            return iChronology.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "62": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn LOG.setYear(instant, +year);        } else {\n            return instant;\n        }\n    }",
          "63": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, year, null);        } else {\n            return instant;\n        }\n    }",
          "64": "    public long set(long instant, int era) {\n        FieldUtils.verifyValueBounds(this, era, DateTimeConstants.BCE, DateTimeConstants.CE);\n            \n        int oldEra = get(instant);\n        if (oldEra != era) {\n            int year = iChronology.getYear(instant);\nreturn iChronology.setYear(instant, );        } else {\n            return instant;\n        }\n    }"
}