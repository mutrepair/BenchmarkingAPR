{
          "0": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nbreak;\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "1": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 2));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "2": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 1));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "3": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 0));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "4": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append((((i & 1) == 0))?\"null\":\"null\");\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "5": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "6": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((i - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "7": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\");\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "8": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "9": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append((ranges[i] - (i | 1)), 16).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "10": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((i[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "11": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[(i - 1)] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "12": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(sb.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "13": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 0)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "14": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), true));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "15": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append((((i & 1) == 0))?\"null\":\"null\");\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "16": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((i[(i - 1)] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "17": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 2)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "18": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((sb - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "19": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\ncontinue;\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "20": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.getName((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "21": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append((((i & 1) == 0))?\"null\":\"null\").append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "22": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), false));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "23": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.size((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "24": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(Integer.toString((ranges[i] - (i | 1)), 16)).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "25": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), -1));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "26": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\");\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "27": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[1] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "28": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.get((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "29": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), \"null\"));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "30": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(ranges[i]).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "31": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nif(((i & 1) == 0)){\n}\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "32": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nif((i != 0)){\n}\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "33": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 16)).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "34": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((sb[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "35": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[0] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "36": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), null));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "37": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nif((((i & 1) != 0) && (ranges[i] == (ranges[(i - 1)] + 1)))){\n}\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "38": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append((ranges[i] - (i | 1)));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "39": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(\"null\");\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "40": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "41": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 16)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "42": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i[i] | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "43": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nfor(int i = 0;(i < ranges.length);++i) {      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "44": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString(( - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "45": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | -1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "46": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.e((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "47": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.ranges((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "48": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.length((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "49": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nif((i < ranges.length)){\n}\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "50": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nreturn sb.toString();      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "51": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\n.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "52": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "53": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nreturn;\n      sb.append(\"0x\").append(Integer.toString(ranges[i] - (i | 1), 16));    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "54": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(ranges.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "55": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(Integer.toString((ranges[i] - (i | 1)))).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "56": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(\"null\").append(Integer.toString((ranges[i] - (i | 1)), 16)).append(\"null\");\n    }\n    sb.append(']');\n    return sb.toString();\n  }",
          "57": "  public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append('[');\n    for (int i = 0; i < ranges.length; ++i) {\n      if ((i & 1) != 0 && ranges[i] == ranges[i - 1] + 1) { continue; }\n      if (i != 0) { sb.append((i & 1) == 0 ? ' ' : '-'); }\nsb.append(Integer.toString(ranges[i])).append(Integer.toString((ranges[i] - (i | 1)), 16));\n    }\n    sb.append(']');\n    return sb.toString();\n  }"
}