{
          "0": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), origin, +originOffset, w);    }",
          "1": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), u, +originOffset, w);    }",
          "2": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "3": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), w, +originOffset, w);    }",
          "4": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, p2D, w);    }",
          "5": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), p2D, +originOffset, w);    }",
          "6": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, p2D);    }",
          "7": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), p2D, p2D.getY(), v, +originOffset, w);    }",
          "8": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), point, +originOffset, w);    }",
          "9": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, origin);    }",
          "10": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, u);    }",
          "11": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, v);    }",
          "12": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), origin, p2D.getY(), v, +originOffset, w);    }",
          "13": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), v, p2D.getY(), v, +originOffset, w);    }",
          "14": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), w, p2D.getY(), v, +originOffset, w);    }",
          "15": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, point);    }",
          "16": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, point, w);    }",
          "17": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), point, p2D.getY(), v, +originOffset, w);    }",
          "18": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, originOffset, w);    }",
          "19": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getName(), u, p2D.getY(), v, +originOffset, w);    }",
          "20": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getName(), v, +originOffset, w);    }",
          "21": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), , +originOffset, w);    }",
          "22": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.toSpace(), u, p2D.getY(), v, +originOffset, w);    }",
          "23": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, );    }",
          "24": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), , p2D.getY(), v, +originOffset, w);    }",
          "25": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, , w);    }",
          "26": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.toSpace(), v, +originOffset, w);    }",
          "27": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.toString(), u, p2D.getY(), v, +originOffset, w);    }",
          "28": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(point.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "29": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nsetFrame();\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "30": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nrevertSelf();\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "31": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nif((p2D == null)){\nreturn null;}        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "32": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, , w);    }",
          "33": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.get(), u, p2D.getY(), v, +originOffset, w);    }",
          "34": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), , +originOffset, w);    }",
          "35": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nif((p2D != null)){\n}\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "36": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nif((p2D == null)){\n}\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "37": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, );    }",
          "38": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), , p2D.getY(), v, +originOffset, w);    }",
          "39": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.toString(), v, +originOffset, w);    }",
          "40": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D();    }",
          "41": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), !p2D, +originOffset, w);    }",
          "42": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, !p2D, w);    }",
          "43": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getY(), u, p2D.getY(), v, +originOffset, w);    }",
          "44": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, !p2D);    }",
          "45": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getX(), v, +originOffset, w);    }",
          "46": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), !p2D, p2D.getY(), v, +originOffset, w);    }",
          "47": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, w, w);    }",
          "48": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.get(), v, +originOffset, w);    }",
          "49": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector<Euclidean2D>(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "50": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), origin.v, +originOffset, w);    }",
          "51": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), u.v, +originOffset, w);    }",
          "52": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v.v, +originOffset, w);    }",
          "53": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), w.v, +originOffset, w);    }",
          "54": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getOrigin().v, +originOffset, w);    }",
          "55": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getNormal().v, +originOffset, w);    }",
          "56": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getU().v, +originOffset, w);    }",
          "57": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getV().v, +originOffset, w);    }",
          "58": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), origin.u, +originOffset, w);    }",
          "59": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), u.u, +originOffset, w);    }",
          "60": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v.u, +originOffset, w);    }",
          "61": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), w.u, +originOffset, w);    }",
          "62": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getOrigin().u, +originOffset, w);    }",
          "63": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getNormal().u, +originOffset, w);    }",
          "64": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getU().u, +originOffset, w);    }",
          "65": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getV().u, +originOffset, w);    }",
          "66": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), , +originOffset, w);    }",
          "67": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn p2D;    }",
          "68": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), -p2D, +originOffset, w);    }",
          "69": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), origin.w, +originOffset, w);    }",
          "70": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), u.w, +originOffset, w);    }",
          "71": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v.w, +originOffset, w);    }",
          "72": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), w.w, +originOffset, w);    }",
          "73": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getOrigin().w, +originOffset, w);    }",
          "74": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getNormal().w, +originOffset, w);    }",
          "75": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getU().w, +originOffset, w);    }",
          "76": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), getV().w, +originOffset, w);    }",
          "77": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\np2D++;\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "78": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, origin.v);    }",
          "79": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, u.v);    }",
          "80": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, v.v);    }",
          "81": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w.v);    }",
          "82": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getOrigin().v);    }",
          "83": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getNormal().v);    }",
          "84": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getU().v);    }",
          "85": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getV().v);    }",
          "86": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, -p2D);    }",
          "87": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), !w, +originOffset, w);    }",
          "88": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, );    }",
          "89": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, origin.u);    }",
          "90": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, u.u);    }",
          "91": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, v.u);    }",
          "92": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w.u);    }",
          "93": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getOrigin().u);    }",
          "94": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getNormal().u);    }",
          "95": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getU().u);    }",
          "96": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, getV().u);    }",
          "97": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), -p2D, p2D.getY(), v, +originOffset, w);    }",
          "98": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), , p2D.getY(), v, +originOffset, w);    }",
          "99": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.getX(), u, p2D.getY(), v, , w);    }",
          "100": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.add(), u, p2D.getY(), v, +originOffset, w);    }",
          "101": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "102": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.size(), u, p2D.getY(), v, +originOffset, w);    }",
          "103": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(p2D.debug(), u, p2D.getY(), v, +originOffset, w);    }",
          "104": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn;\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "105": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nbreak;\n        return new Vector3D(p2D.getX(), u, p2D.getY(), v, +originOffset, w);    }",
          "106": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, p2D.getX(), u, v, v, v, v);    }",
          "107": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, originOffset, u, p2D.getX(), v, v, v);    }",
          "108": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, p2D.getX(), u, u, v, v, v);    }",
          "109": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, p2D.getX(), v, v, v, v, v);    }",
          "110": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, p2D.getX(), u, v, v, v, originOffset);    }",
          "111": "    public Vector3D toSpace(final Vector<Euclidean2D> point) {\n        final Vector2D p2D = (Vector2D) point;\nreturn new Vector3D(originOffset, u, u, p2D.getX(), v, v, v);    }"
}