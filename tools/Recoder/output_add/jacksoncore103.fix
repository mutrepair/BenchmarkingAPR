{
          "0": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "1": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "2": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "3": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE[((b24 >> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "4": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "5": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar[((b24 >> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "6": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 2)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "7": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 1)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "8": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "9": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "10": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "11": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "12": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[PADDING_CHAR_NONE]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "13": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[_base64ToAsciiC]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "14": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[_paddingChar]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "15": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "16": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[1]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "17": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 0)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "18": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 6) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "19": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[0]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "20": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[2]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "21": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[((b24 >> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "22": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >>> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "23": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(((b24 >> 18) | 63));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "24": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC++);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "25": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE[(b24 & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "26": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar[(b24 & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "27": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 2) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "28": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE[((b24 >> 6) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "29": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar[((b24 >> 6) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "30": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 >> 18)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "31": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "32": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24[PADDING_CHAR_NONE]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "33": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24[_base64ToAsciiC]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "34": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24[_paddingChar]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "35": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE++);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "36": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar++);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "37": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 % 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "38": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 1) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "39": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)].append(_base64ToAsciiC[((b24 >> 18) | 63)]));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "40": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 * 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "41": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[PADDING_CHAR_NONE]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "42": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[_base64ToAsciiC]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "43": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[_paddingChar]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "44": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24[((b24 >> 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "45": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC, b24);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "46": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 12) & 0x3F)].append(_base64ToAsciiC[((b24 >> 18) | 63)]));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "47": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE._base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "48": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC._base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "49": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar._base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "50": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(getPaddingChar()._base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "51": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append((b24 >> 18));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "52": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "53": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(-_base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "54": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 * 18)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "55": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 & 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "56": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24++);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "57": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)].append(b24));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "58": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[sb]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "59": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(sb[1]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "60": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(b24[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "61": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC, ((b24 >> 18) | 63));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "62": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 0) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "63": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC--);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "64": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 12) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 18) | 63]);        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "65": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 12) & 0x3F)].append(b24));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "66": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) >>> 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "67": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 / 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "68": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 - 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "69": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 > 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "70": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC, _base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "71": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "72": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) >> 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "73": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(-PADDING_CHAR_NONE);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "74": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(-_paddingChar);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "75": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >= 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "76": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 12) & 0x3F)].append(sb));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "77": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 6) & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 18) | 63]);        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "78": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 & 0x3F)]);\n        sb.append(_base64ToAsciiC[(b24 >> 18) | 63]);        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "79": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 / 18)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "80": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(PADDING_CHAR_NONE--);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "81": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_paddingChar--);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "82": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 << 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "83": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 / 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "84": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)].append(sb));\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "85": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)], b24);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "86": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append();\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "87": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 6)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "88": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 <= 18) | 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "89": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 63)], _base64ToAsciiC);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "90": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) % 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "91": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) | 12)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "92": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nreturn;\n        sb.append(_base64ToAsciiC[(b24 >> 18) | 63]);        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "93": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 * b24)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "94": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[((b24 >> 18) & 63)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "95": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(_base64ToAsciiC * b24)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "96": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(b24 * _base64ToAsciiC)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "97": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(_base64ToAsciiC * PADDING_CHAR_NONE)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "98": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(_base64ToAsciiC * _base64ToAsciiC)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }",
          "99": "    public void encodeBase64Chunk(StringBuilder sb, int b24)\n    {\nsb.append(_base64ToAsciiC[(_base64ToAsciiC * _paddingChar)]);\n        sb.append(_base64ToAsciiC[(b24 >> 12) & 0x3F]);\n        sb.append(_base64ToAsciiC[(b24 >> 6) & 0x3F]);\n        sb.append(_base64ToAsciiC[b24 & 0x3F]);\n    }"
}