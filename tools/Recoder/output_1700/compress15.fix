{
          "0": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn null;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "1": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(false){            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "2": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn new TarArchiveInputStream(in);        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "3": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn new JarArchiveInputStream(in);        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "4": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(true){            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "5": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn new ZipArchiveInputStream(in);        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "6": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn new CpioArchiveInputStream(in);        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "7": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn new ArArchiveInputStream(in);        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "8": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(in){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "9": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn in;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "10": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn;\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "11": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(archiverName){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "12": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn false;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "13": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn \"null\";        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "14": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nbreak;\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "15": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "16": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn archiverName;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "17": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((archiverName == null)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "18": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn true;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "19": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(!in){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "20": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn ;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "21": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "22": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\ncontinue;\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "23": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "24": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || in)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "25": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "26": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "27": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(in.isEmpty()){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "28": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((\"null\" + archiverName)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "29": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(!archiverName){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "30": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in != null)){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "31": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn new TarArchiveInputStream(in);}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "32": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nsuper.createArchiveInputStream();\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "33": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || (in == null))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "34": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || (archiverName == null))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "35": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(in){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "36": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif(\"null\"){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "37": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || ((\"null\" + archiverName) + \"null\"))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "38": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nin = false;\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "39": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nin = true;\n        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "40": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || ((archiverName == null) || (in == null)))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "41": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((archiverName == null)){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "42": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in && in)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "43": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn new JarArchiveInputStream(in);}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "44": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn new ZipArchiveInputStream(in);}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "45": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || !in)){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "46": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn this;        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "47": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn in;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "48": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((archiverName != null)){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "49": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nbreak;\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "50": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == null)){\nreturn false;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "51": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || (in != null))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "52": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in != null)){\nreturn in;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "53": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in == in)){\nreturn null;}        } else if (true) {            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "54": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in && (in != null))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "55": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nif((in || (in == in))){\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "56": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\nreturn;\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }",
          "57": "    public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException {\n        if (archiverName == null || in == null) {\n            throw new IllegalArgumentException(\"Archivername must not be null.\");\n        }\n\n        if (\"ar\".equalsIgnoreCase(archiverName)) {\n            return new ArArchiveInputStream(in);\n        } else if (\"zip\".equalsIgnoreCase(archiverName)) {\n            return new ZipArchiveInputStream(in);\n        } else if (\"tar\".equalsIgnoreCase(archiverName)) {\n            return new TarArchiveInputStream(in);\ncontinue;\n            return new JarArchiveInputStream(in);\n        } else if (\"cpio\".equalsIgnoreCase(archiverName)) {\n            return new CpioArchiveInputStream(in);\n        }\n        throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");\n    }"
}