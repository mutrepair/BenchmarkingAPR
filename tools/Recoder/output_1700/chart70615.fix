{
          "0": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "1": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count > 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "2": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count <= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "3": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count < 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "4": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count == 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "5": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count != 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "6": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nfindBoundsByIteration();\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "7": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nclear();\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "8": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count >>> 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "9": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((29 * result)){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "10": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((maximumItemCount >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "11": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((result >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "12": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count > count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "13": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((allowDuplicateXValues >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "14": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(( >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "15": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count >> 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "16": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((autoSort >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "17": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nresult = ((29 * result) + item.hashCode());\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "18": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count > count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "19": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count != null)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "20": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count < (count >= 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "21": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(count){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "22": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count & 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "23": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count > 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "24": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count > 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "25": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\ncount = count;\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "26": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count == 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "27": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count < count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "28": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count && 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "29": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && getAutoSort())){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "30": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && getAllowDuplicateXValues())){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "31": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(getAutoSort()){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "32": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(getAllowDuplicateXValues()){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "33": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count >= count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "34": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count == null)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "35": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count < count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "36": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((29 * result) + item.hashCode())){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "37": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(( >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "38": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || getAutoSort())){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "39": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || getAllowDuplicateXValues())){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "40": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\ncount++;\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "41": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count == null)){\nreturn result;}        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "42": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count > (count >= 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "43": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count > 1))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "44": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count / 2))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "45": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count >= count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "46": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count - 1))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "47": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count == count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "48": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count >= 1)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "49": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count && (count >= 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "50": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count > 2))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "51": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count != 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "52": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((29 * result)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "53": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count >= 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "54": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nresult = ((29 * result) + this.maximumItemCount);\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "55": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count < 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "56": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count >= 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "57": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count < 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "58": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count <= count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "59": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nresult = ((29 * result) + (this.autoSort)?1:0);\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "60": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count > 0)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "61": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count == 0))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "62": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count == null))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "63": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) || (count <= count))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "64": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nresult = ((29 * result) + (this.allowDuplicateXValues)?1:0);\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "65": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(((count >= 0) && (count != null))){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "66": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count - 1)){\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "67": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count > 1)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "68": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nreturn result;        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "69": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nbreak;\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "70": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif(( >= 0)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "71": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count > 2)){\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n}\n    }",
          "72": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nreturn;\n        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "73": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nif((count >= 29)){            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "74": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "75": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nreturn;\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "76": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\nresult = ((29 * result) + item.hashCode());\n            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }",
          "77": "    public int hashCode() {\n        int result = super.hashCode();\n        // it is too slow to look at every data item, so let's just look at\n        // the first, middle and last items...\n        int count = getItemCount();\n((count >= 0))        if (count >= 0) {            XYDataItem item = getRawDataItem(0);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 1) {\n            XYDataItem item = getRawDataItem(count - 1);\n            result = 29 * result + item.hashCode();\n        }\n        if (count > 2) {\n            XYDataItem item = getRawDataItem(count / 2);\n            result = 29 * result + item.hashCode();\n        }\n        result = 29 * result + this.maximumItemCount;\n        result = 29 * result + (this.autoSort ? 1 : 0);\n        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);\n        return result;\n    }"
}