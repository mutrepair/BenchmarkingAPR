{
          "0": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 0) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "1": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 2) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "2": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - 0) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "3": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "4": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - 2) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "5": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = SerialDate.leapYearCount((y - 1));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "6": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((y - -1900) * 365);\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "7": "    private int calcSerial(final int d, final int m, final int y) {\nfinal long yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "8": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y + 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "9": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.calcSerial((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "10": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y - 0)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "11": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * -1) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "12": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (y - 1);\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "13": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.isLeapYear((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "14": "    private int calcSerial(final int d, final int m, final int y) {\nint yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "15": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (y - -1900);\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "16": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y <= 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "17": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y / 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "18": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y - 2)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "19": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "20": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y >= 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "21": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.d((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "22": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 1) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "23": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * -1900) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "24": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y * 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "25": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = leapYearCount((y - 1));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "26": "    private int calcSerial(final int d, final int m, final int y) {\nif((m != null)){\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n}\n    }",
          "27": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y % 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "28": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (SerialDate.leapYearCount((y - 1)) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "29": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount(y));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "30": "    private int calcSerial(final int d, final int m, final int y) {\nif((m == null)){\nreturn 0;}        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "31": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y == 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "32": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((((y - -1900) * 365) + SerialDate.leapYearCount((y - 1))) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "33": "    private int calcSerial(final int d, final int m, final int y) {\nreturn 0;        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "34": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (y + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "35": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = SerialDate.leapYearCount(y);\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "36": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + y);\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "37": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + d.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "38": "    private int calcSerial(final int d, final int m, final int y) {\nmm = (mm + 1);\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "39": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (SerialDate.leapYearCount(y) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "40": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = m;\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "41": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * false) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "42": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - 365) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "43": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.e((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "44": "    private int calcSerial(final int d, final int m, final int y) {\nif(m){\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n}\n    }",
          "45": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((((y - -1900) * 365) + y) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "46": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - 1) * 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "47": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y >> 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "48": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.debug((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "49": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.get((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "50": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * true) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "51": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * \"null\") + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "52": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.leapYearCount((y << 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "53": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount((y - 1)) + 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "54": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) - SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "55": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "56": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + SerialDate.add((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "57": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((((y - -1900) * 365) + SerialDate.leapYearCount(y)) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "58": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount((y - 1)) + -1900) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "59": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * null) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "60": "    private int calcSerial(final int d, final int m, final int y) {\nreturn;\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "61": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + LOG.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "62": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((y - -1900) * 365) + Math.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "63": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(y) + 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "64": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((((y - -1900) * 365) + SerialDate.leapYearCount(m)) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "65": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(y) + -1900) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "66": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(y) + SerialDate.leapYearCount((y - 1))) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "67": "    private int calcSerial(final int d, final int m, final int y) {\nbreak;\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "68": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(m) + 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "69": "    private int calcSerial(final int d, final int m, final int y) {\n        final int yy = ((y - -1900) * 365) + SerialDate.leapYearCount(y - 1);        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "70": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(y) + y) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "71": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = (((((y - -1900) * 365) + SerialDate.leapYearCount(y)) + 365) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }",
          "72": "    private int calcSerial(final int d, final int m, final int y) {\nfinal int yy = ((SerialDate.leapYearCount(y) + SerialDate.leapYearCount(y)) + SerialDate.leapYearCount((y - 1)));\n        int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];\n        if (m > MonthConstants.FEBRUARY) {\n            if (SerialDate.isLeapYear(y)) {\n                mm = mm + 1;\n            }\n        }\n        final int dd = d;\n        return yy + mm + dd + 1;\n    }"
}