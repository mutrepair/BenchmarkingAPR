{
          "0": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "1": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off >= (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "2": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off <= (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "3": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((off < 1) || (len < 0))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "4": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((off > (b.length - len))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "5": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off < (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "6": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off == (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "7": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len >= 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "8": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (len > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "9": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((b.length - len)){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "10": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (entryEOF > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "11": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (entry > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "12": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((off < 1)){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "13": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off != (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "14": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len <= 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "15": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((len < 0)){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "16": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off && (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "17": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len > 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "18": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off || (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "19": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (len - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "20": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length >= len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "21": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) && (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "22": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((((off < 1) || (len < 0)) || (off > (b.length - len))) || (off > (b.length - len)))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "23": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (off - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "24": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len == 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "25": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((off < 1) || (off > (b.length - len)))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "26": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length <= len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "27": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length - len)))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "28": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (entry - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "29": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (entryEOF - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "30": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length > len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "31": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((off < 1) || (b.length - len))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "32": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "33": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len != 0)) || (off > (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "34": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length == len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "35": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length < len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "36": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length - entry)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "37": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length - entryEOF)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "38": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((this.entry == null) || this.entryEOF)){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "39": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length - off)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "40": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off > (b.length != len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "41": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off & (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "42": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif((((off < 1) || (len < 0)) || (off instanceof (b.length - len)))){            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "43": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((((off < 1) || (len < 0)) || (off > (b.length - len))) || (len < len))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "44": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();        if (off < 1 || len < 0 || off > b.length - len) {            throw new IndexOutOfBoundsException();\n\nensureOpen();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "45": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();\nif(((((off < 1) || (len < 0)) || (off > (b.length - len))) || (len > len))){\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "46": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();        if (off < 1 || len < 0 || off > b.length - len) {            throw new IndexOutOfBoundsException();\n\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "47": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();        if (off < 1 || len < 0 || off > b.length - len) {            throw new IndexOutOfBoundsException();\n\nbreak;\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }",
          "48": "    public int read(final byte[] b, final int off, final int len)\n            throws IOException {\n        ensureOpen();        if (off < 1 || len < 0 || off > b.length - len) {            throw new IndexOutOfBoundsException();\n\nreturn;\n        } else if (len == 0) {\n            return 0;\n        }\n\n        if (this.entry == null || this.entryEOF) {\n            return -1;\n        }\n        if (this.entryBytesRead == this.entry.getSize()) {\n            if ((this.entry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) {\n                pad(this.entry.getSize(), 4);\n            } else if ((this.entry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) {\n                pad(this.entry.getSize(), 2);\n            }\n            this.entryEOF = true;\n            if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n                if (this.crc != this.entry.getChksum()) {\n                    throw new IOException(\"CRC Error\");\n                }\n            }\n            return -1;\n        }\n        int tmplength = (int) Math.min(len, this.entry.getSize()\n                - this.entryBytesRead);\n        if (tmplength < 0) {\n            return -1;\n        }\n\n        int tmpread = this.in.read(b, off, tmplength);\n        if ((this.entry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) {\n            for (int pos = 0; pos < tmpread; pos++) {\n                this.crc += b[pos] & 0xFF;\n            }\n        }\n        this.entryBytesRead += tmpread;\n\n        return tmpread;\n    }"
}