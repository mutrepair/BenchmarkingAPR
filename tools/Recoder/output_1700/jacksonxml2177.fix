{
          "0": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((cls == char[])){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "1": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "2": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls != char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "3": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == boolean))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "4": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls >= char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "5": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(cls){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "6": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls > char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "7": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls <= char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "8": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == int))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "9": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == long))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "10": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(type.getRawClass()){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "11": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls < char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "12": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "13": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false && (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "14": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(!cls){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "15": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((cls || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "16": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (false || (cls == char[])))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "17": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (type == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "18": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((cls || (false || (cls == char[])))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "19": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || ( == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "20": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(isAssignableFrom(cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "21": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "22": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((cls == null)){\nreturn false;}            if (false || cls == char[].class) {                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "23": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls && char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "24": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || type)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "25": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == null))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "26": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == null))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "27": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "28": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (char[])cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "29": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (char[])cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "30": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((-1 || (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "31": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == cls))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "32": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((\"null\" || (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "33": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) && (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "34": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls != null))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "35": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "36": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(cls.isEmpty()){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "37": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls != null))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "38": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls || char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "39": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(MapisAssignableFrom(cls)){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "40": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(type){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "41": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false && (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "42": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(cls.isIndexedType()){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "43": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == type))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "44": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(cls()){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "45": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls != char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "46": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((cls || (cls == char[])) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "47": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((cls != null)){\nreturn false;}            if (false || cls == char[].class) {                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "48": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((1 || (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "49": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == cls))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "50": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(char[]){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "51": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(type.isContainerType()){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "52": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == ))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "53": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == Class))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "54": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == Map))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "55": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == type))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "56": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((cls == null) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "57": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == 0))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "58": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == null)) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "59": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) && (cls == null))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "60": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || ( == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "61": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls == char[])) || (cls == ))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "62": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif(((false || (cls != null)) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "63": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls == Map))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "64": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((((cls == null) || (cls == char[])) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "65": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls & char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "66": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((true || (cls == char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "67": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((((false || (cls == char[])) || (cls == null)) || (cls == char[]))){\n                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "68": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nreturn false;            if (false || cls == char[].class) {                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    ",
          "69": "    public static boolean isIndexedType(JavaType type)\n    {\n        if (type.isContainerType()) {\n            Class<?> cls = type.getRawClass();\n            // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n            // (actually, ditto for char[]; thought to be a String)\nif((false || (cls + char[]))){                return false;\n            }\n            // issue#5: also, should not add wrapping for Maps\n            if (Map.class.isAssignableFrom(cls)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }    "
}