{
          "0": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (i - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "1": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - 0);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "2": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "3": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (transitions - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "4": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant <= -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "5": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - 2);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "6": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (prev - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "7": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant >= -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "8": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (i - 1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "9": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn instant;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "10": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ( - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "11": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn prev;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "12": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "13": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn 0;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "14": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (iTailZone - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "15": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ( - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "16": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn transitions;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "17": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "18": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant == -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "19": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (prev - 1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "20": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\ni = ~i;\n                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "21": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (iTransitions - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "22": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant > -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "23": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant >> -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "24": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant[(i - 1)] - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "25": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - 1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "26": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn i;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "27": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (-instant - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "28": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - transitions);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "29": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant < -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "30": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - false);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "31": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "32": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - -2);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "33": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (prev > Long.MIN_VALUE);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "34": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (-transitions - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "35": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (i > 0);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "36": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - -1) - instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "37": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant > Long.MIN_VALUE);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "38": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "39": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "40": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - );                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "41": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - null);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "42": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (-i - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "43": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant / -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "44": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant != -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "45": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - -1) + instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "46": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (i >= 0);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "47": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (iTailZone != null);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "48": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - (instant - -1));                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "49": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "50": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant++ - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "51": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ( - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "52": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant / instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "53": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant / i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "54": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\ncontinue;\n                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "55": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + transitions);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "56": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn 1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "57": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + (instant - -1));                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "58": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\ni = 0;\n                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "59": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (i++ - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "60": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant * -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "61": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant * i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "62": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant * instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "63": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant + 0);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "64": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - true);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "65": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant-- - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "66": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "67": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn prev;                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "68": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn instant;                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "69": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn;\n                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "70": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\n                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "71": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (instant - \"null\");                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "72": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn (prev - 1);                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "73": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - i) - -1);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "74": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn;\n                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "75": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - i) - i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "76": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nbreak;\n                    return instant - -1;                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "77": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - instant) - i);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }",
          "78": "        public long previousTransition(long instant) {\n            long[] transitions = iTransitions;\n            int i = Arrays.binarySearch(transitions, instant);\n            if (i >= 0) {\n                if (instant > Long.MIN_VALUE) {\nreturn ((instant - i) - instant);                }\n                return instant;\n            }\n            i = ~i;\n            if (i < transitions.length) {\n                if (i > 0) {\n                    long prev = transitions[i - 1];\n                    if (prev > Long.MIN_VALUE) {\n                        return prev - 1;\n                    }\n                }\n                return instant;\n            }\n            if (iTailZone != null) {\n                long prev = iTailZone.previousTransition(instant);\n                if (prev < instant) {\n                    return prev;\n                }\n            }\n            long prev = transitions[i - 1];\n            if (prev > Long.MIN_VALUE) {\n                return prev - 1;\n            }\n            return instant;\n        }"
}