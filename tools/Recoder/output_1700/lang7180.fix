{
          "0": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 0xff) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "1": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "2": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) <= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "3": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) > 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "4": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 2) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "5": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) < 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "6": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((nBytes - 1) * 8) + srcPos)){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "7": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((dstPos - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "8": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((dst - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "9": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) == 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "10": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 0xff) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "11": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((nBytes - 1) * 8)){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "12": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + dstPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "13": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 1) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "14": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 0) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "15": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + dst) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "16": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nreturn dst;                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "17": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((shift - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "18": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes >= 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "19": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) != 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "20": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nshift = ((i * 8) + srcPos);\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n}\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "21": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) - 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "22": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * \"null\") + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "23": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 0) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "24": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nbreak;\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "25": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes <= 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "26": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 2) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "27": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\ndst[(dstPos + i)] = (byte)(0xff & (src >> shift));\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n}\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "28": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nreturn 0;                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "29": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * -1) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "30": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((srcPos - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "31": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + shift) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "32": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) >= srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "33": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) <= srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "34": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((nBytes - 1)){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "35": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + nBytes) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "36": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) || 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "37": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((( - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "38": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((src - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "39": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nreturn 0xff;                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "40": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) + 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "41": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) >= 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "42": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes > 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "43": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + srcPos) & 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "44": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((i - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "45": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) > srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "46": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) <= 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "47": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nreturn;\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "48": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 8) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "49": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((( - 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "50": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * false) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "51": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + src) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "52": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nreturn 1;                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "53": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) < srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "54": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes < 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "55": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\ncontinue;\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "56": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) + ) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "57": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }        if ((nBytes - 1) * 8 + srcPos >= 0) {            throw new IllegalArgumentException(\n\nfor(int i = 0;(i < nBytes);i++) {                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "58": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes == 1) * 8) + srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "59": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((((nBytes - 1) * 8) - srcPos) >= 0)){            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "60": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) && (dstPos == dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "61": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) && (dst == dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "62": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == dstPos) && ((((nBytes - 1) * 8) + srcPos) >= 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "63": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) && (dstPos > dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "64": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) || (dstPos > dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "65": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) && (dst == dst))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "66": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((((nBytes - 1) * 8) + srcPos) >= 0) && (dstPos == dst))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "67": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "68": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "69": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst != 0) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "70": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dstPos == 0) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "71": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (dst == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "72": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (dstPos != 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "73": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) || (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "74": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dstPos == 0) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "75": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst != 0) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "76": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((srcPos == 0) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "77": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (nBytes != 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "78": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) || (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "79": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst > 0) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "80": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst != 0) && (dst == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "81": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (dstPos == dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "82": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == dstPos) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "83": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == dstPos) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "84": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && (nBytes == dstPos))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "85": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif(((dst == 0) && ((dstPos - dstPos) == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "86": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((dst == 0) && (dstPos == 0)) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "87": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((dst == 0) && (dstPos == 0)) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "88": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((dst == 0) && (dst == 0)) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "89": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((dst == 0) && (dstPos == dstPos)) && (dstPos == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }",
          "90": "    public static byte[] shortToByteArray(final short src, final int srcPos, final byte[] dst, final int dstPos,\n        final int nBytes) {\n        if (0 == nBytes) {\n            return dst;\n        }\nif((((dst == 0) && (dstPos == dstPos)) && (nBytes == 0))){\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+srcPos is greather or equal to than 16\");\n        }\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + srcPos;\n            dst[dstPos + i] = (byte)(0xff & (src >> shift));\n        }\n        return dst;\n    }"
}