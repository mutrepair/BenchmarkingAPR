{
          "0": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((localName == null)){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "1": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((localName.length() == 1)){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "2": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "3": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) && (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "4": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (ac.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "5": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((ns == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "6": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() != 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "7": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (root.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "8": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (ns.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "9": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (intr.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "10": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == 2))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "11": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(localName.length()){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "12": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() >= 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "13": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "14": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (beanDesc.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "15": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (rootType.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "16": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((ac == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "17": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nlocalName = root.getSimpleName();\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "18": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((intr == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "19": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName > null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "20": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "21": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName <= null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "22": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((localName.length() == 1)){\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "23": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (config.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "24": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (StaxUtil.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "25": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nns = findNamespace(intr, ac);\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "26": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.getNamespace() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "27": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((localName == null)){\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "28": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.getSimpleName() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "29": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nns = root.getNamespace();\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "30": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nlocalName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "31": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nreturn new QName(\"null\", localName);        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "32": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.getName() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "33": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nns = \"null\";\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "34": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nreturn null;        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "35": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nreturn;\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "36": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() < 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "37": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName == null))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "38": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName == null))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "39": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || ((localName == null) || (localName.length() == 1)))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "40": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((beanDesc == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "41": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) && (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "42": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((ns == null) || (ns.length() == 0))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "43": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nbreak;\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "44": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(localName){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "45": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((root != null)){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "46": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) && (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "47": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((ns == null)){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "48": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == -1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "49": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((rootType == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "50": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((root == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "51": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nreturn new QName(ns, localName);        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "52": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((ns == null) || (ns.length() == 0))){\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "53": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.getClassInfo() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "54": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((config == null) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "55": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == false))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "56": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == 0) || (localName.length() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "57": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((root != null)){\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "58": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName != null))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "59": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((ns == null)){\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "60": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.getAnnotationIntrospector() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "61": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == 0))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "62": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName != null))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "63": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "64": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == null))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "65": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName != 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "66": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\ncontinue;\n        if (localName == null || localName.length() == 1) {            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "67": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.toString() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "68": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName._findRootName() == 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "69": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() && 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "70": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "71": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() == \"null\"))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "72": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif(((localName == null) || (localName.length() || 1))){            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "73": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName.length() == localName))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "74": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName != 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "75": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName == null)) || (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "76": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName != null)) || (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "77": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName == 1)) || (localName.length() == 1))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "78": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\nif((((localName == null) || (localName.length() == 1)) || (localName == intr))){\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n        if (ns == null || ns.length() == 0) {\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }"
}