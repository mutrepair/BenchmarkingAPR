{
          "0": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "1": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nlong currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "2": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = 2;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "3": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nboolean currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "4": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "5": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = -1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "6": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "7": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nboolean currentMatch = ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "8": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = false;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "9": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = \"null\";\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "10": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = true;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "11": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "12": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint[] currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "13": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = -2;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "14": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nlong[] currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "15": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nObject currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "16": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nfinal int currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "17": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "18": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nex currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "19": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nboolean currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "20": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = null;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "21": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = e;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "22": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "23": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nString currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "24": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint  = ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "25": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = types;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "26": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint ambiguous = false;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "27": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint ambiguous = ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "28": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = method;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "29": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nList currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "30": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint0 currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "31": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = -0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "32": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nboolean ;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "33": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nreturn method;        int currentMatch = 1;        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "34": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nint currentMatch = 1;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "35": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nboolean ambiguous = false;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "36": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nreturn;\n        int currentMatch = 1;        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "37": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nmethod = targetClass.getMethod(name, types);\n        int currentMatch = 1;        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "38": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\nbreak;\n        int currentMatch = 1;        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "39": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = 0; i < count; i++) {\n            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\ncontinue;\n        int currentMatch = 1;        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }"
}