{
          "0": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset <= len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "1": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset >= len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "2": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "3": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset - len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "4": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (len % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "5": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset > len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "6": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset < len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "7": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset + len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "8": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), cbuf, 1);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "9": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), len, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "10": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset == len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "11": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext._writeStringSegment(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "12": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % offset), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "13": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % cbuf), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "14": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (cbuf % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "15": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % left), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "16": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset / len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "17": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nreturn;\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "18": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset != len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "19": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nif((len != null)){\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n}\n        }\n    }",
          "20": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % _outputMaxContiguous), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "21": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset * len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "22": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (left % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "23": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), offset, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "24": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nwriteStartArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "25": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nwriteEndArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "26": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nwriteStartObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "27": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nwriteEndObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "28": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nwriteNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "29": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nflush();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "30": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nclose();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "31": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n_releaseBuffers();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "32": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n_writeNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "33": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n_flushBuffer();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "34": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "35": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % _outputTail), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "36": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "37": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % ), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "38": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nleft.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "39": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "40": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % _outputEnd), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "41": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), left, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "42": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), , 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "43": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "44": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), cbuf, 2);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "45": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(_outputMaxContiguous, left);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "46": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, cbuf, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "47": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nif((_outputTail + len)){\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n}\n        }\n    }",
          "48": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (_outputMaxContiguous % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "49": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nif((offset % len)){\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n}\n        }\n    }",
          "50": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nif((cbuf != null)){\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n}\n        }\n    }",
          "51": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.writeStartArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "52": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.writeEndArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "53": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.writeStartObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "54": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.writeEndObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "55": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.writeNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "56": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.flush();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "57": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.close();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "58": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n._releaseBuffers();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "59": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n._writeNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "60": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n._flushBuffer();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "61": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "62": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (_outputTail % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "63": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % _charBuffer), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "64": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext._flushBuffer(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "65": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "66": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (_outputEnd % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "67": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, offset, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "68": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\n_writeStringSegment(cbuf, 0, len);\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "69": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.writeStartArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "70": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.writeEndArray();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "71": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.writeStartObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "72": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.writeEndObject();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "73": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.writeNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "74": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.flush();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "75": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath.close();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "76": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath._releaseBuffers();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "77": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath._writeNull();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "78": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nMath._flushBuffer();\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "79": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nleft -= len;\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "80": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\noffset.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "81": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\noffset += len;\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "82": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), _outputMaxContiguous, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "83": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext._writeStringSegments(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "84": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), text, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "85": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, (offset % len), cbuf);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "86": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, offset, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "87": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(text, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "88": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(_charBuffer, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "89": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), _charBuffer, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "90": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, (offset % len), _outputTail, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "91": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nlen.getChars(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "92": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, (offset % len), cbuf);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "93": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, cbuf, (offset % len), cbuf);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "94": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.min(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "95": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.debug(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "96": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, offset, (offset % len), cbuf);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "97": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, (offset % len), 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "98": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, cbuf, (offset % len), offset);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "99": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, (offset % len), offset);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "100": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, offset, (offset % len), cbuf);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "101": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, (offset % len), (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "102": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, cbuf, (offset % len), 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "103": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, offset, (offset % len), offset);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "104": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, cbuf, cbuf, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "105": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(cbuf, cbuf, cbuf, (offset % len));\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "106": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\nif(((_outputTail + len) > _outputEnd)){\n            text.getChars(offset, offset % len, cbuf, 0);            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n}\n        }\n    }",
          "107": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.getChars(offset, offset, (offset % len), offset);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "108": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.add(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }",
          "109": "    private final void _writeStringSegments(String text)\n        throws IOException, JsonGenerationException\n    {\n        int left = text.length();\n        int offset = 0;\n        final char[] cbuf = _charBuffer;\n\n        while (left > 0) {\n            int len = Math.min(_outputMaxContiguous, left);\ntext.e(offset, (offset % len), cbuf, 0);\n            if ((_outputTail + len) > _outputEnd) { // caller must ensure enough space\n                _flushBuffer();\n            }\n            _writeStringSegment(cbuf, 0, len);\n            offset += len;\n            left -= len;\n        }\n    }"
}