{
          "0": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false);\n    this.version = version;\n  }",
          "1": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument();\n    this.version = version;\n  }",
          "2": "  public VersionExclusionStrategy(double version) {\ncheckArgument(true);\n    this.version = version;\n  }",
          "3": "  public VersionExclusionStrategy(double version) {\ncheckArgument();\n    this.version = version;\n  }",
          "4": "  public VersionExclusionStrategy(double version) {\nPreconditions.VersionExclusionStrategy(true);\n    this.version = version;\n  }",
          "5": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(version);\n    this.version = version;\n  }",
          "6": "  public VersionExclusionStrategy(double version) {\nsuper.VersionExclusionStrategy();\n    Preconditions.checkArgument(true);    this.version = version;\n  }",
          "7": "  public VersionExclusionStrategy(double version) {\nif((version != null)){\n    Preconditions.checkArgument(true);    this.version = version;\n}\n  }",
          "8": "  public VersionExclusionStrategy(double version) {\nPreconditions.max(true);\n    this.version = version;\n  }",
          "9": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false, false);\n    this.version = version;\n  }",
          "10": "  public VersionExclusionStrategy(double version) {\nthis.checkArgument(true);\n    this.version = version;\n  }",
          "11": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true, false);\n    this.version = version;\n  }",
          "12": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(version, false);\n    this.version = version;\n  }",
          "13": "  public VersionExclusionStrategy(double version) {\nsuper.VersionExclusionStrategy(true);\n    Preconditions.checkArgument(true);    this.version = version;\n  }",
          "14": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(version, true);\n    this.version = version;\n  }",
          "15": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false, true);\n    this.version = version;\n  }",
          "16": "  public VersionExclusionStrategy(double version) {\nPreconditions.e(true);\n    this.version = version;\n  }",
          "17": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument();\n    this.version = version;\n  }",
          "18": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true, true);\n    this.version = version;\n  }",
          "19": "  public VersionExclusionStrategy(double version) {\nsuper.checkArgument();\n    this.version = version;\n  }",
          "20": "  public VersionExclusionStrategy(double version) {\nPreconditions.debug(true);\n    this.version = version;\n  }",
          "21": "  public VersionExclusionStrategy(double version) {\nif((version == null)){\n    Preconditions.checkArgument(true);    this.version = version;\n}\n  }",
          "22": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(this);\n    this.version = version;\n  }",
          "23": "  public VersionExclusionStrategy(double version) {\nPreconditions.add(true);\n    this.version = version;\n  }",
          "24": "  public VersionExclusionStrategy(double version) {\nif(Preconditions.checkArgument(true)){\n    this.version = version;\n  }",
          "25": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false, version);\n    this.version = version;\n  }",
          "26": "  public VersionExclusionStrategy(double version) {\nif(version){\n    Preconditions.checkArgument(true);    this.version = version;\n}\n  }",
          "27": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true);\n    this.version = version;\n  }",
          "28": "  public VersionExclusionStrategy(double version) {\nreturn;\n    Preconditions.checkArgument(true);    this.version = version;\n  }",
          "29": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true, version);\n    this.version = version;\n  }",
          "30": "  public VersionExclusionStrategy(double version) {\nreturn;\n    this.version = version;\n  }",
          "31": "  public VersionExclusionStrategy(double version) {\nversion.checkArgument(true);\n    this.version = version;\n  }",
          "32": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false, 0);\n    this.version = version;\n  }",
          "33": "  public VersionExclusionStrategy(double version) {\nthis.version = Preconditions.checkArgument(true);\n    this.version = version;\n  }",
          "34": "  public VersionExclusionStrategy(double version) {\nif((this.version != null)){\n    Preconditions.checkArgument(true);    this.version = version;\n}\n  }",
          "35": "  public VersionExclusionStrategy(double version) {\nif((version > 0)){\n    Preconditions.checkArgument(true);    this.version = version;\n}\n  }",
          "36": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true, 0);\n    this.version = version;\n  }",
          "37": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(null);\n    this.version = version;\n  }",
          "38": "  public VersionExclusionStrategy(double version) {\ncheckArgument(version);\n    this.version = version;\n  }",
          "39": "  public VersionExclusionStrategy(double version) {\nPreconditions.version(true);\n    this.version = version;\n  }",
          "40": "  public VersionExclusionStrategy(double version) {\nsuper.VersionExclusionStrategy(version);\n    Preconditions.checkArgument(true);    this.version = version;\n  }",
          "41": "  public VersionExclusionStrategy(double version) {\nPreconditions.put(true);\n    this.version = version;\n  }",
          "42": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(false, 1);\n    this.version = version;\n  }",
          "43": "  public VersionExclusionStrategy(double version) {\nPreconditions.checkArgument(true, 1);\n    this.version = version;\n  }",
          "44": "  public VersionExclusionStrategy(double version) {\nreturn Preconditions.checkArgument(true);    this.version = version;\n  }"
}