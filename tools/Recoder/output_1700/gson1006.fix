{
          "0": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nbeginArray();\n    advance();\n  }",
          "1": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nendArray();\n    advance();\n  }",
          "2": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nbeginObject();\n    advance();\n  }",
          "3": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nendObject();\n    advance();\n  }",
          "4": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nconsumeNonExecutePrefix();\n    advance();\n  }",
          "5": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nnextNull();\n    advance();\n  }",
          "6": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nclose();\n    advance();\n  }",
          "7": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nskipValue();\n    advance();\n  }",
          "8": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\ncheckLenient();\n    advance();\n  }",
          "9": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nskipToEndOfLine();\n    advance();\n  }",
          "10": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\ndecodeLiteral();\n    advance();\n  }",
          "11": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(false){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "12": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nreturn;\n    advance();\n  }",
          "13": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(isLenient()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "14": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(hasNext()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "15": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(nextBoolean()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "16": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!isLenient()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "17": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!hasNext()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "18": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!nextBoolean()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "19": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nsuper.expect();\n    advance();\n  }",
          "20": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(((\"null\" + expected) + \"null\")){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "21": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(isLenient()){\nreturn;\n}    advance();\n  }",
          "22": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(hasNext()){\nreturn;\n}    advance();\n  }",
          "23": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(nextBoolean()){\nreturn;\n}    advance();\n  }",
          "24": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif((\"null\" + expected)){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "25": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(!isLenient()){\nreturn;\n}    advance();\n  }",
          "26": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(!hasNext()){\nreturn;\n}    advance();\n  }",
          "27": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(!nextBoolean()){\nreturn;\n}    advance();\n  }",
          "28": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(advance){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "29": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected == null)){\nreturn;\n}    advance();\n  }",
          "30": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected != null)){\n    advance();\n}\n  }",
          "31": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(expected){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "32": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!expected){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "33": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.beginArray();\n    advance();\n  }",
          "34": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.endArray();\n    advance();\n  }",
          "35": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.beginObject();\n    advance();\n  }",
          "36": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.endObject();\n    advance();\n  }",
          "37": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.consumeNonExecutePrefix();\n    advance();\n  }",
          "38": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.nextNull();\n    advance();\n  }",
          "39": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.close();\n    advance();\n  }",
          "40": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.skipValue();\n    advance();\n  }",
          "41": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.checkLenient();\n    advance();\n  }",
          "42": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.skipToEndOfLine();\n    advance();\n  }",
          "43": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nthis.decodeLiteral();\n    advance();\n  }",
          "44": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected == null)){\n    advance();\n}\n  }",
          "45": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(quickPeek){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "46": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(peek()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "47": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected != null)){\nreturn;\n}    advance();\n  }",
          "48": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(peek){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "49": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nbreak;\n    advance();\n  }",
          "50": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!advance){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "51": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\n    advance();\n  }",
          "52": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(-false){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "53": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif((expected == null)){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "54": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif((expected != null)){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "55": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nexpected = false;\n    advance();\n  }",
          "56": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(!peek()){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "57": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\ncontinue;\n    advance();\n  }",
          "58": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nreturn false;    advance();\n  }",
          "59": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(expected){\n    advance();\n}\n  }",
          "60": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nexpected = true;\n    advance();\n  }",
          "61": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((\"null\" + expected)){\n    advance();\n}\n  }",
          "62": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(((\"null\" + expected) + \"null\")){\n    advance();\n}\n  }",
          "63": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(( == null)){\nreturn;\n}    advance();\n  }",
          "64": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(-true){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "65": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif((expected == false)){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "66": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(null){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "67": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif(( == null)){\n    advance();\n}\n  }",
          "68": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((isLenient() == null)){\nreturn;\n}    advance();\n  }",
          "69": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((hasNext() == null)){\nreturn;\n}    advance();\n  }",
          "70": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((nextBoolean() == null)){\nreturn;\n}    advance();\n  }",
          "71": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nquickPeek();\n    advance();\n  }",
          "72": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nadvance();\n    advance();\n  }",
          "73": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected == null)){\nisLenient();\n}    advance();\n  }",
          "74": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected == null)){\nhasNext();\n}    advance();\n  }",
          "75": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected == null)){\nnextBoolean();\n}    advance();\n  }",
          "76": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected != null)){\nisLenient();\n}    advance();\n  }",
          "77": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected != null)){\nhasNext();\n}    advance();\n  }",
          "78": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nif((expected != null)){\nnextBoolean();\n}    advance();\n  }",
          "79": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nreturn;\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "80": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "81": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();    if (true) {      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n\nreturn;\nreturn;\n    advance();\n  }",
          "82": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(((((\"null\" + expected) + \"null\") + peek()) && (expected == null))){\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "83": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(1){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "84": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nbreak;\n      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }",
          "85": "  private void expect(JsonToken expected) throws IOException {\n    quickPeek();\nif(true){      throw new IllegalStateException(\"Expected \" + expected + \" but was \" + peek());\n    }\n    advance();\n  }"
}