{
          "0": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (((java2DValue - min) / (max % min)) * (axisMax - axisMin));\n        }\n        return calculateValue(log);\n    }",
          "1": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmin = area.getX();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "2": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmax = area.getMaxX();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "3": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmax = area.getY();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "4": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmin = area.getMaxY();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "5": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn calculateValue(log);            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "6": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = ((java2DValue - min) / (max % min));\n        }\n        return calculateValue(log);\n    }",
          "7": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\n        }\n        return calculateValue(log);\n    }",
          "8": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMax - (((java2DValue - min) / (max - min)) * (axisMax - axisMin)));\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "9": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmin = area.getX();\n        }\n        return calculateValue(log);\n    }",
          "10": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nbreak;\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "11": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmax = area.getMaxX();\n        }\n        return calculateValue(log);\n    }",
          "12": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nconfigure();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "13": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nautoAdjustRange();\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "14": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmax = area.getY();\n        }\n        return calculateValue(log);\n    }",
          "15": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmin = area.getMaxY();\n        }\n        return calculateValue(log);\n    }",
          "16": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (max % min);\n        }\n        return calculateValue(log);\n    }",
          "17": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = min;\n        }\n        return calculateValue(log);\n    }",
          "18": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (java2DValue - min);\n        }\n        return calculateValue(log);\n    }",
          "19": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog += (axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "20": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn min;        }\n        return calculateValue(log);\n    }",
          "21": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (min + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "22": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMax - (((java2DValue - min) / (max - min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "23": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (max + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "24": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMax - axisMin);\n        }\n        return calculateValue(log);\n    }",
          "25": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (min - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "26": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn calculateValue(log);        }\n        return calculateValue(log);\n    }",
          "27": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (max - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "28": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "29": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((min - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "30": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % max)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "31": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((max - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "32": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (min % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "33": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn;\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "34": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = ((axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin))) + min);\n        }\n        return calculateValue(log);\n    }",
          "35": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn log;        }\n        return calculateValue(log);\n    }",
          "36": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = axisMax;\n        }\n        return calculateValue(log);\n    }",
          "37": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMax + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "38": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmax = (axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "39": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nif((min != null)){\n            log = axisMin + (java2DValue - min) / (max % min)\n}\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "40": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = ((axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin))) + axisMax);\n        }\n        return calculateValue(log);\n    }",
          "41": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nmin = (axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "42": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "43": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % axisMax)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "44": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((axisMax - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "45": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nif(isInverted()){\n            log = axisMin + (java2DValue - min) / (max % min)\n}\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "46": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn max;        }\n        return calculateValue(log);\n    }",
          "47": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog += (((java2DValue - min) / (max % min)) * (axisMax - axisMin));\n        }\n        return calculateValue(log);\n    }",
          "48": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nreturn axisMax;        }\n        return calculateValue(log);\n    }",
          "49": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (axisMax % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "50": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (axisMin - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "51": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (log + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "52": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nif((((java2DValue - min) / (max - min)) * (axisMax - axisMin))){\n            log = axisMin + (java2DValue - min) / (max % min)\n}\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "53": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nif(((java2DValue - min) / (max - min))){\n            log = axisMin + (java2DValue - min) / (max % min)\n}\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "54": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\ncontinue;\n            log = axisMin + (java2DValue - min) / (max % min)\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "55": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % min)) * (log - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "56": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % axisMin)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "57": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((axisMin - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "58": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (max % log)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "59": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (axisMin % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "60": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((log - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "61": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (axisMin + (((java2DValue - min) / (log % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "62": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (area + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }",
          "63": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nif(RectangleEdge.isLeftOrRight(edge)){\n            log = axisMin + (java2DValue - min) / (max % min)\n}\n                    * (axisMax - axisMin);        }\n        return calculateValue(log);\n    }",
          "64": "    public double java2DToValue(double java2DValue, Rectangle2D area,\n            RectangleEdge edge) {\n\n        Range range = getRange();\n        double axisMin = calculateLog(range.getLowerBound());\n        double axisMax = calculateLog(range.getUpperBound());\n\n        double min = 0.0;\n        double max = 0.0;\n        if (RectangleEdge.isTopOrBottom(edge)) {\n            min = area.getX();\n            max = area.getMaxX();\n        }\n        else if (RectangleEdge.isLeftOrRight(edge)) {\n            min = area.getMaxY();\n            max = area.getY();\n        }\n        double log = 0.0;\n        if (isInverted()) {\n            log = axisMax - (java2DValue - min) / (max - min)\n                    * (axisMax - axisMin);\n        }\n        else {\nlog = (range + (((java2DValue - min) / (max % min)) * (axisMax - axisMin)));\n        }\n        return calculateValue(log);\n    }"
}