{
          "0": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col >= nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "1": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col <= nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "2": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((line == nextLine)){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "3": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((col < nextCol)){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "4": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line >= nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "5": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col > nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "6": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line <= nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "7": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "8": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line > nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "9": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col == nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "10": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (nextCol < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "11": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (nextLine < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "12": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "13": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (UNMAPPED < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "14": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastSourceFileIndex < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "15": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (id < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "16": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (sourceFile < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "17": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastLine < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "18": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastId < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "19": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (parent < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "20": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line < nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "21": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((nextCol == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "22": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nreturn;\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "23": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (m < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "24": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((col == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "25": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) || (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "26": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((nextLine == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "27": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (startPosition < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "28": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "29": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextCol) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "30": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "31": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < nextLine))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "32": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < col))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "33": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == col) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "34": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col != nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "35": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line != nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "36": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((parent == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "37": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((UNMAPPED == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "38": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((lastSourceFileIndex == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "39": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((id == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "40": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((sourceFile == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "41": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((lastLine == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "42": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((lastId == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "43": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < line))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "44": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == line) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "45": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == parent) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "46": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < parent))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "47": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col - nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "48": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nreset();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "49": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nappendLineMappings();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "50": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nopenLine();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "51": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nPreconditions.reset();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "52": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nPreconditions.appendLineMappings();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "53": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nPreconditions.openLine();\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "54": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((m == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "55": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((v == nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "56": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line - nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "57": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == m) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "58": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < m))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "59": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == v) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "60": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col < v))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "61": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line < nextLine) || (col <= nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "62": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nvisit(v, parent, nextLine, nextCol);\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "63": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col >> nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "64": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nPreconditions.checkState(((line < nextLine) || (col <= nextCol)));\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "65": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (UNMAPPED.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "66": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastSourceFileIndex.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "67": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (id.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "68": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (sourceFile.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "69": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastLine.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "70": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastId.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "71": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (line.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "72": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col.col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "73": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (prepMappings().col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "74": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (UNMAPPED.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "75": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastSourceFileIndex.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "76": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (id.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "77": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (sourceFile.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "78": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastLine.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "79": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (lastId.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "80": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (line.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "81": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col.line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "82": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (prepMappings().line < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "83": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nvisit(v, parent, nextLine, nextCol);\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "84": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col + nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "85": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line >> nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "86": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line == nextLine) && (col >>> nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "87": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line + nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "88": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((line >>> nextLine) && (col < nextCol))){        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "89": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nbreak;\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "90": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (col < nextCol)) && (col == nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "91": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (nextCol == col)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "92": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (nextCol == 0)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "93": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (col == nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "94": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (nextCol == line)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "95": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif((((line == nextLine) && (line == nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "96": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\ncontinue;\n      if ((line == nextLine && col < nextCol)) {        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "97": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((((line == nextLine) && (col == nextLine)) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "98": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((((line == nextLine) && (col == nextCol)) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "99": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((((line == nextLine) && (line == nextLine)) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "100": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((((line == nextLine) && (nextCol == parent)) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }",
          "101": "    private void maybeVisitParent(MappingVisitor v, Mapping parent, Mapping m)\n        throws IOException {\n      int nextLine = getAdjustedLine(m.startPosition);\n      int nextCol = getAdjustedCol(m.startPosition);\n      // If the previous value is null, no mapping exists.\n      Preconditions.checkState(line < nextLine || col <= nextCol);\nif(((((line == nextLine) && (col == col)) && (col < nextCol)) && (col < nextCol))){\n        visit(v, parent, nextLine, nextCol);\n      }\n    }"
}