{
          "0": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) >= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "1": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) == \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "2": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "3": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) > \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "4": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") || (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "5": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) != \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "6": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) >= \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "7": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((str.charAt(i) > \"null\")){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "8": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((str.charAt(i) <= \"null\")){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "9": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) == \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "10": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) < \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "11": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) <= \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "12": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "13": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) != \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "14": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) < \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "15": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(dot) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "16": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.getDurationMillis(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "17": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(str.charAt(i)){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "18": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "19": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "20": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (i.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "21": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((i != null)){\ncontinue;\n}\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "22": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nreturn;\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "23": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(millis) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "24": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nnegative = true;\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "25": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\ndot = i;\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "26": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.length(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "27": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(i){\ncontinue;\n}\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "28": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\")) && (str.charAt(0) == \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "29": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) && \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "30": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((i > (negative)?1:0) && (str.charAt(i) == \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "31": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\")) && (dot == -1))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "32": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "33": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((str.charAt(0) == \"null\")){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "34": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt() <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "35": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((i == 0) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "36": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(original) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "37": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((i == null)){\ncontinue;\n}\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "38": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.add(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "39": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) || \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "40": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((str.charAt(i) <= \"null\")){\ncontinue;\n}\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "41": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) - \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "42": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((str.charAt(i) > \"null\")){\ncontinue;\n}\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "43": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.charAt(i) & \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "44": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.get(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "45": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((i == null)){\ncontinue;\n}            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "46": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (str.getName(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "47": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nbreak;\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "48": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "49": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (LOG.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "50": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) > \"null\") && (millis.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "51": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nfor(int i = 0;(i < str.length());i++) {            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "52": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((str.charAt(i) && \"null\") && (str.charAt(i) <= \"null\"))){                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "53": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\ncontinue;\n            if (str.charAt(i) > '0' && str.charAt(i) <= '9') {                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "54": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((str.charAt(i) > \"null\") && (i != null)) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "55": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((i != null) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "56": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif((((i != null) && ((str.charAt(i) > \"null\") && (str.charAt(i) <= \"null\"))) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "57": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((((i != null) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }",
          "58": "    public long getDurationMillis(Object object) {\n        // parse here because duration could be bigger than the int supported\n        // by the period parser\n        String original = (String) object;\n        String str = original;\n        int len = str.length();\n        if (len >= 4 &&\n            (str.charAt(0) == 'P' || str.charAt(0) == 'p') &&\n            (str.charAt(1) == 'T' || str.charAt(1) == 't') &&\n            (str.charAt(len - 1) == 'S' || str.charAt(len - 1) == 's')) {\n            // ok\n        } else {\n            throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n        }\n        str = str.substring(2, len - 1);\n        int dot = -1;\n        boolean negative = false;\n        for (int i = 0; i < str.length(); i++) {\nif(((((i != null) && (i != null)) && (str.charAt(i) <= \"null\")) && (str.charAt(i) <= \"null\"))){\n                // ok\n            } else if (i == 0 && str.charAt(0) == '-') {\n            \t// ok\n            \tnegative = true;\n            } else if (i > (negative ? 1 : 0) && str.charAt(i) == '.' && dot == -1) {\n                // ok\n                dot = i;\n            } else {\n                throw new IllegalArgumentException(\"Invalid format: \\\"\" + original + '\"');\n            }\n        }\n        long millis = 0, seconds = 0;\n        int firstDigit = negative ? 1 : 0;\n        if (dot > 0) {\n            seconds = Long.parseLong(str.substring(firstDigit, dot));\n            str = str.substring(dot + 1);\n            if (str.length() != 3) {\n                str = (str + \"000\").substring(0, 3);\n            }\n            millis = Integer.parseInt(str);\n        } else if (negative) {\n        \tseconds = Long.parseLong(str.substring(firstDigit, str.length()));\n        } else {\n            seconds = Long.parseLong(str);\n        }\n        if (negative) {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(-seconds, 1000), -millis);\n        } else {\n            return FieldUtils.safeAdd(FieldUtils.safeMultiply(seconds, 1000), millis);\n        }\n    }"
}