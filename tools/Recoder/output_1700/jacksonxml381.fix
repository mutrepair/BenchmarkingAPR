{
          "0": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name != null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "1": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name == null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "2": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (name != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "3": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name != null)){\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n}\n    }",
          "4": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (namesToWrap != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "5": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nclose();\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "6": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\n_handleEOF();\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "7": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\n_releaseBuffers();\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "8": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (name == null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "9": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(enabledByDefault()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "10": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(requiresCustomCodec()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "11": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(isClosed()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "12": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(isExpectedStartArrayToken()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "13": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(hasTextCharacters()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "14": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (_namesToWrap != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "15": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name == null)){\nreturn;\n}        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "16": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(( != null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "17": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (namesToWrap == null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "18": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((_namesToWrap != null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "19": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(name.isEmpty()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "20": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(name){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "21": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name >= null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "22": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && name.isEmpty())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "23": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!name){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "24": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && enabledByDefault())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "25": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && requiresCustomCodec())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "26": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && isClosed())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "27": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && isExpectedStartArrayToken())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "28": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && hasTextCharacters())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "29": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (_namesToWrap == null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "30": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name == null)){\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n}\n    }",
          "31": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((namesToWrap != null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "32": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !name.isEmpty())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "33": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !enabledByDefault())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "34": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !requiresCustomCodec())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "35": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !isClosed())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "36": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !isExpectedStartArrayToken())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "37": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !hasTextCharacters())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "38": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name > null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "39": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name != \"null\")){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "40": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name != null)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "41": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && ( != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "42": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && _xmlTokens.isEmpty())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "43": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nreturn;\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "44": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!enabledByDefault()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "45": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!requiresCustomCodec()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "46": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!isClosed()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "47": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!isExpectedStartArrayToken()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "48": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!hasTextCharacters()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "49": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name != null)){\nreturn;\n}        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "50": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (name != namesToWrap))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "51": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) || (name != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "52": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (name == namesToWrap))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "53": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && !_xmlTokens.isEmpty())){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "54": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\n_namesToWrap = name;\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "55": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\n_namesToWrap = null;\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "56": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((_namesToWrap != null)){\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n}\n    }",
          "57": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && ( == null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "58": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) || (name == null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "59": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) || (namesToWrap != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "60": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nname = name;\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "61": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name && null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "62": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif((name <= null)){            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "63": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && ( != null))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "64": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(!name.isEmpty()){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "65": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(enabledByDefault(namesToWrap)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "66": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(requiresCustomCodec(namesToWrap)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "67": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(isClosed(namesToWrap)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "68": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(isExpectedStartArrayToken(namesToWrap)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "69": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(hasTextCharacters(namesToWrap)){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "70": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(((name != null) && (namesToWrap != namesToWrap))){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "71": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\n_parsingContext.debug(namesToWrap);\n        if (name != null) {            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }",
          "72": "    public void addVirtualWrapping(Set<String> namesToWrap)\n    {\n        /* 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n         *   problems with Lists-in-Lists properties\n         */\n        String name = _xmlTokens.getLocalName();\nif(){\n            _xmlTokens.repeatStartElement();\n        }\n        _namesToWrap = namesToWrap;\n        _parsingContext.setNamesToWrap(namesToWrap);\n    }"
}