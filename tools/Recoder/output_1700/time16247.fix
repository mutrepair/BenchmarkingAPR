{
          "0": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((minute || second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "1": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && hour)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "2": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((hour && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "3": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "4": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((hour && minute) && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "5": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && strictISO)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "6": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(!hour){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "7": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((strictISO && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "8": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((hour && !second) && !milli)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "9": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((hour || minute) || second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "10": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "11": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((second && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "12": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour || second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "13": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((hour && !second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "14": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((hour && minute)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "15": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && milli)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "16": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(second){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "17": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(!strictISO){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "18": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(!second){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "19": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((datePresent && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "20": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && !hour)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "21": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && -hour)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "22": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && !strictISO)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "23": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((!hour && second) && milli)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "24": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((-hour && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "25": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(datePresent){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "26": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!strictISO && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "27": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbld.appendHourOfDay(2);\n            if (!hour && (second)) {                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "28": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && -strictISO)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "29": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbld.appendLiteral(\"null\");\n            if (!hour && (second)) {                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "30": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((!hour && second) && ((hour && !second) && !milli))){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "31": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((hour && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "32": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "33": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((-strictISO && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "34": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && !second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "35": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!second && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "36": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nreturn;\n            if (!hour && (second)) {                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "37": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && -second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "38": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(bld.appendLiteral(\"null\")){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "39": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(hour){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "40": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((((hour && minute) && second) || ((hour && !second) && !milli))){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "41": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((-second && second)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "42": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((strictISO && reducedPrec)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "43": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((!hour && !milli)){                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "44": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif((((hour || minute) || second) || milli)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "45": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(strictISO){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "46": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbreak;\n            if (!hour && (second)) {                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "47": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbld.appendLiteral(\"null\");\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "48": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbld.appendHourOfDay(2);\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "49": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\ncontinue;\n            if (!hour && (second)) {                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "50": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((hour && hour) && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "51": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((hour && second) && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "52": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nbreak;\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }",
          "53": "    private static void time(\n        DateTimeFormatterBuilder bld,\n        Collection<DateTimeFieldType> fields,\n        boolean extended,\n        boolean strictISO,\n        boolean reducedPrec,\n        boolean datePresent) {\n        \n        boolean hour = fields.remove(DateTimeFieldType.hourOfDay());\n        boolean minute = fields.remove(DateTimeFieldType.minuteOfHour());\n        boolean second = fields.remove(DateTimeFieldType.secondOfMinute());\n        boolean milli = fields.remove(DateTimeFieldType.millisOfSecond());\n        if (!hour && !minute && !second && !milli) {\n            return;\n        }\n        if (hour || minute || second || milli) {\n            if (strictISO && reducedPrec) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Date was reduced precision: \" + fields);\n            }\n            if (datePresent) {\n                bld.appendLiteral('T');\n            }\n        }\n        if (hour && minute && second || (hour && !second && !milli)) {\n            // OK - HMSm/HMS/HM/H - valid in combination with date\n        } else {\n            if (strictISO && datePresent) {\n                throw new IllegalArgumentException(\"No valid ISO8601 format for fields because Time was truncated: \" + fields);\n            }\nif(((second && second) && second)){\n                // OK - MSm/MS/M/Sm/S - valid ISO formats\n            } else {\n                if (strictISO) {\n                    throw new IllegalArgumentException(\"No valid ISO8601 format for fields: \" + fields);\n                }\n            }\n        }\n        if (hour) {\n            bld.appendHourOfDay(2);\n        } else if (minute || second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && hour && minute) {\n            bld.appendLiteral(':');\n        }\n        if (minute) {\n            bld.appendMinuteOfHour(2);\n        } else if (second || milli) {\n            bld.appendLiteral('-');\n        }\n        if (extended && minute && second) {\n            bld.appendLiteral(':');\n        }\n        if (second) {\n            bld.appendSecondOfMinute(2);\n        } else if (milli) {\n            bld.appendLiteral('-');\n        }\n        if (milli) {\n            bld.appendLiteral('.');\n            bld.appendMillisOfSecond(3);\n        }\n    }"
}