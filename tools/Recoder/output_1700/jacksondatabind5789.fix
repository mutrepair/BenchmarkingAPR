{
          "0": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "1": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(true){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "2": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(false){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "3": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nbreak;\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "4": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nreturn;\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "5": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\n_handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators, factory, isCreator);\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "6": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ncreators.setDefaultCreator(factory);\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "7": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId != 0)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "8": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(-true){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "9": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param != 0)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "10": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId != 0)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "11": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(\"null\"){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "12": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ncontinue;\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "13": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param != 0)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "14": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId != null)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "15": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ninjectId = false;\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "16": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId == 0)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "17": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ninjectId = true;\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "18": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId != null)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "19": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param != null)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "20": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nbreak;\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "21": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId == null)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "22": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(pn.getSimpleName()){\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "23": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((nonAnnotatedParam != 0)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "24": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param == 0)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "25": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(null){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "26": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param != null)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "27": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId != 1)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "28": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((nonAnnotatedParam != 0)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "29": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId == 0)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "30": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((param == null)){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "31": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((factory != 0)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "32": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ninjectId = null;\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "33": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(isCreator){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "34": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif((injectId == null)){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "35": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(0){                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "36": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\ncreators.setDefaultCreator(factory);\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "37": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\n_handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators, factory, isCreator);\n                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "38": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(((injectId != 0) && (param != 0))){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "39": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(((injectId != 0) && (param == 0))){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "40": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(((injectId != 0) && (param != 0))){\n                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n}\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "41": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(((param != 0) && (param != 0))){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }",
          "42": "    protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators)\n        throws JsonMappingException\n    {\n        final DeserializationConfig config = ctxt.getConfig();\n        for (AnnotatedMethod factory : beanDesc.getFactoryMethods()) {\n            boolean isCreator = intr.hasCreatorAnnotation(factory);\n            int argCount = factory.getParameterCount();\n            // zero-arg methods must be annotated; if so, are \"default creators\" [JACKSON-850]\n            if (argCount == 0) {\n                if (isCreator) {\n                    creators.setDefaultCreator(factory);\n                }\n                continue;\n            }\n            // some single-arg factory methods (String, number) are auto-detected\n            if (argCount == 1) {\n                AnnotatedParameter param = factory.getParameter(0);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n\nif(((param != 0) && (param == 0))){\ncontinue;\n}                if (false) { // not property based                    _handleSingleArgumentFactory(config, beanDesc, vchecker, intr, creators,\n                            factory, isCreator);\n                    // otherwise just ignored\n                    continue;\n                }\n                // fall through if there's name\n            } else {\n                // more than 2 args, must be @JsonCreator\n                if (!intr.hasCreatorAnnotation(factory)) {\n                    continue;\n                }\n            }\n            // 1 or more args; all params must have name annotations\n            AnnotatedParameter nonAnnotatedParam = null;            \n            CreatorProperty[] properties = new CreatorProperty[argCount];\n            int namedCount = 0;\n            int injectCount = 0;            \n            for (int i = 0; i < argCount; ++i) {\n                AnnotatedParameter param = factory.getParameter(i);\n                PropertyName pn = (param == null) ? null : intr.findNameForDeserialization(param);\n                String name = (pn == null) ? null : pn.getSimpleName();\n                Object injectId = intr.findInjectableValueId(param);\n                if (name != null && name.length() > 0) {\n                    ++namedCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (injectId != null) {\n                    ++injectCount;\n                    properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);\n                } else if (nonAnnotatedParam == null) {\n                    nonAnnotatedParam = param;\n                }\n            }\n\n            // Ok: if named or injectable, we have more work to do\n            if (isCreator || namedCount > 0 || injectCount > 0) {\n                // simple case; everything covered:\n                if ((namedCount + injectCount) == argCount) {\n                    creators.addPropertyCreator(factory, properties);\n                } else if ((namedCount == 0) && ((injectCount + 1) == argCount)) {\n                    // [712] secondary: all but one injectable, one un-annotated (un-named)\n                    creators.addDelegatingCreator(factory, properties);\n                } else { // otherwise, epic fail\n                    throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                            +\" of factory method \"+factory+\" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator\");\n                }\n            }\n        }\n    }"
}