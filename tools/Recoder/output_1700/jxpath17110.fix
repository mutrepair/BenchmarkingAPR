{
          "0": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType > Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "1": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "2": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType >= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "3": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) && (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "4": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType < Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "5": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((nodeType <= Node.CDATA_SECTION_NODE)){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "6": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((nodeType == Node.TEXT_NODE)){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "7": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType >= Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "8": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType <= Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "9": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType > Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "10": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType || Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "11": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((text == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "12": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType == Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "13": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType < Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "14": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType && Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "15": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nreturn ((text == null))?\"null\":text.trim();            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "16": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nreturn null;            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "17": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nbuf.append(child.getNodeValue());\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "18": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType != Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "19": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType != Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "20": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nbuf.append(stringValue(child));\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "21": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nreturn buf.toString().trim();            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "22": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= TEXT_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "23": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "24": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == text) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "25": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "26": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "27": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= ))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "28": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nremove();\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "29": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == ) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "30": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((((nodeType == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE)) || (nodeType <= Node.CDATA_SECTION_NODE))){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "31": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((( == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "32": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= nodeType))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "33": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == CDATA_SECTION_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "34": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= ))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "35": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= Node.TEXT_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "36": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= text))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "37": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == ) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "38": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((nodeType == Node.TEXT_NODE)){\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n}\n    }",
          "39": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nbreak;\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "40": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType & Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "41": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((nodeType <= Node.CDATA_SECTION_NODE)){\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n}\n    }",
          "42": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == nodeType) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "43": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.CDATA_SECTION_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "44": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((( == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "45": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nreturn text;            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "46": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType | Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "47": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType <= Node.PROCESSING_INSTRUCTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "48": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((list == Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "49": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) || (nodeType == Node.TEXT_NODE))){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "50": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) != (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "51": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nreturn;\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "52": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType - Node.TEXT_NODE) || (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "53": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif(((nodeType == Node.TEXT_NODE) == (nodeType <= Node.CDATA_SECTION_NODE))){            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "54": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\ncontinue;\n            nodeType == Node.TEXT_NODE\n                || nodeType <= Node.CDATA_SECTION_NODE) {            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }",
          "55": "    private String stringValue(Node node) {\n        int nodeType = node.getNodeType();\n        if (nodeType == Node.COMMENT_NODE) {\n            String text = ((Comment) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (\nif((((nodeType == Node.TEXT_NODE) || (nodeType == Node.TEXT_NODE)) || (nodeType <= Node.CDATA_SECTION_NODE))){\n            String text = node.getNodeValue();\n            return text == null ? \"\" : text.trim();\n        }\n        else if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n            String text = ((ProcessingInstruction) node).getData();\n            return text == null ? \"\" : text.trim();\n        }\n        else {\n            NodeList list = node.getChildNodes();\n            StringBuffer buf = new StringBuffer(16);\n            for (int i = 0; i < list.getLength(); i++) {\n                Node child = list.item(i);\n                if (child.getNodeType() == Node.TEXT_NODE) {\n                    buf.append(child.getNodeValue());\n                }\n                else {\n                    buf.append(stringValue(child));\n                }\n            }\n            return buf.toString().trim();\n        }\n    }"
}