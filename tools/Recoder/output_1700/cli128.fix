{
          "0": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt);    }",
          "1": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn longOpts.containsKey(opt);    }",
          "2": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn optionGroups.containsKey(opt);    }",
          "3": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.hasOption(opt);    }",
          "4": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.add(opt);    }",
          "5": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn containsKey(opt);    }",
          "6": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.e(opt);    }",
          "7": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn ((opt != null) && shortOpts.containsKey(opt));    }",
          "8": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn (shortOpts.containsKey(opt) && shortOpts.containsKey(opt));    }",
          "9": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.debug(opt);    }",
          "10": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn false;    }",
          "11": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn opt;    }",
          "12": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.stripLeadingHyphens(opt);    }",
          "13": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.max(opt);    }",
          "14": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn (shortOpts.containsKey(opt) || shortOpts.containsKey(opt));    }",
          "15": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt, false);    }",
          "16": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn ((opt == null) && shortOpts.containsKey(opt));    }",
          "17": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn true;    }",
          "18": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt, true);    }",
          "19": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn false;        return shortOpts.containsKey(opt);    }",
          "20": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.opt(opt);    }",
          "21": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn (opt != null);    }",
          "22": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.get(opt);    }",
          "23": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn ((opt != null) || shortOpts.containsKey(opt));    }",
          "24": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn ((opt == null) || shortOpts.containsKey(opt));    }",
          "25": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.put(opt);    }",
          "26": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nif((opt != null)){\n}\n        return shortOpts.containsKey(opt);    }",
          "27": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt, opt);    }",
          "28": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey();    }",
          "29": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt, null);    }",
          "30": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey();    }",
          "31": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn containsKey();    }",
          "32": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn true;        return shortOpts.containsKey(opt);    }",
          "33": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn (opt && shortOpts.containsKey(opt));    }",
          "34": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey();    }",
          "35": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nopt = Util.stripLeadingHyphens(opt);\n        return shortOpts.containsKey(opt);    }",
          "36": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(opt).containsKey(opt);    }",
          "37": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nif((opt == null)){\nreturn false;}        return shortOpts.containsKey(opt);    }",
          "38": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn opt.containsKey(opt);    }",
          "39": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn Math.containsKey(opt);    }",
          "40": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn Util.containsKey(opt);    }",
          "41": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn;\n        return shortOpts.containsKey(opt);    }",
          "42": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nif((opt == null)){\nreturn true;}        return shortOpts.containsKey(opt);    }",
          "43": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn LOG.containsKey(opt);    }",
          "44": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nbreak;\n        return shortOpts.containsKey(opt);    }",
          "45": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey();    }",
          "46": "    public boolean hasOption(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n\nreturn shortOpts.containsKey(hasOption);    }"
}