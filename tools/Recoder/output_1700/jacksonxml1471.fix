{
          "0": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != _nesting)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "1": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "2": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nreturn;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "3": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level == SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "4": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level >= SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "5": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\njg.writeRaw(SPACES, 0, level);\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "6": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\njg.writeRaw(SPACES, 0, SPACE_COUNT);\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "7": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nlevel -= SPACES.length;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "8": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nlevel += level;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "9": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\njg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "10": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level <= SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "11": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level > SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "12": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(((level != SPACE_COUNT) && (level != SPACE_COUNT))){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "13": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(SPACE_COUNT){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "14": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != SPACES)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "15": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(!SPACE_COUNT){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "16": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nbreak;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "17": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != SYSTEM_LINE_SEPARATOR)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "18": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != SPACE_COUNT)){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "19": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nif((level != null)){\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n}\n        }",
          "20": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level < SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "21": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(level){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "22": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nsuper.writeIndentation();\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "23": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\n                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "24": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(((level != SPACE_COUNT) || (level != SPACE_COUNT))){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "25": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(jg){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "26": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != level)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "27": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\ncontinue;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "28": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nlevel++;\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "29": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "30": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != length)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "31": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != )){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "32": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != jg)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "33": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level - SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "34": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nif((level != SPACE_COUNT)){\n            while (level != SPACE_COUNT) { // should never happen but...                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n}\n        }",
          "35": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile(((level != SPACE_COUNT) && (level != null))){\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "36": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level != SPACE_COUNT)){\njg.writeRaw(SPACES, 0, SPACE_COUNT);\nlevel -= SPACES.length;\n\n}                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }",
          "37": "        public void writeIndentation(JsonGenerator jg, int level) throws IOException\n        {\n            jg.writeRaw(SYSTEM_LINE_SEPARATOR);\n            level += level; // 2 spaces per level\nwhile((level + SPACE_COUNT)){                jg.writeRaw(SPACES, 0, SPACE_COUNT); \n                level -= SPACES.length;\n            }\n            jg.writeRaw(SPACES, 0, level);\n        }"
}