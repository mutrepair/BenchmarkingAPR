{
          "0": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "1": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nreturn;\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "2": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nunderestimatedYYYY = (underestimatedYYYY + 1);\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "3": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - 0);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "4": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nbreak;\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "5": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = underestimatedYYYY;\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "6": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nss1 = calcSerial(1, 1, underestimatedYYYY);\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "7": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.serial = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "8": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.day = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "9": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.month = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "10": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "11": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nunderestimatedYYYY = (underestimatedYYYY + 1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "12": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.ss1 = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "13": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - 2);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "14": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nss1 = calcSerial(1, 1, underestimatedYYYY);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "15": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = underestimatedYYYY;\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "16": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\ncontinue;\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "17": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.nonleapdays = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "18": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis. = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "19": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis. = (underestimatedYYYY - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "20": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - 1900);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "21": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nif((nonleapdays / 365)){\n}\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "22": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nreturn;\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "23": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nif((underestimatedYYYY == overestimatedYYYY)){\n}\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "24": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (nonleapdays / 365);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "25": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - -2);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "26": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nif((underestimatedYYYY - -1)){\n}\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "27": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = year;\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "28": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - 365);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "29": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - 1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "30": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nif((this.year != null)){\n}\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "31": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - null);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "32": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY >= -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "33": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY <= -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "34": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nif(( != null)){\n}\n          this.year = underestimatedYYYY - -1;      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "35": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (ss1 - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "36": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = ( - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "37": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY - false);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "38": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY == -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "39": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = this.year;\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "40": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (underestimatedYYYY + -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "41": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (this.year + -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "42": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (this.year - -1);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "43": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (this.year + underestimatedYYYY);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }",
          "44": "    public SpreadsheetDate(final int serial) {\n\n        if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {\n            this.serial = serial;\n        }\n        else {\n            throw new IllegalArgumentException(\n                \"SpreadsheetDate: Serial must be in range 2 to 2958465.\");\n        }\n\n        // the day-month-year needs to be synchronised with the serial number...\n      // get the year from the serial date\n      final int days = this.serial - SERIAL_LOWER_BOUND;\n      // overestimated because we ignored leap days\n      final int overestimatedYYYY = 1900 + (days / 365);\n      final int leaps = SerialDate.leapYearCount(overestimatedYYYY);\n      final int nonleapdays = days - leaps;\n      // underestimated because we overestimated years\n      int underestimatedYYYY = 1900 + (nonleapdays / 365);\n\n      if (underestimatedYYYY == overestimatedYYYY) {\n          this.year = underestimatedYYYY;\n      }\n      else {\n          int ss1 = calcSerial(1, 1, underestimatedYYYY);\n          while (ss1 <= this.serial) {\n              underestimatedYYYY = underestimatedYYYY + 1;\n              ss1 = calcSerial(1, 1, underestimatedYYYY);\n          }\nthis.year = (this.year - underestimatedYYYY);\n      }\n\n      final int ss2 = calcSerial(1, 1, this.year);\n\n      int[] daysToEndOfPrecedingMonth\n          = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n\n      if (isLeapYear(this.year)) {\n          daysToEndOfPrecedingMonth\n              = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;\n      }\n\n      // get the month from the serial date\n      int mm = 1;\n      int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      while (sss < this.serial) {\n          mm = mm + 1;\n          sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;\n      }\n      this.month = mm - 1;\n\n      // what's left is d(+1);\n      this.day = this.serial - ss2\n                 - daysToEndOfPrecedingMonth[this.month] + 1;\n\n    }"
}