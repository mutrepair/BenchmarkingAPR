{
          "0": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "1": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "2": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "3": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "4": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "5": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isGlobalThisType()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "6": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.getName()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "7": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!type.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "8": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "9": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(((ownerFn != null) && !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "10": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.getSymbolForTypeHelper()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "11": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.autoboxesTo()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "12": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isNominalConstructor()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "13": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(inGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "14": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(inExterns()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "15": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isProperty()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "16": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isLexicalVariable()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "17": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isDocOnlyParameter()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "18": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "19": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isDocScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "20": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isPropertyScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "21": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isLexicalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "22": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.getSymbolDeclaredBy()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "23": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInstanceType()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "24": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.toMaybeFunctionType()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "25": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((ownerFn == null)){\nreturn null;}      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "26": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(((ownerFn == null) && !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "27": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isInterface()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "28": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "29": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "30": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((ownerFn != null)){\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }",
          "31": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!linkToCtor.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "32": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(isInterface()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "33": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((type.autoboxesTo() != null)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "34": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !inGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "35": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !inExterns())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "36": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isProperty())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "37": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isLexicalVariable())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "38": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isDocOnlyParameter())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "39": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "40": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isDocScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "41": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isPropertyScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "42": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !isLexicalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "43": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(((ownerFn != null) || !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "44": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().inGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "45": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().inExterns()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "46": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isProperty()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "47": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isLexicalVariable()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "48": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isDocOnlyParameter()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "49": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "50": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isDocScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "51": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isPropertyScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "52": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isLexicalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "53": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!inGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "54": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!inExterns()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "55": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isProperty()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "56": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isLexicalVariable()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "57": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isDocOnlyParameter()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "58": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "59": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isDocScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "60": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isPropertyScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "61": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!isLexicalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "62": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !inGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "63": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !inExterns())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "64": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isProperty())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "65": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isLexicalVariable())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "66": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isDocOnlyParameter())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "67": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "68": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isDocScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "69": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isPropertyScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "70": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || !isLexicalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "71": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface(type)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "72": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\naddAnonymousFunctions();\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "73": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nfillNamespaceReferences();\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "74": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nfillPropertyScopes();\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "75": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\npruneOrphanedNames();\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "76": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(linkToCtor){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "77": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(.isInterface()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "78": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().inGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "79": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().inExterns()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "80": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isProperty()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "81": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isLexicalVariable()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "82": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isDocOnlyParameter()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "83": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isGlobalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "84": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isDocScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "85": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isPropertyScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "86": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!ownerFn.isInterface().isLexicalScope()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "87": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && (ownerFn == null))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "88": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(type.isFunctionType()){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "89": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((ownerFn || !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "90": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(((ownerFn == null) || !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "91": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && (ownerFn != null))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "92": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || (ownerFn == null))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "93": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn && !ownerFn.isInterface())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "94": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "95": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "96": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.isEmpty())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "97": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || (ownerFn != null))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "98": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(linkToCtor){\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }",
          "99": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nreturn null;      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "100": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nFunctionType ownerFn = (ObjectType)type;\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "101": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(!globalScope.isInterface()){        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "102": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().inGlobalScope(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "103": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().inExterns(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "104": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isProperty(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "105": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isLexicalVariable(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "106": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isDocOnlyParameter(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "107": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isGlobalScope(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "108": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isDocScope(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "109": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isPropertyScope(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "110": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(ownerFn.isInterface().isLexicalScope(ownerFn)){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "111": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "112": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((type.autoboxesTo() != null)){\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }",
          "113": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nreturn;\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "114": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(type.isFunctionType()){\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }",
          "115": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif(type.isInstanceType()){\n      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }",
          "116": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && (ownerFn == ownerFn))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "117": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() || (ownerFn == ownerFn))){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "118": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().inGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "119": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().inExterns())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "120": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isProperty())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "121": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isLexicalVariable())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "122": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isDocOnlyParameter())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "123": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isGlobalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "124": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isDocScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "125": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isPropertyScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "126": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nif((!ownerFn.isInterface() && !ownerFn.toMaybeFunctionType().isLexicalScope())){\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "127": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nreturn (linkToCtor)?globalScope.getSlot(\"null\"):getSymbolDeclaredBy(type.toMaybeFunctionType());      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "128": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nbreak;\n        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n    }\n  }",
          "129": "  private Symbol getSymbolForTypeHelper(JSType type, boolean linkToCtor) {\n    if (type == null) {\n      return null;\n    }\n\n    if (type.isGlobalThisType()) {\n      return globalScope.getSlot(GLOBAL_THIS);\n    } else if (type.isNominalConstructor()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          getSymbolDeclaredBy(type.toMaybeFunctionType());\n    } else if (type.isFunctionPrototypeType()) {\n      FunctionType ownerFn = ((ObjectType) type).getOwnerFunction();\nreturn (linkToCtor)?globalScope.getSlot(\"null\"):globalScope.getQualifiedSlot(\"null\");      if (!ownerFn.isInterface()) {        return null;\n      }\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isInstanceType()) {\n      FunctionType ownerFn = ((ObjectType) type).getConstructor();\n      return linkToCtor ?\n          getSymbolDeclaredBy(ownerFn) :\n          getSymbolForInstancesOf(ownerFn);\n    } else if (type.isFunctionType()) {\n      return linkToCtor ?\n          globalScope.getSlot(\"Function\") :\n          globalScope.getQualifiedSlot(\"Function.prototype\");\n    } else if (type.autoboxesTo() != null) {\n      return getSymbolForTypeHelper(type.autoboxesTo(), linkToCtor);\n    } else {\n      return null;\n}\n    }\n  }"
}