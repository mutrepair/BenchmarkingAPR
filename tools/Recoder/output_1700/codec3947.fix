{
          "0": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = ;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "1": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 2,incount = 2;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "2": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = -1,incount = -1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "3": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nchar incount = 1,incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "4": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint count = ;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "5": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 1,incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "6": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped != null)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "7": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last != 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "8": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((incount < str.length())){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "9": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "10": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = mapped;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "11": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == null)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "12": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nchar out = {\"null\",\"null\",\"null\",\"null\"};\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "13": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last != null)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "14": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped != \"null\")){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "15": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nmapped = getMappingCode(str, incount++);\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "16": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((count < out.length)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "17": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nmapped = mapped;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "18": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nlong incount = 1,incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "19": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nreturn null;        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "20": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nmapped++;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "21": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = str.charAt(0);\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "22": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "23": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = false,incount = false;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "24": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint count = 0;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "25": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped != last)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "26": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = 0;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "27": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 1,incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "28": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = mapped;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "29": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = last;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "30": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 0;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "31": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped != 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "32": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nlast = mapped;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "33": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((str.length() == 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "34": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nlast = getMappingCode(str, 0);\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "35": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nreturn 0;        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "36": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[count++] = mapped;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "37": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((str == null)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "38": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nmapped = 0;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "39": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = -2,incount = -2;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "40": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last == 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "41": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nstr = SoundexUtils.clean(str);\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "42": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nmapped = last;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "43": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nreturn str;        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "44": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last == null)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "45": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nstr.charAt(0);\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "46": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == 0)){\nreturn null;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "47": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == null)){\nreturn null;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "48": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = ;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "49": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = last;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "50": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = -0,incount = -0;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "51": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "52": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = null;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "53": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nout[0] = str;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "54": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nstr.length();\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "55": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 0,incount = 0;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "56": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nreturn;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "57": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = 1,incount = 1;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "58": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped > 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "59": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nchar out = {\"null\",\"null\",\"null\",\"null\"};\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "60": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif(((mapped != \"null\") && (mapped != last))){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "61": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last == 0)){\nreturn null;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "62": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((last == null)){\nreturn null;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "63": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped < 0)){\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n}\n    }",
          "64": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nchar last = ,last = ;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "65": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = \"null\",incount = \"null\";\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "66": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = true,incount = true;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "67": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nint incount = null,incount = null;\n        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "68": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nchar last = ,last = ;\n        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "69": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nreturn new String(out);        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "70": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == null)){\nreturn 0;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "71": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == 0)){\nreturn 0;}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "72": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == 0)){\nout[0] = mapped;\n}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }",
          "73": "    public String soundex(String str) {\n        if (str == null) {\n            return null;\n        }\n        str = SoundexUtils.clean(str);\n        if (str.length() == 0) {\n            return str;\n        }\n        char out[] = {'0', '0', '0', '0'};\n        char last, mapped;\nif((mapped == null)){\nout[0] = mapped;\n}        int incount = 1, count = 0;        out[0] = str.charAt(0);\n        // getMappingCode() throws IllegalArgumentException\n        last = getMappingCode(str, 0);\n        while ((incount < str.length()) && (count < out.length)) {\n            mapped = getMappingCode(str, incount++);\n            if (mapped != 0) {\n                if ((mapped != '0') && (mapped != last)) {\n                    out[count++] = mapped;\n                }\n                last = mapped;\n            }\n        }\n        return new String(out);\n    }"
}