{
          "0": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(true){            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "1": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nreturn;\n        this.transformer = transformer;\n    }",
          "2": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(transformer){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "3": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer != null)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "4": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.coll = transformer;\n        this.transformer = transformer;\n    }",
          "5": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "6": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.transformer = coll;\n        this.transformer = transformer;\n    }",
          "7": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.coll = coll;\n        this.transformer = transformer;\n    }",
          "8": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(coll){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "9": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nsuper.TransformedCollection();\n        this.transformer = transformer;\n    }",
          "10": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(this.transformer){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "11": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis. = transformer;\n        this.transformer = transformer;\n    }",
          "12": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer == null)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "13": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nif((transformer != null)){\n        this.transformer = transformer;\n}\n    }",
          "14": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(-true){            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "15": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nif((transformer == null)){\n        this.transformer = transformer;\n}\n    }",
          "16": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(!transformer){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "17": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(transformer.isEmpty()){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "18": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.transformer = ;\n        this.transformer = transformer;\n    }",
          "19": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.transformer = false;\n        this.transformer = transformer;\n    }",
          "20": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\ntransformer = false;\n        this.transformer = transformer;\n    }",
          "21": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\ntransformer = true;\n        this.transformer = transformer;\n    }",
          "22": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.transformer = true;\n        this.transformer = transformer;\n    }",
          "23": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer && transformer)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "24": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(( != null)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "25": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer && (transformer == null))){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "26": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(!){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "27": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis. = coll;\n        this.transformer = transformer;\n    }",
          "28": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.coll = false;\n        this.transformer = transformer;\n    }",
          "29": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer && (transformer != null))){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "30": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(null){            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "31": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\ntransformer = transformer;\n        this.transformer = transformer;\n    }",
          "32": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nthis.coll = true;\n        this.transformer = transformer;\n    }",
          "33": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer && false)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "34": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nthis.transformer = transformer;\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "35": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "36": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\n        this.transformer = transformer;\n    }",
          "37": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer > 0)){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "38": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(!true){            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "39": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "40": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif(-false){            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "41": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nbreak;\n        this.transformer = transformer;\n    }",
          "42": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\nreturn this;        this.transformer = transformer;\n    }",
          "43": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nif((transformer || (transformer == null))){\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }",
          "44": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);        if (false) {            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n\ncontinue;\n        this.transformer = transformer;\n    }",
          "45": "    protected TransformedCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) {\n        super(coll);\nbreak;\n            throw new IllegalArgumentException(\"Transformer must not be null\");\n        }\n        this.transformer = transformer;\n    }"
}