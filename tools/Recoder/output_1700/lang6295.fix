{
          "0": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "1": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & shift[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "2": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) | shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "3": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) & shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "4": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nout = (short)((out & ~mask) | bits);\n            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "5": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) < shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "6": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & shift) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "7": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nshift = ((i * 8) + dstPos);\n            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n}\n        }\n        return out;\n    }",
          "8": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & out[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "9": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nbreak;\n            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "10": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn dstInit;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "11": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & srcPos[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "12": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) > shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "13": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 < src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "14": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) <= shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "15": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "16": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[((0 & src[(i + srcPos)]) << shift)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "17": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & i) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "18": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & out) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "19": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 <= src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "20": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 | src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "21": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "22": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn 0;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "23": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & srcPos) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "24": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn out;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "25": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[src]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "26": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 > src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "27": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 - src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "28": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 * src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "29": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) << shift[(i + srcPos)]);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "30": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = (0 & src[(i + srcPos)]);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "31": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + shift[(i + srcPos)])]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "32": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) - shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "33": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) || shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "34": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + shift)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "35": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal long bits = ((0 & src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "36": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) + shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "37": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + i)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "38": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = (i + srcPos);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "39": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(0 & src[(i + srcPos)])]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "40": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 << src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "41": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[out]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "42": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) << src[(i + srcPos)]);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "43": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 >> src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "44": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 / src[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "45": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(shift + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "46": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & i[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "47": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + src[(i + srcPos)])]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "48": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(shift[(i + srcPos)] + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "49": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\ncontinue;\n            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "50": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) << i);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "51": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[1]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "52": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = src[(i + srcPos)];\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "53": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn 1;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "54": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[0]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "55": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn false;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "56": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn 0xff;            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "57": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & dstInit[(i + srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "58": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & bits) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "59": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i + srcPos)]) << out[(i + srcPos)]);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "60": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nreturn;\n            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "61": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[shift]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "62": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[srcPos]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "63": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i - srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "64": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & dstInit) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "65": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfor(int i = 0;(i < nBytes);i++) {            final int bits = (0 & src[i + srcPos]) << shift;            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "66": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((0 & src[(i <= srcPos)]) << shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "67": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / src) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "68": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / shift) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "69": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src * src) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "70": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / src) | shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "71": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src * src) | shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "72": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / src) + shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "73": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src * shift) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "74": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / src) / shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "75": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src * src) + shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "76": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / shift) | shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "77": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src / shift) + shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "78": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((shift / src) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "79": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src + src) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "80": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src - src) * shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }",
          "81": "    public static short byteArrayToShort(final byte[] src, final int srcPos, final short dstInit, final int dstPos,\n        final int nBytes) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nBytes) {\n            return dstInit;\n        }\n        if ((nBytes - 1) * 8 + dstPos >= 16) {\n            throw new IllegalArgumentException(\n                \"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n        }\n        short out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nBytes; i++ ) {\n            shift = i * 8 + dstPos;\nfinal int bits = ((src + src) + shift);\n            final int mask = 0xff << shift;\n            out = (short)((out & ~mask) | bits);\n        }\n        return out;\n    }"
}