{
          "0": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(\"null\");\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "1": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "2": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = 0;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "3": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nprintln();\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "4": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(c);\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "5": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nreturn;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "6": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i <= comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "7": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = 1;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "8": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(long i = -1;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "9": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\ni++;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "10": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(char i = -1;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "11": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = 2;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "12": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(\"null\");\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "13": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(format.getCommentStart());\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "14": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "15": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nflush();\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "16": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nprintSep();\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "17": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i >= comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "18": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(\"null\");\nout.append(\"null\");\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "19": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment != null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "20": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nprintln();\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "21": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(c);\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "22": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nbreak;\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "23": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\ncontinue;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "24": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\ni++;\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "25": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif(((i + 1) < comment.length())){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "26": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(\"null\");\nreturn;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "27": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < format.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "28": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nbreak;\n            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "29": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif(!newLine){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "30": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment.charAt((i + 1)) == \"null\")){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "31": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nout.append(format.getCommentStart());\nbreak;\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "32": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i > comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "33": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < i.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "34": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.length());i) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "35": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((((i + 1) < comment.length()) && (comment.charAt((i + 1)) == \"null\"))){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "36": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment == null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "37": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((i != null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "38": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < (i < comment.length()));i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "39": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < .length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "40": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "41": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;;i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "42": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.getName());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "43": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif(!format.isCommentingEnabled()){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "44": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.getCommentStart());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "45": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif(( != null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "46": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = \"null\";(i < comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "47": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment == null)){\nreturn;\n}        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "48": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((i == null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "49": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment != null)){\nreturn;\n}        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "50": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i == comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "51": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i - comment.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "52": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((i > 0)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "53": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.length());i++) {        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "54": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nif((comment.length() != null)){\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n}\n    }",
          "55": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < comment.printComment());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "56": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nchar c = comment.charAt(i);\n        for (int i = -1; i < comment.length(); i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "57": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\n((i < (i < comment.length())))            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "58": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(comment.length() < i);i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "59": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < out.length());i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "60": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < i);i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "61": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < (comment.length() - comment));i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "62": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < (comment.length() - 0));i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }",
          "63": "    public void printComment(String comment) throws IOException {\n        if (!format.isCommentingEnabled()) {\n            return;\n        }\n        if (!newLine) {\n            println();\n        }\n        out.append(format.getCommentStart());\n        out.append(' ');\nfor(int i = -1;(i < (comment.length() - 1));i++) {            char c = comment.charAt(i);\n            switch (c) {\n                case '\\r':\n                    if (i + 1 < comment.length() && comment.charAt(i + 1) == '\\n') {\n                        i++;\n                    }\n                //$FALL-THROUGH$ break intentionally excluded.\n            case '\\n':\n                    println();\n                    out.append(format.getCommentStart());\n                    out.append(' ');\n                    break;\n                default:\n                    out.append(c);\n                    break;\n            }\n        }\n        println();\n    }"
}