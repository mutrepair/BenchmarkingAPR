{
          "0": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn element;        } else {\n            return 0;\n        }\n    }",
          "1": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn 1;        } else {\n            return 0;\n        }\n    }",
          "2": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn -1;        } else {\n            return 0;\n        }\n    }",
          "3": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn 0;        } else {\n            return 0;\n        }\n    }",
          "4": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn ;        } else {\n            return 0;\n        }\n    }",
          "5": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn 2;        } else {\n            return 0;\n        }\n    }",
          "6": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn ;        } else {\n            return 0;\n        }\n    }",
          "7": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn elementCompareTo;        } else {\n            return 0;\n        }\n    }",
          "8": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\n        } else {\n            return 0;\n        }\n    }",
          "9": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn -1;            return 0;        } else {\n            return 0;\n        }\n    }",
          "10": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn new NullPointerException();        } else {\n            return 0;\n        }\n    }",
          "11": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn ;        } else {\n            return 0;\n        }\n    }",
          "12": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn 0;            return 0;        } else {\n            return 0;\n        }\n    }",
          "13": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn this;        } else {\n            return 0;\n        }\n    }",
          "14": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn false;        } else {\n            return 0;\n        }\n    }",
          "15": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element - null);        } else {\n            return 0;\n        }\n    }",
          "16": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn new NullPointerException(element);        } else {\n            return 0;\n        }\n    }",
          "17": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element + null);        } else {\n            return 0;\n        }\n    }",
          "18": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn null;        } else {\n            return 0;\n        }\n    }",
          "19": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn isBefore(element);        } else {\n            return 0;\n        }\n    }",
          "20": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn ;        } else {\n            return 0;\n        }\n    }",
          "21": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn element;            return 0;        } else {\n            return 0;\n        }\n    }",
          "22": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn ;        } else {\n            return 0;\n        }\n    }",
          "23": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\ncontinue;\n        } else {\n            return 0;\n        }\n    }",
          "24": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn e;        } else {\n            return 0;\n        }\n    }",
          "25": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element - element);        } else {\n            return 0;\n        }\n    }",
          "26": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn length;        } else {\n            return 0;\n        }\n    }",
          "27": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element + element);        } else {\n            return 0;\n        }\n    }",
          "28": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn isAfter(element);        } else {\n            return 0;\n        }\n    }",
          "29": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn \"null\";        } else {\n            return 0;\n        }\n    }",
          "30": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif((element == null)){\nreturn -1;}            return 0;        } else {\n            return 0;\n        }\n    }",
          "31": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element == null);        } else {\n            return 0;\n        }\n    }",
          "32": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif(isBefore(element)){\ncontinue;\n}\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "33": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element - 0);        } else {\n            return 0;\n        }\n    }",
          "34": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn this.element;        } else {\n            return 0;\n        }\n    }",
          "35": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif((element == null)){\nreturn 0;}            return 0;        } else {\n            return 0;\n        }\n    }",
          "36": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn;\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "37": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif(isNaturalOrdering()){\nreturn 0;}            return 0;        } else {\n            return 0;\n        }\n    }",
          "38": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (NullPointerException)0;        } else {\n            return 0;\n        }\n    }",
          "39": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nelement = element;\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "40": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (NullPointerException)element;        } else {\n            return 0;\n        }\n    }",
          "41": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn;\n        } else {\n            return 0;\n        }\n    }",
          "42": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (0 + element);        } else {\n            return 0;\n        }\n    }",
          "43": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element + );        } else {\n            return 0;\n        }\n    }",
          "44": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn true;        } else {\n            return 0;\n        }\n    }",
          "45": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element - );        } else {\n            return 0;\n        }\n    }",
          "46": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element + 0);        } else {\n            return 0;\n        }\n    }",
          "47": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element - 1);        } else {\n            return 0;\n        }\n    }",
          "48": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nbreak;\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "49": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn (element + 1);        } else {\n            return 0;\n        }\n    }",
          "50": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nelement = 0;\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "51": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif((element == null)){\ncontinue;\n}\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "52": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn isBefore(element, 0);        } else {\n            return 0;\n        }\n    }",
          "53": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nreturn isBefore(element, element);        } else {\n            return 0;\n        }\n    }",
          "54": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\ncontinue;\n            return 0;        } else {\n            return 0;\n        }\n    }",
          "55": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif((element < 0)){\nreturn 0;}            return 0;        } else {\n            return 0;\n        }\n    }",
          "56": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nbreak;\n        } else {\n            return 0;\n        }\n    }",
          "57": "    public int elementCompareTo(final T element) {\n        if (element == null) {\n            // Comparable API says throw NPE on null\n            throw new NullPointerException(\"Element is null\");\n        }\n        if (isAfter(element)) {\n            return -1;\n        } else if (isBefore(element)) {\nif((element < 0)){\nreturn -1;}            return 0;        } else {\n            return 0;\n        }\n    }"
}