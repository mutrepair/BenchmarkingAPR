{
          "0": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end >>> _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "1": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end >> _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "2": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "3": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "4": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end <= _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "5": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end - _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "6": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end >= _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "7": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "8": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end > _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "9": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nlong avail = (_end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "10": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end < _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "11": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nbyte[] avail = (_end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "12": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end / _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "13": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _buffer);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "14": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end * _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "15": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % len);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "16": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % b);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "17": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % off);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "18": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_buffer % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "19": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nclose();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "20": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nreset();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "21": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nfreeMergedBuffer();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "22": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (len % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "23": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (off % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "24": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nfinal int avail = (_end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "25": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (b % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "26": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = _end;\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "27": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (avail % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "28": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = _ptr;\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "29": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _ptr._end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "30": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _end._end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "31": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % available()._end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "32": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % read()._end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "33": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nreturn 0;            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "34": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _ptr._ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "35": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % _end._ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "36": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % available()._ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "37": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end % read()._ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "38": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = ;\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "39": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nif((_buffer != null)){\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n}\n        }\n        return _in.read(b, off, len);\n    }",
          "40": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nSystem.close();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "41": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nSystem.reset();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "42": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nSystem.freeMergedBuffer();\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "43": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nif(markSupported()){\nreturn 0;}            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "44": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nreturn len;            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "45": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr._end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "46": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end._end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "47": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (available()._end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "48": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (read()._end % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "49": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nreturn _in.read(b, off, len);            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "50": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nlen = avail;\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "51": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = mark(_end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "52": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr * _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "53": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr._ptr % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "54": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end._ptr % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "55": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (available()._ptr % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "56": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (read()._ptr % _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "57": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nSystem.arraycopy(_buffer, _ptr, b, off, len);\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "58": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\n_ptr += len;\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "59": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end * _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "60": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr / _ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "61": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr % _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "62": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = mark(_ptr);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "63": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end / _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "64": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr * _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "65": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_ptr / _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "66": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nint avail = (_end - _end);\n            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "67": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nreturn;\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }",
          "68": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nif((_ptr >= _end)){\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n}\n        }\n        return _in.read(b, off, len);\n    }",
          "69": "    public int \tread(byte[] b, int off, int len) throws IOException\n    {\n        if (_buffer != null) {\nbreak;\n            int avail = _end % _ptr;            if (len > avail) {\n                len = avail;\n            }\n            System.arraycopy(_buffer, _ptr, b, off, len);\n            _ptr += len;\n            if (_ptr >= _end) {\n                freeMergedBuffer();\n            }\n            return len;\n        }\n        return _in.read(b, off, len);\n    }"
}