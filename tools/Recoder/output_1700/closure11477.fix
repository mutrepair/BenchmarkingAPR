{
          "0": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nsetStruct();\n    return false;  }",
          "1": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nsetDict();\n    return false;  }",
          "2": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nlazyInitInfo();\n    return false;  }",
          "3": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn false;    return false;  }",
          "4": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn true;    return false;  }",
          "5": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.add(interfaceName);\n    return false;  }",
          "6": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nLists.setStruct();\n    return false;  }",
          "7": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nLists.setDict();\n    return false;  }",
          "8": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nLists.lazyInitInfo();\n    return false;  }",
          "9": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    return false;  }",
          "10": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.setStruct();\n    return false;  }",
          "11": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.setDict();\n    return false;  }",
          "12": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.lazyInitInfo();\n    return false;  }",
          "13": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nsuper.addImplementedInterface();\n    return false;  }",
          "14": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces = false;\n    return false;  }",
          "15": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces = interfaceName;\n    return false;  }",
          "16": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nthis.setStruct();\n    return false;  }",
          "17": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nthis.setDict();\n    return false;  }",
          "18": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nthis.lazyInitInfo();\n    return false;  }",
          "19": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasBrackets()){\nreturn false;}    return false;  }",
          "20": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isConsistentIdGenerator()){\nreturn false;}    return false;  }",
          "21": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isStableIdGenerator()){\nreturn false;}    return false;  }",
          "22": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isConstant()){\nreturn false;}    return false;  }",
          "23": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isConstructor()){\nreturn false;}    return false;  }",
          "24": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(makesStructs()){\nreturn false;}    return false;  }",
          "25": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(makesDicts()){\nreturn false;}    return false;  }",
          "26": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isDefine()){\nreturn false;}    return false;  }",
          "27": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isHidden()){\nreturn false;}    return false;  }",
          "28": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isNoTypeCheck()){\nreturn false;}    return false;  }",
          "29": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(shouldPreserveTry()){\nreturn false;}    return false;  }",
          "30": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isOverride()){\nreturn false;}    return false;  }",
          "31": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isNoAlias()){\nreturn false;}    return false;  }",
          "32": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isDeprecated()){\nreturn false;}    return false;  }",
          "33": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isInterface()){\nreturn false;}    return false;  }",
          "34": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isExport()){\nreturn false;}    return false;  }",
          "35": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isExpose()){\nreturn false;}    return false;  }",
          "36": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isNoShadow()){\nreturn false;}    return false;  }",
          "37": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isIdGenerator()){\nreturn false;}    return false;  }",
          "38": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isImplicitCast()){\nreturn false;}    return false;  }",
          "39": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isNoSideEffects()){\nreturn false;}    return false;  }",
          "40": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isExterns()){\nreturn false;}    return false;  }",
          "41": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isJavaDispatch()){\nreturn false;}    return false;  }",
          "42": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(isNoCompile()){\nreturn false;}    return false;  }",
          "43": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(containsDeclaration()){\nreturn false;}    return false;  }",
          "44": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(lazyInitDocumentation()){\nreturn false;}    return false;  }",
          "45": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasType()){\nreturn false;}    return false;  }",
          "46": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasEnumParameterType()){\nreturn false;}    return false;  }",
          "47": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasTypedefType()){\nreturn false;}    return false;  }",
          "48": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasReturnType()){\nreturn false;}    return false;  }",
          "49": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasThisType()){\nreturn false;}    return false;  }",
          "50": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasBaseType()){\nreturn false;}    return false;  }",
          "51": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasFileOverview()){\nreturn false;}    return false;  }",
          "52": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(hasModifies()){\nreturn false;}    return false;  }",
          "53": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces = null;\n    return false;  }",
          "54": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces = true;\n    return false;  }",
          "55": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n.setStruct();\n    return false;  }",
          "56": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n.setDict();\n    return false;  }",
          "57": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n.lazyInitInfo();\n    return false;  }",
          "58": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasBrackets()){\nreturn false;}    return false;  }",
          "59": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isConsistentIdGenerator()){\nreturn false;}    return false;  }",
          "60": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isStableIdGenerator()){\nreturn false;}    return false;  }",
          "61": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isConstant()){\nreturn false;}    return false;  }",
          "62": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isConstructor()){\nreturn false;}    return false;  }",
          "63": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!makesStructs()){\nreturn false;}    return false;  }",
          "64": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!makesDicts()){\nreturn false;}    return false;  }",
          "65": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isDefine()){\nreturn false;}    return false;  }",
          "66": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isHidden()){\nreturn false;}    return false;  }",
          "67": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isNoTypeCheck()){\nreturn false;}    return false;  }",
          "68": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!shouldPreserveTry()){\nreturn false;}    return false;  }",
          "69": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isOverride()){\nreturn false;}    return false;  }",
          "70": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isNoAlias()){\nreturn false;}    return false;  }",
          "71": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isDeprecated()){\nreturn false;}    return false;  }",
          "72": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isInterface()){\nreturn false;}    return false;  }",
          "73": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isExport()){\nreturn false;}    return false;  }",
          "74": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isExpose()){\nreturn false;}    return false;  }",
          "75": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isNoShadow()){\nreturn false;}    return false;  }",
          "76": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isIdGenerator()){\nreturn false;}    return false;  }",
          "77": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isImplicitCast()){\nreturn false;}    return false;  }",
          "78": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isNoSideEffects()){\nreturn false;}    return false;  }",
          "79": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isExterns()){\nreturn false;}    return false;  }",
          "80": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isJavaDispatch()){\nreturn false;}    return false;  }",
          "81": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!isNoCompile()){\nreturn false;}    return false;  }",
          "82": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!containsDeclaration()){\nreturn false;}    return false;  }",
          "83": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!lazyInitDocumentation()){\nreturn false;}    return false;  }",
          "84": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasType()){\nreturn false;}    return false;  }",
          "85": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasEnumParameterType()){\nreturn false;}    return false;  }",
          "86": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasTypedefType()){\nreturn false;}    return false;  }",
          "87": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasReturnType()){\nreturn false;}    return false;  }",
          "88": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasThisType()){\nreturn false;}    return false;  }",
          "89": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasBaseType()){\nreturn false;}    return false;  }",
          "90": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasFileOverview()){\nreturn false;}    return false;  }",
          "91": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif(!hasModifies()){\nreturn false;}    return false;  }",
          "92": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn interfaceName;    return false;  }",
          "93": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn null;    return false;  }",
          "94": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn;\n    return false;  }",
          "95": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn this;    return false;  }",
          "96": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nbreak;\n    return false;  }",
          "97": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn false;info.implementedInterfaces.add(interfaceName);\n    return false;  }",
          "98": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn false;  }",
          "99": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.add(interfaceName);\ninfo.implementedInterfaces.add(interfaceName);\n    return false;  }",
          "100": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif((interfaceName != null)){\nreturn false;}    return false;  }",
          "101": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n    return false;  }",
          "102": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninterfaceName = false;\n    return false;  }",
          "103": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn false;info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    return false;  }",
          "104": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ninterfaceName = true;\n    return false;  }",
          "105": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif((interfaceName != null)){\n}\n    return false;  }",
          "106": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ncontinue;\n    return false;  }",
          "107": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nif((interfaceName == null)){\nreturn false;}    return false;  }",
          "108": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n ;\n    return false;  }",
          "109": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\n  }",
          "110": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\nreturn;\n  }",
          "111": "  boolean addImplementedInterface(JSTypeExpression interfaceName) {\n    lazyInitInfo();\n    if (info.implementedInterfaces == null) {\n      info.implementedInterfaces = Lists.newArrayListWithCapacity(2);\n    }\n    if (info.implementedInterfaces.contains(interfaceName)) {\n      return false;\n    }\n    info.implementedInterfaces.add(interfaceName);\ncontinue;\n  }"
}