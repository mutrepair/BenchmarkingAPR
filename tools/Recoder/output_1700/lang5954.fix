{
          "0": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift += ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "1": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nout = ((out & ~mask) | bits);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "2": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + i);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "3": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (i % 16);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "4": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nout = ((out & ~mask) | bits);\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "5": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + dstInit);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "6": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "7": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + dstInit);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "8": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 0) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "9": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + bits);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "10": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\ni = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "11": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = shift;\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "12": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 1) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "13": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + shift);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "14": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((i != null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "15": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "16": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nbits = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "17": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 2) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "18": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + srcPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "19": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift -= ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "20": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((bits % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "21": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + srcPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "22": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nbreak;\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "23": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + 16);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "24": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nreturn 0;            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "25": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + 16);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "26": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nsrcPos = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "27": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nreturn shift;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "28": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((shift % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "29": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "30": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (0 == nShorts);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "31": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + src);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "32": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = i;\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "33": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + 64);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "34": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\ndstInit = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "35": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (srcPos == 0);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "36": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((bits != null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "37": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + out);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "38": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (i + srcPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "39": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + src);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "40": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + i);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "41": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) + ((i % 16) + dstPos));\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "42": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((i == null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "43": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((((i % 16) + dstPos) + 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "44": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i - 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "45": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (0xffffL & src[(i + srcPos)]);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "46": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + out);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "47": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (src.length == 0);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "48": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((srcPos != null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "49": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((dstInit != null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "50": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + shift);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "51": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((out & ~mask) | bits);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "52": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((shift != null)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "53": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift++;\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "54": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i % 16) - dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "55": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nreturn dstInit;            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "56": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((((i % 16) + dstPos) + dstInit) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "57": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((nShorts - 1) * 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "58": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif(((src.length == 0) && (srcPos == 0))){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "59": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstInit) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "60": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = out;\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "61": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + srcPos) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "62": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = (((i % 16) + dstPos) + 0);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "63": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i + 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "64": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nfor(int i = 0;(i < nShorts);i++) {            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "65": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((srcPos % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "66": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((dstInit % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "67": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift += (i % 16);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "68": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift |= ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "69": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((0 == nShorts)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "70": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((0xffffL & src[(i + srcPos)])){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "71": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((((nShorts - 1) * 16) + dstPos)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "72": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif(((i % 16) + dstPos)){\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "73": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nreturn ((i % 16) + dstPos);            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "74": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((src.length == 0)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "75": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nout = ((i % 16) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "76": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((((i % 16) + dstPos) + srcPos) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "77": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif(((nShorts - 1) * 16)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "78": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nreturn 1;            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "79": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((shift + dstInit) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "80": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nif((out & ~mask)){\ncontinue;\n}\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "81": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\nshift = ((i + dstPos) + dstPos);\n            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "82": "    public static long shortArrayToLong(final short[] src, final int srcPos, final long dstInit, final int dstPos,\n        final int nShorts) {\n        if ((src.length == 0 && srcPos == 0) || 0 == nShorts) {\n            return dstInit;\n        }\n        if ((nShorts - 1) * 16 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nShorts-1)*16+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\n        for (int i = 0; i < nShorts; i++ ) {\ni++;\n            shift = i % 16 + dstPos;            final long bits = (0xffffL & src[i + srcPos]) << shift;\n            final long mask = 0xffffL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }"
}