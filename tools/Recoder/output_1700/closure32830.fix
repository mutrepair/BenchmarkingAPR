{
          "0": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "1": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(1).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "2": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(secondArg, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "3": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "4": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getNext(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "5": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getString(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "6": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getName());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "7": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getNext());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "8": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, firstMessage.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "9": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(firstMessage, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "10": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, secondArg.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "11": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "12": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getChildCount());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "13": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, MSG_FUNCTION_NAME);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "14": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, MSG_FALLBACK_FUNCTION_NAME);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "15": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, PH_JS_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "16": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, PH_JS_SUFFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "17": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, MSG_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "18": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, HIDDEN_DESC_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "19": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, DESC_SUFFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "20": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "21": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, secondArg);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "22": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "23": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getName(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "24": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, firstArg);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "25": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, firstMessage);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "26": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.isName(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "27": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(2).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "28": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, t.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "29": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildCount(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "30": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, firstArg.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "31": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), call);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "32": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((secondArg != null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "33": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).isName());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "34": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(0);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "35": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, secondMessage.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "36": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, t);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "37": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(firstArg, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "38": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = call.getChildAtIndex(0).getString();\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "39": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(FALLBACK_ARG_ERROR, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "40": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((call.getChildCount() != 3)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "41": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\ngetTrackedMessage(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "42": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), MSG_FUNCTION_NAME);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "43": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), MSG_FALLBACK_FUNCTION_NAME);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "44": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), PH_JS_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "45": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), PH_JS_SUFFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "46": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), MSG_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "47": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), HIDDEN_DESC_PREFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "48": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), DESC_SUFFIX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "49": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call.getChildAtIndex(0).getString(), 0);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "50": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif(((call.getChildCount() != 3) || !call.getChildAtIndex(1).isName())){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "51": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, firstArg.getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "52": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nfinal JsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "53": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, secondArg.getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "54": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(secondMessage, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "55": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(2);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "56": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = (JsMessage)getTrackedMessage(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "57": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nreturn;\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "58": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(1);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "59": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(call, BAD_FALLBACK_SYNTAX);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "60": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage();\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "61": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, );\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "62": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(secondArg, FALLBACK_ARG_ERROR, secondArg.getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "63": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((secondArg == null)){\nreturn;\n}    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "64": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, 0);\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "65": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = visitFallbackFunctionCall(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "66": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(BAD_FALLBACK_SYNTAX, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "67": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((secondArg == null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "68": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((call != null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "69": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage<?> secondMessage = getTrackedMessage(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "70": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getTrackedMessage(t, call.getChildAtIndex(0));\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "71": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = debug(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "72": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((firstMessage != null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "73": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = getString();\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "74": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "75": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = processMessageFallback(t, call.getChildAtIndex(0).getString());\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }",
          "76": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((call.getChildAtIndex(0).getString() != null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "77": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nif((t != null)){\n    JsMessage secondMessage = getTrackedMessage(\n        t, call.getChildAtIndex(0).getString());    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n}\n  }",
          "78": "  private void visitFallbackFunctionCall(NodeTraversal t, Node call) {\n    // Check to make sure the function call looks like:\n    // goog.getMsgWithFallback(MSG_1, MSG_2);\n    if (call.getChildCount() != 3 ||\n        !call.getChildAtIndex(1).isName() ||\n        !call.getChildAtIndex(2).isName()) {\n      compiler.report(t.makeError(call, BAD_FALLBACK_SYNTAX));\n      return;\n    }\n\n    Node firstArg = call.getChildAtIndex(1);\n    JsMessage firstMessage = getTrackedMessage(t, firstArg.getString());\n    if (firstMessage == null) {\n      compiler.report(\n          t.makeError(firstArg, FALLBACK_ARG_ERROR, firstArg.getString()));\n      return;\n    }\n\n    Node secondArg = firstArg.getNext();\nJsMessage secondMessage = ;\n    if (secondMessage == null) {\n      compiler.report(\n          t.makeError(secondArg, FALLBACK_ARG_ERROR, secondArg.getString()));\n      return;\n    }\n\n    processMessageFallback(call, firstMessage, secondMessage);\n  }"
}