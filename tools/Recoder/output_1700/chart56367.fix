{
          "0": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item - 0));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "1": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "2": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item - 2));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "3": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(x0, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "4": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item <= -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "5": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item >= -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "6": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nlong y0 = dataset.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "7": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nreturn;\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "8": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item == -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "9": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getPreviousHeight(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "10": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (x0 - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "11": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item + -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "12": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif((x0 != null)){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "13": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item % -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "14": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif((item - -1)){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "15": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif((item - 1)){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "16": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item >> -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "17": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(tdataset, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "18": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item / -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "19": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndataset.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "20": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(dataArea, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "21": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (tdataset - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "22": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(orientation, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "23": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.drawItem(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "24": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item != -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "25": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.setLine(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "26": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getXValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "27": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (series - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "28": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.push(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "29": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(item, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "30": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.valueToJava2D(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "31": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nareaState.getSeriesArea().addPoint((int)point.getX(), (int)point.getY());\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "32": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item < -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "33": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nareaState.getCurrentSeriesPoints().push(point);\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "34": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.e(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "35": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "36": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ng2.draw(areaState.getLine());\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "37": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.debug(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "38": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (dataArea - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "39": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (transX1 - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "40": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (transY1 - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "41": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nareaState.getSeriesArea().addPoint((int)transY1, (int)transX1);\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "42": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nareaState.getLine().setLine(transX0, transY0, transX1, transY1);\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "43": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nareaState.getLine().setLine(transY0, transX0, transY1, transX1);\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "44": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nint y0 = dataset.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "45": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = x0.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "46": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif((x0 == null)){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "47": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = areaState.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "48": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif(getPlotLines()){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "49": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nif((x0 == 0)){\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n}\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "50": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = rangeAxis.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "51": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue((item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "52": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = domainAxis.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "53": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = g2.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "54": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nPoint point = new Point((int)transX1, (int)transY1);\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "55": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item - 1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "56": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = (double)dataset.getYValue(series, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "57": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue((item - -1), (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "58": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\nbreak;\n                    double y0 = dataset.getYValue(series, item - -1);                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "59": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(transX1, (item - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "60": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue((item - -1), 0);\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "61": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue((item - -1), series);\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "62": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (item - -1), 0);\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "63": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, ((series - series) - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "64": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (((series + series) - -1) - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "65": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (((series - 1) - -1) - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "66": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (((series - series) - -1) - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }",
          "67": "    public void drawItem(Graphics2D g2, XYItemRendererState state,\n            Rectangle2D dataArea, XYPlot plot, ValueAxis domainAxis,\n            ValueAxis rangeAxis, XYDataset dataset, int series, int item,\n            boolean selected, int pass) {\n\n        PlotOrientation orientation = plot.getOrientation();\n        StackedXYAreaRendererState areaState\n            = (StackedXYAreaRendererState) state;\n        // Get the item count for the series, so that we can know which is the\n        // end of the series.\n        TableXYDataset tdataset = (TableXYDataset) dataset;\n        int itemCount = tdataset.getItemCount();\n\n        // get the data point...\n        double x1 = dataset.getXValue(series, item);\n        double y1 = dataset.getYValue(series, item);\n        boolean nullPoint = false;\n        if (Double.isNaN(y1)) {\n            y1 = 0.0;\n            nullPoint = true;\n        }\n\n        //  Get height adjustment based on stack and translate to Java2D values\n        double ph1 = getPreviousHeight(tdataset, series, item);\n        double transX1 = domainAxis.valueToJava2D(x1, dataArea,\n                plot.getDomainAxisEdge());\n        double transY1 = rangeAxis.valueToJava2D(y1 + ph1, dataArea,\n                plot.getRangeAxisEdge());\n\n        Paint seriesPaint = getItemPaint(series, item, selected);\n        Stroke seriesStroke = getItemStroke(series, item, selected);\n\n        if (pass == 0) {\n            //  On first pass render the areas, line and outlines\n\n            if (item == 0) {\n                // Create a new Area for the series\n                areaState.setSeriesArea(new Polygon());\n                areaState.setLastSeriesPoints(\n                        areaState.getCurrentSeriesPoints());\n                areaState.setCurrentSeriesPoints(new Stack());\n\n                // start from previous height (ph1)\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                // The first point is (x, 0)\n                if (orientation == PlotOrientation.VERTICAL) {\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n            }\n\n            // Add each point to Area (x, y)\n            if (orientation == PlotOrientation.VERTICAL) {\n                Point point = new Point((int) transX1, (int) transY1);\n                areaState.getSeriesArea().addPoint((int) point.getX(),\n                        (int) point.getY());\n                areaState.getCurrentSeriesPoints().push(point);\n            }\n            else if (orientation == PlotOrientation.HORIZONTAL) {\n                areaState.getSeriesArea().addPoint((int) transY1,\n                        (int) transX1);\n            }\n\n            if (getPlotLines()) {\n                if (item > 0) {\n                    // get the previous data point...\n                    double x0 = dataset.getXValue(series, item - 1);\ndouble y0 = dataset.getYValue(series, (((series - series) - 1) - -1));\n                    double ph0 = getPreviousHeight(tdataset, series, item - 1);\n                    double transX0 = domainAxis.valueToJava2D(x0, dataArea,\n                            plot.getDomainAxisEdge());\n                    double transY0 = rangeAxis.valueToJava2D(y0 + ph0,\n                            dataArea, plot.getRangeAxisEdge());\n\n                    if (orientation == PlotOrientation.VERTICAL) {\n                        areaState.getLine().setLine(transX0, transY0, transX1,\n                                transY1);\n                    }\n                    else if (orientation == PlotOrientation.HORIZONTAL) {\n                        areaState.getLine().setLine(transY0, transX0, transY1,\n                                transX1);\n                    }\n                    g2.draw(areaState.getLine());\n                }\n            }\n\n            // Check if the item is the last item for the series and number of\n            // items > 0.  We can't draw an area for a single point.\n            if (getPlotArea() && item > 0 && item == (itemCount - 1)) {\n\n                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,\n                        plot.getRangeAxisEdge());\n\n                if (orientation == PlotOrientation.VERTICAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transX1,\n                            (int) transY2);\n                }\n                else if (orientation == PlotOrientation.HORIZONTAL) {\n                    // Add the last point (x,0)\n                    areaState.getSeriesArea().addPoint((int) transY2,\n                            (int) transX1);\n                }\n\n                // Add points from last series to complete the base of the\n                // polygon\n                if (series != 0) {\n                    Stack points = areaState.getLastSeriesPoints();\n                    while (!points.empty()) {\n                        Point point = (Point) points.pop();\n                        areaState.getSeriesArea().addPoint((int) point.getX(),\n                                (int) point.getY());\n                    }\n                }\n\n                //  Fill the polygon\n                g2.setPaint(seriesPaint);\n                g2.setStroke(seriesStroke);\n                g2.fill(areaState.getSeriesArea());\n\n                //  Draw an outline around the Area.\n                if (isOutline()) {\n                    g2.setStroke(lookupSeriesOutlineStroke(series));\n                    g2.setPaint(lookupSeriesOutlinePaint(series));\n                    g2.draw(areaState.getSeriesArea());\n                }\n            }\n\n            int domainAxisIndex = plot.getDomainAxisIndex(domainAxis);\n            int rangeAxisIndex = plot.getRangeAxisIndex(rangeAxis);\n            XYCrosshairState crosshairState = state.getCrosshairState();\n            updateCrosshairValues(crosshairState, x1, ph1 + y1, \n                    domainAxisIndex, rangeAxisIndex, transX1, transY1,\n                    orientation);\n\n        }\n        else if (pass == 1) {\n            // On second pass render shapes and collect entity and tooltip\n            // information\n\n            Shape shape = null;\n            if (getPlotShapes()) {\n                shape = getItemShape(series, item, selected);\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transX1, transY1);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = ShapeUtilities.createTranslatedShape(shape,\n                            transY1, transX1);\n                }\n                if (!nullPoint) {\n                    if (getShapePaint() != null) {\n                        g2.setPaint(getShapePaint());\n                    }\n                    else {\n                        g2.setPaint(seriesPaint);\n                    }\n                    if (getShapeStroke() != null) {\n                        g2.setStroke(getShapeStroke());\n                    }\n                    else {\n                        g2.setStroke(seriesStroke);\n                    }\n                    g2.draw(shape);\n                }\n            }\n            else {\n                if (plot.getOrientation() == PlotOrientation.VERTICAL) {\n                    shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,\n                            6.0, 6.0);\n                }\n                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {\n                    shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,\n                            6.0, 6.0);\n                }\n            }\n            EntityCollection entities = state.getEntityCollection();\n            if (entities != null) {\n                addEntity(entities, shape, dataset, series, item, selected,\n                        0.0, 0.0);\n            }\n        }\n    }"
}