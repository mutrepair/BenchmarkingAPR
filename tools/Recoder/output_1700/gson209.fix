{
          "0": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(true){          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "1": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement != null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "2": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(childGenericType){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "3": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(map){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "4": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(entry){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "5": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "6": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(src){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "7": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(value.getClass()){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "8": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nchildGenericType = new TypeInfoMap(typeOfSrc);\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "9": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement == null)){\ncontinue;\n}        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "10": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(value){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "11": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(typeOfSrc){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "12": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(!childGenericType){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "13": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(!entry){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "14": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement != null)){\ncontinue;\n}        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "15": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((value != null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "16": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(!value){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "17": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nmap.add(String.valueOf(entry.getKey()), valueElement);\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "18": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nvalueElement = context.serialize(value, childType);\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "19": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nvalueElement = JsonNull.createJsonNull();\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "20": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(\"null\"){          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "21": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nreturn map;        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "22": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement == null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "23": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(value.isEmpty()){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "24": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((value != null)){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "25": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(childGenericType.isEmpty()){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "26": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(-true){          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "27": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nvalueElement++;\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "28": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nreturn null;        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "29": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType != null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "30": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nbreak;\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "31": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nbreak;\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "32": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement != null)){\nreturn;\n}        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "33": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((entry != null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "34": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childType != null)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "35": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nreturn;\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "36": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement != null)){\nreturn map;}        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "37": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType == null)){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "38": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((typeOfSrc instanceof ParameterizedType)){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "39": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((valueElement == null)){\nreturn map;}        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "40": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\n(Map entry = ;\n:(Set<Map>)src.entrySet())        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "41": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(false){          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "42": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((typeOfSrc instanceof ParameterizedType)){\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n}\n      }\n      return map;\n    }",
          "43": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(null){          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "44": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType && (childGenericType != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "45": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nreturn;\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "46": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(((valueElement != null) && (typeOfSrc instanceof ParameterizedType))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "47": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType && (childGenericType == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "48": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((entry && (childGenericType != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "49": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((value && (childGenericType != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "50": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType && (entry != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "51": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((value && (childGenericType == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "52": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((entry && (childGenericType == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "53": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nchildGenericType = new TypeInfoMap(typeOfSrc);\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "54": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((childGenericType && (entry == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "55": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((entry && (entry != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "56": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif((value && (entry != null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "57": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nJsonElement valueElement = ;\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "58": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nObject value = entry.getValue();\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "59": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nvalueElement = JsonNull.createJsonNull();\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "60": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nvalueElement = context.serialize(value, childType);\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "61": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nType childGenericType = null;\n        if (false) {          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "62": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(((valueElement != null) && (childGenericType == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "63": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nmap.add(String.valueOf(entry.getKey()), valueElement);\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }",
          "64": "    public JsonElement serialize(Map src, Type typeOfSrc, JsonSerializationContext context) {\n      JsonObject map = new JsonObject();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoMap(typeOfSrc).getValueType();        \n      }\n\n      for (Map.Entry entry : (Set<Map.Entry>) src.entrySet()) {\n        Object value = entry.getValue();\n\n        JsonElement valueElement;\nif(((valueElement != null) && (entry == null))){\n          valueElement = JsonNull.createJsonNull();\n        } else {\n          Type childType = (childGenericType == null)\n              ? value.getClass() : childGenericType;\n          valueElement = context.serialize(value, childType);\n        }\n        map.add(String.valueOf(entry.getKey()), valueElement);\n      }\n      return map;\n    }"
}