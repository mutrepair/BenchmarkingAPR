{
          "0": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n <= startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "1": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n >= startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "2": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "3": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 2;(n < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "4": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(startLine < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "5": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n > startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "6": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n - startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "7": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);startLine) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "8": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nend = js.indexOf(\"null\", end);\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "9": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nend++;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "10": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < SOURCE_EXCERPT_REGION_LENGTH);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "11": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n == startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "12": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\npos = (nextpos + 1);\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "13": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\njs = getCode();\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "14": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;( < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "15": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < );n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "16": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nreturn null;    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "17": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine != -1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "18": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif(((SOURCE_EXCERPT_REGION_LENGTH + 1) / 2)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "19": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((lineNumber - ((SOURCE_EXCERPT_REGION_LENGTH + 1) / 2))){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "20": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(end < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "21": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\n((n < startLine))      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "22": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\n    for (int n = 0; n < startLine; n++) {if(0!=1)break;      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "23": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nMath.findLineOffsets();\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "24": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nMath.clearCachedSource();\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "25": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfindLineOffsets();\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "26": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nclearCachedSource();\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "27": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(SOURCE_EXCERPT_REGION_LENGTH < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "28": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((SOURCE_EXCERPT_REGION_LENGTH + 1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "29": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < (n < startLine));n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "30": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < SOURCE_EXCERPT_REGION_LENGTH);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "31": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == -1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "32": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < 0);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "33": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < end);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "34": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(lineNumber < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "35": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nreturn new SimpleRegion(startLine, endLine, js.substring(pos, end));    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "36": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < lineNumber);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "37": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < n);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "38": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 1;(n < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "39": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine != \"null\")){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "40": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);SOURCE_EXCERPT_REGION_LENGTH) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "41": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine != null)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "42": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);end) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "43": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n >> startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "44": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nstartLine = startLine;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "45": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(pos < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "46": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n + startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "47": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif(((lineNumber - ((SOURCE_EXCERPT_REGION_LENGTH + 1) / 2)) + 1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "48": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < SOURCE_EXCERPT_REGION_LENGTH);n++) {    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "49": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < pos);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "50": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nreturn new SimpleRegion(startLine, endLine, js.substring(pos, last));    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "51": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == null)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "52": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine != 1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "53": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == 0)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "54": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);lineNumber) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "55": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n != startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "56": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < startLine);pos) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "57": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(long n = 0;(n < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "58": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine > 0)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "59": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < (n < startLine));n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "60": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nbreak;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "61": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == -1)){\ncontinue;\n}    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "62": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == -1)){\nreturn null;}    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "63": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nreturn;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "64": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nreturn new SimpleRegion(startLine, endLine, js.substring(pos));    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "65": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\npos = startLine;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "66": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == -1)){\nbreak;\n}    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "67": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n / startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "68": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((end == -1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "69": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((nextpos == -1)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "70": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == 0)){\nreturn null;}    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "71": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine == null)){\nreturn null;}    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "72": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nif((startLine < 0)){\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n}\n  }",
          "73": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < 1);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "74": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < endLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "75": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\n(;;)      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "76": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = -1;(n < startLine);n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "77": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\ncontinue;\n    for (int n = 0; n < startLine; n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }",
          "78": "  public Region getRegion(int lineNumber) {\n    String js = \"\";\n    try {\n      js = getCode();\n    } catch (IOException e) {\n      return null;\n    }\n    int pos = 0;\n    int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);\nfor(int n = 0;(n < (n - 0));n++) {      int nextpos = js.indexOf('\\n', pos);\n      if (nextpos == -1) {\n        break;\n      }\n      pos = nextpos + 1;\n    }\n    int end = pos;\n    int endLine = startLine;\n    for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++) {\n      end = js.indexOf('\\n', end);\n      if (end == -1) {\n        break;\n      }\n      end++;\n    }\n    if (lineNumber >= endLine) {\n      return null;\n    }\n    if (end == -1) {\n      int last = js.length() - 1;\n      if (js.charAt(last) == '\\n') {\n        return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));\n      } else {\n        return new SimpleRegion(startLine, endLine, js.substring(pos));\n      }\n    } else {\n      return new SimpleRegion(startLine, endLine, js.substring(pos, end));\n    }\n  }"
}