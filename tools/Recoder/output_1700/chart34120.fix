{
          "0": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "1": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.serialVersionUID);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "2": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.DAY_SEGMENT_SIZE);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "3": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.HOUR_SEGMENT_SIZE);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "4": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.FIFTEEN_MINUTE_SEGMENT_SIZE);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "5": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.MINUTE_SEGMENT_SIZE);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "6": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.FIRST_MONDAY_AFTER_1900);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "7": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "8": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.startTime);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "9": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsIncludedSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "10": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsExcludedSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "11": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentNumber);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "12": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentStart);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "13": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentEnd);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "14": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.millisecond);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "15": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentCount);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "16": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.x);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "17": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue + this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "18": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (x - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "19": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.result);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "20": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "21": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "22": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue / this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "23": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (result - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "24": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (millisecond - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "25": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (startTime - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "26": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "27": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (segmentsIncludedSize - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "28": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue % this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "29": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue * this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "30": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nint y = (shiftedSegmentedValue - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "31": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nfinal long y = (shiftedSegmentedValue - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "32": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\ninc();\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "33": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\ndec();\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "34": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nmoveIndexToStart();\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "35": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nmoveIndexToEnd();\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "36": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue <= this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "37": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (millisecond - 1);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "38": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif((x != null)){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "39": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue >= this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "40": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nint p = ;\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "41": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue == this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "42": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif((x < this.segmentsIncludedSize)){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "43": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nresult = toTimelineValue((this.startTime + (this.segmentsGroupSize * (groupIndex + 1))));\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "44": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.serialVersionUID.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "45": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.DAY_SEGMENT_SIZE.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "46": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.HOUR_SEGMENT_SIZE.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "47": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.FIFTEEN_MINUTE_SEGMENT_SIZE.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "48": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.MINUTE_SEGMENT_SIZE.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "49": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.FIRST_MONDAY_AFTER_1900.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "50": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentSize.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "51": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.startTime.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "52": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsIncludedSize.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "53": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsExcludedSize.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "54": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentsGroupSize.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "55": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentNumber.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "56": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentStart.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "57": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentEnd.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "58": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.millisecond.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "59": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.segmentCount.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "60": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.firstMondayAfter1900().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "61": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getStartTime().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "62": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentsExcludedSize().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "63": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentsGroupSize().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "64": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentsIncludedSize().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "65": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentSize().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "66": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentNumber().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "67": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentCount().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "68": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentStart().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "69": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentEnd().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "70": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getMillisecond().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "71": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue - this.getSegmentNumberRelativeToGroup().segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "72": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nresult = toTimelineValue(millisecond);\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "73": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nreturn result;                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "74": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((Segment)this.exceptionSegments.get(p) + 1);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "75": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = shiftedSegmentedValue;\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "76": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "77": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.startTime + (this.segmentsGroupSize * (groupIndex + 1)));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "78": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nSegment segment = getSegment(millisecond);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "79": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nsegment = getSegment(millisecond = ((Segment)this.exceptionSegments.get(p) + 1));\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "80": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) - 0);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "81": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (wholeExceptionsBeforeDomainValue * this.segmentSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "82": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) + shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "83": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif((x > 0)){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "84": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize * (groupIndex + 1));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "85": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nresult = (((this.segmentsIncludedSize * y) + x) - (wholeExceptionsBeforeDomainValue * this.segmentSize));\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "86": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsIncludedSize * (y + 1));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "87": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) - (shiftedSegmentedValue - this.segmentsGroupSize));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "88": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nresult = ((this.segmentsIncludedSize * (y + 1)) - (wholeExceptionsBeforeDomainValue * this.segmentSize));\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "89": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = setStartTime(shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "90": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = addException(shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "91": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = addBaseTimelineException(shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "92": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = inc(shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "93": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = dec(shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "94": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif(segment.inExceptionSegments()){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "95": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((shiftedSegmentedValue - this.segmentsGroupSize) - 1);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "96": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nreturn;\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "97": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif((groupIndex + 1)){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "98": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif(x){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "99": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "100": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong shiftedSegmentedValue = (millisecond - this.startTime);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "101": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue >> this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "102": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (shiftedSegmentedValue << this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "103": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nif((groupMilliseconds >= this.segmentsIncludedSize)){\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n}\n            }\n        }\n\n        return result;\n    }",
          "104": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - this.segmentsGroupSize) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "105": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "106": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong wholeExceptionsBeforeDomainValue = getExceptionSegmentCount(this.startTime, (millisecond - 1));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "107": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nbreak;\n                long y = shiftedSegmentedValue - this.segmentsGroupSize;\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "108": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong x = (shiftedSegmentedValue % this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "109": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong groupIndex = (rawMilliseconds / this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "110": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.setStartTime(shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "111": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.addException(shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "112": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.addBaseTimelineException(shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "113": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.inc(shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "114": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.dec(shiftedSegmentedValue) - this.segmentsGroupSize);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "115": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - this.segmentsGroupSize) - (shiftedSegmentedValue - this.segmentsGroupSize));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "116": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - shiftedSegmentedValue) - (shiftedSegmentedValue - this.segmentsGroupSize));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "117": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "118": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.setStartTime(shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "119": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.addException(shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "120": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.addBaseTimelineException(shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "121": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.inc(shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "122": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = (this.segmentsGroupSize.dec(shiftedSegmentedValue) - shiftedSegmentedValue);\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "123": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - this.segmentsGroupSize) - (this.segmentsGroupSize - this.segmentsGroupSize));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "124": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - this.segmentsGroupSize) - (this.segmentsGroupSize - shiftedSegmentedValue));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "125": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - shiftedSegmentedValue) - (this.segmentsGroupSize - this.segmentsGroupSize));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }",
          "126": "    public long toTimelineValue(long millisecond) {\n\n        long result;\n        long rawMilliseconds = millisecond - this.startTime;\n        long groupMilliseconds = rawMilliseconds % this.segmentsGroupSize;\n        long groupIndex = rawMilliseconds / this.segmentsGroupSize;\n\n        if (groupMilliseconds >= this.segmentsIncludedSize) {\n            result = toTimelineValue(this.startTime + this.segmentsGroupSize\n                    * (groupIndex + 1));\n        }\n        else {\n            Segment segment = getSegment(millisecond);\n            if (segment.inExceptionSegments()) {\n                int p;\n                while ((p = binarySearchExceptionSegments(segment)) >= 0) {\n                    segment = getSegment(millisecond = ((Segment)\n                            this.exceptionSegments.get(p)).getSegmentEnd() + 1);\n                }\n                result = toTimelineValue(millisecond);\n            }\n            else {\n                long shiftedSegmentedValue = millisecond - this.startTime;\n                long x = shiftedSegmentedValue % this.segmentsGroupSize;\nlong y = ((this.segmentsGroupSize - shiftedSegmentedValue) - (this.segmentsGroupSize - shiftedSegmentedValue));\n\n                long wholeExceptionsBeforeDomainValue =\n                    getExceptionSegmentCount(this.startTime, millisecond - 1);\n\n//                long partialTimeInException = 0;\n//                Segment ss = getSegment(millisecond);\n//                if (ss.inExceptionSegments()) {\n//                    partialTimeInException = millisecond\n                //     - ss.getSegmentStart();\n//                }\n\n                if (x < this.segmentsIncludedSize) {\n                    result = this.segmentsIncludedSize * y\n                             + x - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n                else {\n                    result = this.segmentsIncludedSize * (y + 1)\n                             - wholeExceptionsBeforeDomainValue\n                             * this.segmentSize;\n                             // - partialTimeInException;\n                }\n            }\n        }\n\n        return result;\n    }"
}