{
          "0": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "1": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind > -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "2": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind <= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "3": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind < -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "4": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind == -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "5": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind != -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "6": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((builder >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "7": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= 0)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "8": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((params.getFirstChild() != null)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "9": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((i < argsToBind)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "10": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nsetStruct();\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "11": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nsetDict();\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "12": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nclearCachedValues();\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "13": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((origParams >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "14": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= 2)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "15": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((registry >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "16": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind && -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "17": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind || -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "18": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >>> -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "19": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind & -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "20": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(argsToBind){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "21": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInstanceType()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "22": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isConstructor()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "23": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInterface()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "24": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isOrdinaryFunction()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "25": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesStructs()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "26": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesDicts()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "27": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(canBeCalled()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "28": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasImplementedInterfaces()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "29": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isReturnTypeInferred()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "30": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasInstanceType()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "31": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasCachedValues()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "32": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasAnyTemplateTypesInternal()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "33": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nparams.removeFirstChild();\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "34": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind == -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "35": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "36": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind != -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "37": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (params.getFirstChild() != null))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "38": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nbuilder.withParamsNode(params);\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "39": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind > -1)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "40": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInstanceType()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "41": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isConstructor()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "42": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInterface()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "43": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isOrdinaryFunction()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "44": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesStructs()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "45": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesDicts()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "46": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(canBeCalled()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "47": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasImplementedInterfaces()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "48": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isReturnTypeInferred()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "49": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasInstanceType()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "50": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasCachedValues()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "51": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasAnyTemplateTypesInternal()){\nreturn builder.build();}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "52": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (i < argsToBind))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "53": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind != -1)){\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n}\n  }",
          "54": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= -2)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "55": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((builder != -1)){\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n}\n  }",
          "56": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!argsToBind){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "57": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind > argsToBind)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "58": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= -1)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "59": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= 1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "60": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!isInstanceType()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "61": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!isConstructor()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "62": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!isInterface()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "63": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!isOrdinaryFunction()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "64": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!makesStructs()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "65": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!makesDicts()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "66": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!canBeCalled()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "67": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!hasImplementedInterfaces()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "68": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!isReturnTypeInferred()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "69": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!hasInstanceType()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "70": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!hasCachedValues()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "71": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(!hasAnyTemplateTypesInternal()){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "72": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > 0))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "73": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (origParams != null))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "74": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nbuilder++;\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "75": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind != -1)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "76": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(( >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "77": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) || (argsToBind > -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "78": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInstanceType()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "79": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isConstructor()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "80": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isInterface()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "81": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isOrdinaryFunction()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "82": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesStructs()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "83": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(makesDicts()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "84": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(canBeCalled()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "85": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasImplementedInterfaces()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "86": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(isReturnTypeInferred()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "87": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasInstanceType()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "88": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasCachedValues()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "89": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(hasAnyTemplateTypesInternal()){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "90": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((i < argsToBind)){\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n}\n  }",
          "91": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > argsToBind))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "92": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((params.getFirstChild() != null)){\n    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n}\n  }",
          "93": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind != -1) && (argsToBind >= -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "94": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind < -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "95": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind >= null)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "96": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind == -1) && (argsToBind >= -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "97": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind == -1)){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "98": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((argsToBind != -1)){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "99": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((builder == -1)){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "100": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind == null))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "101": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) || (argsToBind == -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "102": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((builder != -1)){\nreturn null;}    if (argsToBind >= -1) {      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "103": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > null))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "104": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) || (argsToBind > 0))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "105": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind != null))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "106": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind >= -1))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "107": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((i >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "108": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) || (argsToBind > argsToBind))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "109": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind < 0))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "110": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > builder))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "111": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind < argsToBind))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "112": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((params >= -1)){      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "113": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > registry))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "114": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif(((argsToBind >= -1) && (argsToBind > origParams))){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }",
          "115": "  public FunctionType getBindReturnType(int argsToBind) {\n    FunctionBuilder builder = new FunctionBuilder(registry)\n        .withReturnType(getReturnType())\n        .withTemplateKeys(getTemplateKeys());\nif((origParams != null)){\n      Node origParams = getParametersNode();\n      if (origParams != null) {\n        Node params = origParams.cloneTree();\n        for (int i = 1; i < argsToBind && params.getFirstChild() != null; i++) {\n          if (params.getFirstChild().isVarArgs()) {\n            break;\n          }\n          params.removeFirstChild();\n        }\n        builder.withParamsNode(params);\n      }\n    }\n    return builder.build();\n  }"
}