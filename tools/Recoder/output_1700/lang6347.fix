{
          "0": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i < nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "1": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i > nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "2": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "3": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i >= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "4": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= i);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "5": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= bits);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "6": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= shift);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "7": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);i) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "8": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i || nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "9": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift != null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "10": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(bits <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "11": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= srcPos);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "12": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= dstInit);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "13": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nshift = ((i * 4) + dstPos);\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "14": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i != null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "15": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);bits) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "16": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i && nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "17": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(long i = 0;(i <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "18": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(shift <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "19": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i == nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "20": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nout = ((out & ~mask) | bits);\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "21": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= i++);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "22": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);shift) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "23": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "24": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= src);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "25": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(srcPos <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "26": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= );i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "27": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nreturn 0;        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "28": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\ni++;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "29": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nshift++;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "30": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "31": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i++ <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "32": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= mask);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "33": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);srcPos) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "34": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(dstInit <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "35": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= out);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "36": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift != 64)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "37": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nreturn;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "38": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= nHex);dstInit) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "39": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i != nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "40": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nshift = shift;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "41": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nshift = 0;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "42": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((((nHex - 1) * 4) + dstPos)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "43": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((0xfL & hexDigitToInt(src.charAt((i + srcPos))))){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "44": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nreturn out;        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "45": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i <= -i);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "46": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nsrc.charAt((i + srcPos));\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "47": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((out & ~mask)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "48": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i > 0)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "49": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\nreturn dstInit;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "50": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((out != null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "51": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nreturn dstInit;        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "52": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((src != null)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "53": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\nreturn 0;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "54": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\ncontinue;\n}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "55": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift != 0)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "56": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;( <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "57": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(src <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "58": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nbreak;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "59": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == null)){\ncontinue;\n}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "60": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == shift)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "61": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i < 0)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "62": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift != shift)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "63": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i & nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "64": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\nreturn out;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "65": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 1;(i <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "66": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == 64)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "67": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == null)){\nreturn 0;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "68": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nshift = out;\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "69": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == 0)){\n        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n}\n    }",
          "70": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(mask <= nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "71": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i < (i <= nHex));i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "72": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == null)){\nreturn dstInit;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "73": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;(i | nHex);i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "74": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((i == null)){\nreturn out;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "75": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift != null)){\nreturn 0;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "76": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == shift)){\nreturn 0;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "77": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nif((shift == null)){\nreturn false;}        for (int i = 0; i <= nHex; i++ ) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }",
          "78": "    public static long hexToLong(final String src, final int srcPos, final long dstInit, final int dstPos, final int nHex) {\n        if (0 == nHex) {\n            return dstInit;\n        }\n        if ((nHex - 1) * 4 + dstPos >= 64) {\n            throw new IllegalArgumentException(\n                \"(nHexs-1)*4+dstPos is greather or equal to than 64\");\n        }\n        long out = dstInit;\n        int shift = 0;\nfor(int i = 0;((i <= nHex) || (dstPos < dstPos));i++) {            shift = i * 4 + dstPos;\n            final long bits = (0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift;\n            final long mask = 0xfL << shift;\n            out = (out & ~mask) | bits;\n        }\n        return out;\n    }"
}