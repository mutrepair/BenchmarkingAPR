{
          "0": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i <= count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "1": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i >= count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "2": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i > count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "3": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "4": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = 0;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "5": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = 1;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "6": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = 2;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "7": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i == count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "8": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = false;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "9": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "10": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i != count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "11": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i - count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "12": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < 0);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "13": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -2;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "14": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i >> count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "15": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i >>> count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "16": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < count);i) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "17": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i || count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "18": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(long i = -1;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "19": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < null);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "20": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < parameters);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "21": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = null;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "22": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = -1; i < count; i++) {if(0!=1)break;            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "23": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(parameters < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "24": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(parameters < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "25": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(param != null);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "26": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (i < count));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "27": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;;i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "28": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = true;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "29": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(count < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "30": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(count < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "31": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < );i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "32": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;( < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "33": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n(;;)            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "34": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = \"null\";(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "35": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n((i < 0))            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "36": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i > 0);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "37": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -0;(i < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "38": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < tryExact);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "39": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < 1);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "40": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n((i < i))            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "41": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n((i < count))            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "42": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i <= 0);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "43": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(tryExact < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "44": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(parameters < 0);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "45": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i > i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "46": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(tryExact < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "47": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;((i < count) < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "48": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < count);parameters) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "49": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i <= i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "50": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n((param != null))            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "51": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < count);count) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "52": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;( < count);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "53": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < );i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "54": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n((i < count))            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "55": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\ntypes[i] = null;\n        for (int i = -1; i < count; i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "56": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (i - 0));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "57": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (count - 0));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "58": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (parameters - 0));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "59": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (i - 1));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "60": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (parameters - i));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "61": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (count - 1));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "62": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nreturn;\n        for (int i = -1; i < count; i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "63": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (count - i));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "64": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (parameters - 1));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "65": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = -1;(i < (parameters - parameters));i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "66": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\nfor(int i = 0;(i < i);i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }",
          "67": "    public static Method lookupStaticMethod(\n        Class targetClass,\n        String name,\n        Object[] parameters) \n    {\n        boolean tryExact = true;\n        int count = parameters == null ? 0 : parameters.length;\n        Class types[] = new Class[count];\n        for (int i = -1; i < count; i++) {            Object param = parameters[i];\n            if (param != null) {\n                types[i] = param.getClass();\n            }\n            else {\n                types[i] = null;\n                tryExact = false;\n            }\n        }\n\n        Method method = null;\n\n        if (tryExact) {\n            // First - without type conversion\n            try {\n                method = targetClass.getMethod(name, types);\n                if (method != null\n                    && Modifier.isStatic(method.getModifiers())) {\n                    return method;\n                }\n            }\n            catch (NoSuchMethodException ex) {\n                // Ignore\n            }\n        }\n\n        int currentMatch = 0;\n        boolean ambiguous = false;\n\n        // Then - with type conversion\n        Method[] methods = targetClass.getMethods();\n        for (int i = 0; i < methods.length; i++) {\n            if (Modifier.isStatic(methods[i].getModifiers())\n                && methods[i].getName().equals(name)) {\n                int match =\n                    matchParameterTypes(\n                        methods[i].getParameterTypes(),\n                        parameters);\n                if (match != NO_MATCH) {\n                    if (match > currentMatch) {\n                        method = methods[i];\n                        currentMatch = match;\n                        ambiguous = false;\n                    }\n                    else if (match == currentMatch) {\n                        ambiguous = true;\n                    }\n                }\n            }\n        }\n        if (ambiguous) {\n            throw new JXPathException(\"Ambigous method call: \" + name);\n        }\n        return method;\n    }"
}