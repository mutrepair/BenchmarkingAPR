{
          "0": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "1": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx <= half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "2": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "3": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx >= half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "4": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = 0,leftIdx = 0;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "5": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(buf < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "6": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "7": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(buffer < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "8": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "9": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "10": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(size < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "11": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < leftIdx);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "12": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "13": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "14": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(half < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "15": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "16": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = 1,leftIdx = 1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "17": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "18": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "19": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(swap < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "20": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf != null)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "21": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx > half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "22": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < rightIdx);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "23": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = 2,leftIdx = 2;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "24": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "25": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "26": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nclose();\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "27": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nreset();\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "28": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nflush();\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "29": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx - half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "30": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "31": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);rightIdx) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "32": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "33": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < (leftIdx < half));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "34": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "35": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(size - 1);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "36": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < buf);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "37": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < (leftIdx < half));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "38": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "39": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf == null)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "40": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "41": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < buffer);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "42": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);buf) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "43": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < (size - 1));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "44": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < size);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "45": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx-- < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "46": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < (size - 1));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "47": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((half != null)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "48": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "49": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < size);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "50": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "51": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);buffer) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "52": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;;leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "53": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nbuf[leftIdx] = buf[rightIdx];\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "54": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "55": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nbuf[rightIdx] = swap;\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "56": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf != 0)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "57": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx++ < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "58": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx == half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "59": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nbuf = buf;\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "60": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "61": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf == null)){\nreturn null;}        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "62": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "63": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "64": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "65": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((leftIdx != null)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "66": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);size) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "67": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(-leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "68": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((size != null)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "69": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);half) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "70": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < swap);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "71": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < leftIdx);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "72": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx >> half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "73": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf > 0)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "74": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(leftIdx < half);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "75": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(buf < (leftIdx < half));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "76": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((buf == null)){\nreturn this;}        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "77": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < buffer);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "78": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nif((size == 0)){\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n}\n    }",
          "79": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(size < leftIdx);leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "80": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nreturn;\n        for (int leftIdx = -1, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "81": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < (leftIdx - 1));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }",
          "82": "    public StrBuilder reverse() {\n        if (size == 0) {\n            return this;\n        }\n        \n        final int half = size / 2;\n        final char[] buf = buffer;\nfor(int leftIdx = -1,leftIdx = -1;(rightIdx < (size - buf));leftIdx++) {            final char swap = buf[leftIdx];\n            buf[leftIdx] = buf[rightIdx];\n            buf[rightIdx] = swap;\n        }\n        return this;\n    }"
}