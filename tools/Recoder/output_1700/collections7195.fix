{
          "0": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "1": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn true;                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "2": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(true){                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "3": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nbreak;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "4": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn false;                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "5": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(false){                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "6": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nconvertToMap();\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "7": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nclear();\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "8": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nremove();\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "9": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreset();\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "10": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "11": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\ncontinue;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "12": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn delegateMap.containsKey(key);                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "13": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nbreak;\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "14": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((hash3 == hashCode)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "15": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif(isEmpty()){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "16": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif(hasNext()){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "17": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((hash1 == hashCode)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "18": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(isEmpty()){\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "19": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(hasNext()){\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "20": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif(key){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "21": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif((hash3 == hashCode)){\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "22": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((hash3 == hashCode)){\n}\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "23": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif(!isEmpty()){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "24": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif(!hasNext()){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "25": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif((hash1 == hashCode)){\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "26": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(-true){                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "27": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((hash1 == hashCode)){\n}\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "28": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "29": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key == null)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "30": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key != null)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "31": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn true;break;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "32": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key == 0)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "33": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nif(\"null\"){                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "34": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nreturn false;break;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "35": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\ncontinue;\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "36": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key == key)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "37": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key == false)){\nreturn true;}                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "38": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nbreak;\nbreak;\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "39": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\nif((key == null)){\n}\n                        }\n                    case 2:\n                        if (false) {                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }",
          "40": "    public boolean containsKey(final Object key) {\n        if (delegateMap != null) {\n            return delegateMap.containsKey(key);\n        }\n        if (key == null) {\n            switch (size) {  // drop through\n                case 3:\n                    if (key3 == null) {\n                        return true;\n                    }\n                case 2:\n                    if (key2 == null) {\n                        return true;\n                    }\n                case 1:\n                    if (key1 == null) {\n                        return true;\n                    }\n            }\n        } else {\n            if (size > 0) {\n                final int hashCode = key.hashCode();\n                switch (size) {  // drop through\n                    case 3:\n                        if (hash3 == hashCode && key.equals(key3)) {\n                            return true;\n                        }\n                    case 2:\nreturn;\n                            return true;\n                        }\n                    case 1:\n                        if (hash1 == hashCode && key.equals(key1)) {\n                            return true;\n                        }\n                }\n            }\n        }\n        return false;\n    }"
}