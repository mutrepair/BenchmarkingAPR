{
          "0": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s <= seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "1": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s >= seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "2": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = 0;(s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "3": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "4": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(seriesCount < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "5": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = 1;(s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "6": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s > seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "7": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < s);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "8": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = 2;(s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "9": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s - seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "10": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < (s < seriesCount));s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "11": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == null)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "12": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;;s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "13": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < seriesCount);s) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "14": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == null)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "15": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount != null)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "16": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s == seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "17": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(seriesCount < (s < seriesCount));s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "18": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < seriesCount);seriesCount) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "19": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s++ < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "20": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == null)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "21": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == 0)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "22": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(seriesKey < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "23": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s >> seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "24": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\n((s < seriesCount))           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "25": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == 0)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "26": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\n((s < (s < seriesCount)))           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "27": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount < 0)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "28": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(long s = -1;(s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "29": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount != null)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "30": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount < 0)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "31": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s >>> seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "32": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount > 0)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "33": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;( < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "34": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nseriesCount++;\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "35": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "36": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount < 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "37": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount > 0)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "38": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(-s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "39": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\n((seriesCount < (s < seriesCount)))           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "40": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount >= 0)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "41": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount != null)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "42": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < s++);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "43": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == seriesCount)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "44": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount > 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "45": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nseriesCount = seriesCount;\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "46": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < seriesKey);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "47": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount >= 0)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "48": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s * seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "49": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount <= 0)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "50": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == seriesKey)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "51": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nreturn -1;        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "52": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(~s < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "53": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount != 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "54": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;( < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "55": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == -1)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "56": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nseriesCount = getSeriesCount();\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "57": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nseriesCount = 0;\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "58": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s / seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "59": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s <= (s < seriesCount));s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "60": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount <= 0)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "61": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == seriesCount)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "62": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesKey == null)){\nreturn -1;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "63": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount == -1)){\nreturn s;}        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "64": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\ngetSeriesCount();\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "65": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount >= 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "66": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nif((seriesCount <= 0)){\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n}\n        }\n        return -1;\n    }",
          "67": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;( < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "68": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nreturn s;        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "69": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(seriesCount++ < seriesCount);s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "70": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nreturn;\n        for (int s = -1; s < seriesCount; s++) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }",
          "71": "    public int indexOf(Comparable seriesKey) {\n        int seriesCount = getSeriesCount();\nfor(int s = -1;(s < seriesCount);seriesKey) {           if (getSeriesKey(s).equals(seriesKey)) {\n               return s;\n           }\n        }\n        return -1;\n    }"
}