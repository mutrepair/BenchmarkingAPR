{
          "0": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((matrix.getRowDimension() != -1)){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "1": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() >= nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "2": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((matrix.getColumnDimension() != nCols)){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "3": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "4": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getName() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "5": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getName() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "6": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getColumnDimension() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "7": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getRowDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "8": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() <= nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "9": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() > nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "10": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() == nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "11": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "12": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() < nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "13": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(matrix.getRowDimension()){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "14": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || ((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols)))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "15": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.toString() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "16": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) && (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "17": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != matrix))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "18": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != 2) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "19": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getEntry() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "20": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.toString() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "21": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (row.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "22": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) && (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "23": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (nCols.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "24": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols)) || (matrix.getRowDimension() != -1))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "25": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getRowDimension() != -1))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "26": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != row))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "27": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((((matrix.getRowDimension() != -1) || (matrix.getRowDimension() != -1)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "28": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols)) && (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "29": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (MatrixUtils.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "30": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((matrix.getColumnDimension() != nCols)){\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n}\n    }",
          "31": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != i))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "32": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getEntry() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "33": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((matrix.getRowDimension() != -1)){\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n}\n    }",
          "34": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() - nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "35": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != 1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "36": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.get() != -1) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "37": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != ))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "38": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "39": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != -nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "40": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.get() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "41": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(nCols){\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n}\n    }",
          "42": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nreturn;\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "43": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() >> nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "44": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != 0) || (matrix.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "45": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() >>> nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "46": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() + nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "47": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((i < nCols)){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "48": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nsetEntry(row, i, matrix.getEntry(0, i));\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "49": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (i.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "50": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((matrix.getRowDimension() != -1) || (.getColumnDimension() != nCols))){            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "51": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nMatrixUtils.checkRowIndex(this, row);\n        if ((matrix.getRowDimension() != -1) ||\n            (matrix.getColumnDimension() != nCols)) {            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "52": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix == 0)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "53": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix == matrix)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "54": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix == -1)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "55": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix != 0)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "56": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix == nCols)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "57": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (nCols == matrix)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "58": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) && (matrix == matrix)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "59": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif(((((matrix.getRowDimension() != -1) || (matrix != matrix)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }",
          "60": "    public void setRowMatrix(final int row, final RealMatrix matrix)\n        throws OutOfRangeException, MatrixDimensionMismatchException {\n        MatrixUtils.checkRowIndex(this, row);\n        final int nCols = getColumnDimension();\nif((((((matrix.getRowDimension() != -1) || (matrix.getColumnDimension() != nCols)) || (matrix == 0)) || (matrix.getColumnDimension() != nCols)) || (matrix.getColumnDimension() != nCols))){\n            throw new MatrixDimensionMismatchException(matrix.getRowDimension(),\n                                                       matrix.getColumnDimension(),\n                                                       1, nCols);\n        }\n        for (int i = 0; i < nCols; ++i) {\n            setEntry(row, i, matrix.getEntry(0, i));\n        }\n    }"
}