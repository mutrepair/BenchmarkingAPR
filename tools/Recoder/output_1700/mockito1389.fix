{
          "0": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "1": "    public EqualsBuilder append(int lhs, int rhs) {\nif(isEquals){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "2": "    public EqualsBuilder append(int lhs, int rhs) {\nif(isEquals()){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "3": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals != true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "4": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals >= true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "5": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals <= true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "6": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals > true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "7": "    public EqualsBuilder append(int lhs, int rhs) {\nif(!isEquals){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "8": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals < true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "9": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == true)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "10": "    public EqualsBuilder append(int lhs, int rhs) {\nif(!isEquals()){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "11": "    public EqualsBuilder append(int lhs, int rhs) {\nif((lhs == rhs)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "12": "    public EqualsBuilder append(int lhs, int rhs) {\nif(isEquals(isEquals)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "13": "    public EqualsBuilder append(int lhs, int rhs) {\nif((lhs == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "14": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals != true)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "15": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (rhs == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "16": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals.isEquals == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "17": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals().isEquals == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "18": "    public EqualsBuilder append(int lhs, int rhs) {\nif((rhs == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "19": "    public EqualsBuilder append(int lhs, int rhs) {\nif(lhs){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "20": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (isEquals == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "21": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == rhs)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "22": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == lhs)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "23": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == null)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "24": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (rhs != true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "25": "    public EqualsBuilder append(int lhs, int rhs) {\nsuper.append();\n        if (isEquals == true) {            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "26": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || isEquals())){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "27": "    public EqualsBuilder append(int lhs, int rhs) {\nisEquals = (isEquals == true);\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "28": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && (rhs == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "29": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals != null)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "30": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals != true) || (isEquals == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "31": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (isEquals != true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "32": "    public EqualsBuilder append(int lhs, int rhs) {\nisEquals = rhs;\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "33": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == false)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "34": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals() == true)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "35": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && (isEquals == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "36": "    public EqualsBuilder append(int lhs, int rhs) {\nif(this.isEquals()){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "37": "    public EqualsBuilder append(int lhs, int rhs) {\nif((rhs == true)){\nreturn null;}        if (isEquals == true) {            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "38": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && (rhs != true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "39": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (lhs == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "40": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (rhs == null))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "41": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && isEquals())){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "42": "    public EqualsBuilder append(int lhs, int rhs) {\nif(isEquals()){\nreturn false;}        if (isEquals == true) {            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "43": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (lhs == rhs))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "44": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals != lhs)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "45": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals != rhs)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "46": "    public EqualsBuilder append(int lhs, int rhs) {\nif(lhs.isEmpty()){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "47": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == isEquals())){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "48": "    public EqualsBuilder append(int lhs, int rhs) {\nif((isEquals == false)){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "49": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (isEquals == rhs))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "50": "    public EqualsBuilder append(int lhs, int rhs) {\nif((rhs != true)){\nreturn null;}        if (isEquals == true) {            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "51": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (isEquals == null))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "52": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals != true) && (isEquals == true))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "53": "    public EqualsBuilder append(int lhs, int rhs) {\nif((-isEquals == true)){            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "54": "    public EqualsBuilder append(int lhs, int rhs) {\nif(rhs){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "55": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) || (isEquals == lhs))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "56": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && (rhs == null))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }",
          "57": "    public EqualsBuilder append(int lhs, int rhs) {\nif(((isEquals == true) && (isEquals == rhs))){\n            return this;\n        }\n        isEquals = (lhs == rhs);\n        return this;\n    }"
}