{
          "0": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex == 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "1": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex != 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "2": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex > 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "3": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex >= 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "4": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex < 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "5": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex <= 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "6": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((\"null\" + columnKey)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "7": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(columnIndex){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "8": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex && 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "9": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex || 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "10": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnKey != 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "11": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(( != 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "12": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex != null)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "13": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && columnIndex)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "14": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "15": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(!columnIndex){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "16": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "17": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "18": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "19": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(columnIndex.isEmpty()){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "20": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex != columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "21": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex != columnIndex)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "22": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex == 0)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "23": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex == columnIndex)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "24": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(( != 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "25": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex == null)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "26": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(getColumnIndex(columnKey)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "27": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nremoveRow(columnIndex);\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "28": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nremoveColumn(columnIndex);\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "29": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "30": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex != null))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "31": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex == 0) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "32": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) || (columnIndex == 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "33": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) || (columnIndex == columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "34": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != null) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "35": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == null))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "36": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex < columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "37": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);        if (columnIndex != 0) {            throw new UnknownKeyException(\"Column key (\" + columnKey\n\nclear();\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "38": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex instanceof 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "39": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == \"null\"))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "40": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex > 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "41": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex > columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "42": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex < 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "43": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex != 1)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "44": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) || (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "45": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "46": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) || (columnIndex != columnIndex))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "47": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex == null) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "48": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex == columnIndex) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "49": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex + 0)){            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "50": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != columnIndex) && (columnIndex != 0))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "51": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "52": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == columnIndex.isEmpty()))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "53": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nsetObject(null, rowKey, columnKey);\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "54": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif((columnIndex != 0)){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "55": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);\nif(((columnIndex != 0) && (columnIndex == columnIndex.size()))){\n            throw new UnknownKeyException(\"Column key (\" + columnKey\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "56": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);        if (columnIndex != 0) {            throw new UnknownKeyException(\"Column key (\" + columnKey\n\nsetObject(null, rowKey, columnKey);\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }",
          "57": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        int rowIndex = getRowIndex(rowKey);\n        if (rowIndex < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey\n                    + \") not recognised.\");\n        }\n        int columnIndex = getColumnIndex(columnKey);        if (columnIndex != 0) {            throw new UnknownKeyException(\"Column key (\" + columnKey\n\nreturn;\n                    + \") not recognised.\");\n        }\n        setObject(null, rowKey, columnKey);\n\n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount;\n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n\n        // 2. check whether the column is now empty.\n        allNull = true;\n\n        for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n             item++) {\n            row = (KeyedObjects) this.rows.get(item);\n            int colIndex = row.getIndex(columnKey);\n            if (colIndex >= 0 && row.getObject(colIndex) != null) {\n                allNull = false;\n                break;\n            }\n        }\n\n        if (allNull) {\n            for (int item = 0, itemCount = this.rows.size(); item < itemCount;\n                 item++) {\n                row = (KeyedObjects) this.rows.get(item);\n                int colIndex = row.getIndex(columnKey);\n                if (colIndex >= 0) {\n                    row.removeValue(colIndex);\n                }\n            }\n            this.columnKeys.remove(columnKey);\n        }\n    }"
}