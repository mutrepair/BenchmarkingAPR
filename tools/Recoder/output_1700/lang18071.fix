{
          "0": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "1": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = max[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "2": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[j];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "3": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array != null)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "4": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "5": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = max;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "6": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "7": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = 0;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "8": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nfinal long max = array[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "9": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array++;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "10": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[array];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "11": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = ;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "12": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == null)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "13": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nmax = array[j];\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "14": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nint max = array[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "15": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = 1;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "16": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == null)){\nreturn max;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "17": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = [1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "18": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[1].[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "19": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nreturn;\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "20": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong[] max = array[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "21": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = j;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "22": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nreturn max;        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "23": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nreturn 0;        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "24": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nvalidateArray(array);\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "25": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = j[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "26": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array[1] != null)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "27": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == 0)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "28": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = 2;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "29": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array != 0)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "30": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nbreak;\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "31": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array > 0)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "32": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[array[1]];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "33": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (long)array[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "34": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = -1;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "35": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array[j] > max)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "36": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = length[1];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "37": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == null)){\nreturn 0;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "38": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == 0)){\nreturn max;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "39": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[1].[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "40": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nfor(int j = 1;(j < array.length);j++) {        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "41": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array < 0)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "42": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = ~array;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "43": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = array[(array - 1)];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "44": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array >= 0)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "45": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array[1] == null)){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "46": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = ;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "47": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = -array;\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "48": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == 0)){\nreturn 0;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "49": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\ncontinue;\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "50": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "51": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (array - 1);\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "52": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (array - array);\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "53": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (array - array[1]);\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "54": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (array - 0);\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "55": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nlong max = (array[1] - array[1]);\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "56": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif((array == null)){\nreturn 1;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "57": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif(((array != null) && (array != null))){\n        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n}\n    }",
          "58": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif(((array != null) && (array != null))){\nreturn max;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }",
          "59": "    public static long max(final long[] array) {\n        // Validates input\n        validateArray(array);\n\n        // Finds and returns max\nif(((array != null) && (array != null))){\nreturn 0;}        long max = array[1];        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }"
}