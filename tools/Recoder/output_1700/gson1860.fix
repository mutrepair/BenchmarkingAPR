{
          "0": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(true);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "1": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient();\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "2": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json != null)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "3": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(json);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "4": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson = json.setLenient(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "5": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((lenient != null)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "6": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(json.setLenient(false)){\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "7": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(null);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "8": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.parse(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "9": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json == null)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "10": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "11": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient();\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "12": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nlenient.setLenient(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "13": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json == null)){\nreturn null;}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "14": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json == null)){\nreturn Streams.parse(json);}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "15": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(this);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "16": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(!json){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "17": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(json){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "18": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nsetLenient(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "19": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nreturn json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "20": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((lenient == null)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "21": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nsetLenient();\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "22": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(!lenient){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "23": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(lenient);\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "24": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nsetLenient(json);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "25": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(json){\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "26": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(false, true);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "27": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(true, true);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "28": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(false, false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "29": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(lenient){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "30": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(true, false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "31": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(\"null\");\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "32": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(( != null)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "33": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json != null)){\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "34": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(-true);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "35": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((\"null\" + json)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "36": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((lenient == null)){\nreturn Streams.parse(json);}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "37": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((lenient == null)){\nreturn null;}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "38": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif(json){\nreturn null;}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "39": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.debug(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "40": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(null, true);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "41": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json == null)){\nreturn false;}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "42": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(-false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "43": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(null, false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "44": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nreturn;\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "45": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((e.getCause() instanceof EOFException)){\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n}\n  }",
          "46": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.add(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "47": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.setLenient(lenient);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "48": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.e(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "49": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\njson.createJsonNull(false);\n    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "50": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nreturn;\n    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "51": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nreturn Streams.parse(json);    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }",
          "52": "  public JsonElement parse(JsonReader json) throws JsonParseException {\n    boolean lenient = json.isLenient();\nif((json == null)){\nreturn true;}    json.setLenient(false);    try {\n      return Streams.parse(json);\n    } catch (StackOverflowError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (OutOfMemoryError e) {\n      throw new JsonParseException(\"Failed parsing JSON source: \" + json + \" to Json\", e);\n    } catch (JsonParseException e) {\n      if (e.getCause() instanceof EOFException) {\n        return JsonNull.createJsonNull();\n      }\n      throw e;\n    } finally {\n      json.setLenient(lenient);\n    }\n  }"
}