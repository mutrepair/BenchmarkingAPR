{
          "0": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((string.charAt((index + -1)) == c));\n\t\t}\n\t\treturn matches;\n\t}",
          "1": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((index + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "2": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn matches = (string.charAt((index + -1)) == c);\t\t}\n\t\treturn matches;\n\t}",
          "3": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) >= c);\n\t\t}\n\t\treturn matches;\n\t}",
          "4": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.isNextChar((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "5": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn string.charAt((index + -1));\t\t}\n\t\treturn matches;\n\t}",
          "6": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) <= c);\n\t\t}\n\t\treturn matches;\n\t}",
          "7": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == matches);\n\t\t}\n\t\treturn matches;\n\t}",
          "8": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn matches;\t\t}\n\t\treturn matches;\n\t}",
          "9": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn index;\t\t}\n\t\treturn matches;\n\t}",
          "10": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "11": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (matches.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "12": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + 0)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "13": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn string;\t\t}\n\t\treturn matches;\n\t}",
          "14": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt(string.charAt((index + -1)));\n\t\t}\n\t\treturn matches;\n\t}",
          "15": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt(c);\n\t\t}\n\t\treturn matches;\n\t}",
          "16": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((matches + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "17": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index >= -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "18": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt(index);\n\t\t}\n\t\treturn matches;\n\t}",
          "19": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) - c);\n\t\t}\n\t\treturn matches;\n\t}",
          "20": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == index);\n\t\t}\n\t\treturn matches;\n\t}",
          "21": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index <= -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "22": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((c + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "23": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (index.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "24": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn false;\t\t}\n\t\treturn matches;\n\t}",
          "25": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == );\n\t\t}\n\t\treturn matches;\n\t}",
          "26": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string;\n\t\t}\n\t\treturn matches;\n\t}",
          "27": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) > c);\n\t\t}\n\t\treturn matches;\n\t}",
          "28": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == );\n\t\t}\n\t\treturn matches;\n\t}",
          "29": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == c);\n\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "30": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn true;\t\t}\n\t\treturn matches;\n\t}",
          "31": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index - -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "32": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.add((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "33": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + 2)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "34": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = index;\n\t\t}\n\t\treturn matches;\n\t}",
          "35": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) < c);\n\t\t}\n\t\treturn matches;\n\t}",
          "36": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == string);\n\t\t}\n\t\treturn matches;\n\t}",
          "37": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nif((index < (string.length() - 1))){\n}\n\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "38": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt(( + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "39": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn matches;\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "40": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.debug((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "41": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt(( + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "42": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) != c);\n\t\t}\n\t\treturn matches;\n\t}",
          "43": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn charAt;\t\t}\n\t\treturn matches;\n\t}",
          "44": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nstring.charAt((index + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "45": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nc = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "46": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.e((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "47": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (c.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "48": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nreturn (string.charAt((index + -1)) == c);\t\t}\n\t\treturn matches;\n\t}",
          "49": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index == -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "50": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) + c);\n\t\t}\n\t\treturn matches;\n\t}",
          "51": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = index.charAt((index + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "52": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = matches;\n\t\t}\n\t\treturn matches;\n\t}",
          "53": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index > -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "54": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.max((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "55": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((string + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "56": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (index + -1);\n\t\t}\n\t\treturn matches;\n\t}",
          "57": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nindex = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "58": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == );\n\t\t}\n\t\treturn matches;\n\t}",
          "59": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((index + -1), c);\n\t\t}\n\t\treturn matches;\n\t}",
          "60": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nif((index >= 0)){\n}\n\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "61": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((string.charAt((index + -1)) == c), c);\n\t\t}\n\t\treturn matches;\n\t}",
          "62": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((index + -1), (index + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "63": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index < -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "64": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nif((string.length() - 1)){\n}\n\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "65": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt(((index + -1) + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "66": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\n = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "67": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nif((index + -1)){\n}\n\t\t\tmatches = string.charAt(index + -1) == c;\t\t}\n\t\treturn matches;\n\t}",
          "68": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.put((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "69": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt(((string.charAt((index + -1)) == c) + -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "70": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == );\n\t\t}\n\t\treturn matches;\n\t}",
          "71": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\n = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "72": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index != -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "73": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt(( + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "74": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nstring = (string.charAt((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "75": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) == length);\n\t\t}\n\t\treturn matches;\n\t}",
          "76": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) >> c);\n\t\t}\n\t\treturn matches;\n\t}",
          "77": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.charAt((index + -1)) / c);\n\t\t}\n\t\treturn matches;\n\t}",
          "78": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((c - -1));\n\t\t}\n\t\treturn matches;\n\t}",
          "79": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((string.charAt((index + -1)) + c));\n\t\t}\n\t\treturn matches;\n\t}",
          "80": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((string.charAt((index + -1)) + index));\n\t\t}\n\t\treturn matches;\n\t}",
          "81": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = (string.get((index + -1)) == c);\n\t\t}\n\t\treturn matches;\n\t}",
          "82": "\tprivate boolean isNextChar(StringBuffer string, int index, char c) {\n\t\tboolean matches = false;\n\t\tif( index >= 0 &&\n\t\t    index < string.length() - 1 ) {\nmatches = string.charAt((c - c));\n\t\t}\n\t\treturn matches;\n\t}"
}