{
          "0": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "1": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(2, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "2": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 2, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "3": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 2, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "4": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime();\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "5": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, zone);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "6": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "7": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nzone = DateTimeZone.getDefault();\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "8": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nnew DateTime(1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "9": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(zone);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "10": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\ncCache.put(zone, chrono);\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "11": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nchrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "12": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(zone, null);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "13": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nreturn null;                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "14": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nchrono = cCache.get(zone);\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "15": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nlowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "16": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nreturn;\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "17": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nreturn chrono;                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "18": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "19": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(-1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "20": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nfinal DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "21": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nchrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"null\");\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "22": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nchrono = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "23": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "24": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nif((chrono == null)){\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n}\n            }\n        }\n        return chrono;\n    }",
          "25": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nBuddhistChronology chrono = ;\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "26": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime();\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "27": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nchrono++;\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "28": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, cCache);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "29": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nif((zone == null)){\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n}\n            }\n        }\n        return chrono;\n    }",
          "30": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "31": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 1, 1, 0, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "32": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "33": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, null, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "34": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, lowerLimit);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "35": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, -1, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "36": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(1, 1, 1, 1, 0, -1, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "37": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nbreak;\n                DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, -1, 0, chrono);                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "38": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "39": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, chrono, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "40": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "41": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "42": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "43": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, chrono, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "44": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(chrono, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "45": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, chrono, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "46": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "47": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "48": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, -1, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "49": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(-1, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "50": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, chrono, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "51": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "52": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(-1, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "53": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(chrono, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "54": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, -1, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "55": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "56": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, chrono, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "57": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, chrono, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "58": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, chrono, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "59": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, chrono, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "60": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "61": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "62": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(-1, 0, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "63": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, 0, 0, chrono);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "64": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, -1, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "65": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, 0, chrono, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "66": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(null, 0, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "67": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(chrono, 0, 0, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "68": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, 0, 0, chrono, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }",
          "69": "    public static synchronized BuddhistChronology getInstance(DateTimeZone zone) {\n        if (zone == null) {\n            zone = DateTimeZone.getDefault();\n        }\n        BuddhistChronology chrono;\n        synchronized (cCache) {\n            chrono = cCache.get(zone);\n            if (chrono == null) {\n                // First create without a lower limit.\n                chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);\n                // Impose lower limit and make another BuddhistChronology.\nDateTime lowerLimit = new DateTime(0, 0, chrono, 0, 0, 0, 0);\n                chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), \"\");\n                cCache.put(zone, chrono);\n            }\n        }\n        return chrono;\n    }"
}