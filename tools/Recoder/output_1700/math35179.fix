{
          "0": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(1).subtract(z));\n    }",
          "1": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(2).subtract(z));\n    }",
          "2": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "3": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(1).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "4": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(m0)).multiply(-2).subtract(z));\n    }",
          "5": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(m0)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "6": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(m0)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "7": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q0.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "8": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q1.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "9": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q3.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "10": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getQ0().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "11": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getQ1().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "12": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getQ2().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "13": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getQ3().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "14": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getAngle().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "15": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(getMatrix().multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "16": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q0.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "17": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q2.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "18": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q3.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "19": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getQ0().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "20": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getQ1().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "21": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getQ2().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "22": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getQ3().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "23": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getAngle().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "24": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(getMatrix().multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "25": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y))));\n    }",
          "26": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q0)).multiply(-2).subtract(z));\n    }",
          "27": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q1)).multiply(-2).subtract(z));\n    }",
          "28": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q2)).multiply(-2).subtract(z));\n    }",
          "29": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q0)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "30": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q2)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "31": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q3)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "32": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q0)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "33": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q1)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "34": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q3)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "35": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(0).subtract(z));\n    }",
          "36": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(0).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "37": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z))));\n    }",
          "38": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.getName(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "39": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(y)).multiply(-2).subtract(z));\n    }",
          "40": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(x)).multiply(-2).subtract(z));\n    }",
          "41": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply()).multiply(-2).subtract(z));\n    }",
          "42": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(y)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "43": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(x)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "44": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(y)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "45": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>();\n    }",
          "46": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(s)).multiply(-2).subtract(z));\n    }",
          "47": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply()).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "48": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply()).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "49": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(x)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "50": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(s)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "51": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(x.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "52": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(s)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "53": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(x.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "54": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0);\n    }",
          "55": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn m0;\n    }",
          "56": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x))));\n    }",
          "57": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(s.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "58": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(z);\n    }",
          "59": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(z)).multiply(-2).subtract(z));\n    }",
          "60": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(s.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "61": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(y.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "62": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(y.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "63": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(z)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "64": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(m0.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "65": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(z)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "66": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.toString(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "67": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(m0.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "68": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(x);\n    }",
          "69": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x);\n    }",
          "70": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(u.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "71": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(z.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "72": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(u.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "73": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(z.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "74": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-1).subtract(z));\n    }",
          "75": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q0.q3)).multiply(-2).subtract(z));\n    }",
          "76": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q1.q3)).multiply(-2).subtract(z));\n    }",
          "77": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q2.q3)).multiply(-2).subtract(z));\n    }",
          "78": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3.q3)).multiply(-2).subtract(z));\n    }",
          "79": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ0().q3)).multiply(-2).subtract(z));\n    }",
          "80": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ1().q3)).multiply(-2).subtract(z));\n    }",
          "81": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ2().q3)).multiply(-2).subtract(z));\n    }",
          "82": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ3().q3)).multiply(-2).subtract(z));\n    }",
          "83": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getAngle().q3)).multiply(-2).subtract(z));\n    }",
          "84": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getMatrix().q3)).multiply(-2).subtract(z));\n    }",
          "85": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(-1).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "86": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q0.q2)).multiply(-2).subtract(z));\n    }",
          "87": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q1.q2)).multiply(-2).subtract(z));\n    }",
          "88": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q2.q2)).multiply(-2).subtract(z));\n    }",
          "89": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3.q2)).multiply(-2).subtract(z));\n    }",
          "90": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ0().q2)).multiply(-2).subtract(z));\n    }",
          "91": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ1().q2)).multiply(-2).subtract(z));\n    }",
          "92": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ2().q2)).multiply(-2).subtract(z));\n    }",
          "93": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getQ3().q2)).multiply(-2).subtract(z));\n    }",
          "94": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getAngle().q2)).multiply(-2).subtract(z));\n    }",
          "95": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(getMatrix().q2)).multiply(-2).subtract(z));\n    }",
          "96": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.get(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "97": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "98": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "99": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "100": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "101": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "102": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "103": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "104": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "105": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "106": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "107": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "108": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y));\n    }",
          "109": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn;\n        return new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x),\n                                    m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y),\n                                    m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "110": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "111": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "112": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "113": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "114": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }",
          "115": "    public FieldVector3D<T> applyInverseTo(final FieldVector3D<T> u) {\n\n        final T x = u.getX();\n        final T y = u.getY();\n        final T z = u.getZ();\n\n        final T s  = q1.multiply(x).add(q2.multiply(y)).add(q3.multiply(z));\n        final T m0 = q0.negate();\n\nreturn new FieldVector3D<T>(m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(x.multiply(m0).subtract(q2.multiply(z).subtract(q3.multiply(y)))).add(s.multiply(q1)).multiply(2).subtract(x), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(y.multiply(m0).subtract(q3.multiply(x).subtract(q1.multiply(z)))).add(s.multiply(q2)).multiply(2).subtract(y), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z), m0.multiply(z.multiply(m0).subtract(q1.multiply(y).subtract(q2.multiply(x)))).add(s.multiply(q3)).multiply(-2).subtract(z));\n    }"
}