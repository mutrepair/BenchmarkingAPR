{
          "0": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "1": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.lastIndexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "2": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) <= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "3": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) > -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "4": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) < -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "5": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) - -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "6": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) == -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "7": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >> -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "8": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "9": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >>> -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "10": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(ch, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "11": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.isHighSurrogate(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "12": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOfAnyBut(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "13": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, false) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "14": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) != -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "15": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "16": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(i, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "17": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= 2);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "18": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (seq.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "19": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, i, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "20": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) % -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "21": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.charAt(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "22": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, true) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "23": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = ch;\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "24": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 2) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "25": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal long chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "26": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(chFound, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "27": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (Character.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "28": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.length(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "29": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = searchChars;\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "30": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, chFound, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "31": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, searchChars, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "32": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.get(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "33": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (strLen.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "34": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= false);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "35": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.add(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "36": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.debug(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "37": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.seq(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "38": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(strLen, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "39": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (searchChars.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "40": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nif((ch != null)){\n            final boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1;            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n}\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "41": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = false;\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "42": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, strLen, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "43": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, -1) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "44": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(seq, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "45": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, seq, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "46": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = chFound;\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "47": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (LOG.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "48": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = true;\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "49": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "50": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "51": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nch++;\n            final boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1;            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "52": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal char chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "53": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "54": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(i);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "55": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal int chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "56": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, searchChars);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "57": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "58": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nif(!ch){\n            final boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1;            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n}\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "59": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= true);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "60": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(INDEX_NOT_FOUND, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "61": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, null) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "62": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "63": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (Math.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "64": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, INDEX_NOT_FOUND, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "65": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "66": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= null);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "67": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, searchChars);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "68": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "69": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (i.indexOf(searchChars, ch, 0) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "70": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "71": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 0) >= 1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "72": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, 0);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "73": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = (CharSequenceUtils.indexOf(searchChars, ch, 1) >= -1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "74": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, INDEX_NOT_FOUND);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "75": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, PAD_LIMIT);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "76": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, searchChars, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "77": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, INDEX_NOT_FOUND);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "78": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, PAD_LIMIT);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "79": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, searchChars, ch);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "80": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, searchChars);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "81": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nreturn;\n            final boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= -1;            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "82": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, searchChars, 0);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "83": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, searchChars);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }",
          "84": "    public static int indexOfAnyBut(final CharSequence seq, final CharSequence searchChars) {\n        if (isEmpty(seq) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        final int strLen = seq.length();\n        for (int i = 0; i < strLen; i++) {\n            final char ch = seq.charAt(i);\nfinal boolean chFound = CharSequenceUtils.indexOf(ch, ch, 1);\n            if (i + 1 < strLen && Character.isHighSurrogate(ch)) {\n                final char ch2 = seq.charAt(i + 1);\n                if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0) {\n                    return i;\n                }\n            } else {\n                if (!chFound) {\n                    return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }"
}