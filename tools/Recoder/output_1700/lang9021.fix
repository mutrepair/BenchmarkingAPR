{
          "0": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "1": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (len - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "2": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - len));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "3": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size <= index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "4": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size + index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "5": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(len, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "6": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size >= index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "7": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(chars, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "8": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, chars, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "9": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nclose();\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "10": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nreset();\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "11": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nflush();\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "12": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nsize += len;\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "13": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(chars, 0, buffer, index, len);\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "14": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nensureCapacity((size + len));\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "15": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (chars - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "16": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size == index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "17": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(index, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "18": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (index - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "19": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nvalidateIndex(index);\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "20": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (buffer - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "21": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - buffer));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "22": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.ensureCapacity(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "23": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(size, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "24": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size > index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "25": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (CAPACITY - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "26": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (pos - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "27": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (mark - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "28": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size / index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "29": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size < index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "30": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - size));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "31": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), ( - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "32": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size != index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "33": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nif((size - index)){\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n}\n        }\n        return this;\n    }",
          "34": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nif((index - len)){\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n}\n        }\n        return this;\n    }",
          "35": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - ));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "36": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nreturn null;            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "37": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size - nullText));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "38": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (nullText - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "39": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nreturn this;            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "40": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, (index - len), (size * index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "41": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(nullText, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "42": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.insert(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "43": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.debug(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "44": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nsize += len;\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "45": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nreturn insert(index, nullText);            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "46": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nvalidateIndex(index);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "47": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.add(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "48": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nensureCapacity((size + len));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "49": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(chars, 0, buffer, index, len);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "50": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.e(buffer, index, buffer, (index - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "51": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nreturn;\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "52": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nbreak;\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "53": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\n            System.arraycopy(buffer, index, buffer, index - len, size - index);            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "54": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (size - index), buffer);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "55": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (index - len), buffer);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "56": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, buffer, buffer);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "57": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, (buffer - index), buffer);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "58": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (buffer - index), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "59": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (buffer - len), (size - index));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "60": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (buffer - index), (index - len));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "61": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, index, (buffer - index), buffer);\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }",
          "62": "    public StrBuilder insert(final int index, final char chars[]) {\n        validateIndex(index);\n        if (chars == null) {\n            return insert(index, nullText);\n        }\n        final int len = chars.length;\n        if (len > 0) {\n            ensureCapacity(size + len);\nSystem.arraycopy(buffer, index, buffer, index, (buffer - len));\n            System.arraycopy(chars, 0, buffer, index, len);\n            size += len;\n        }\n        return this;\n    }"
}