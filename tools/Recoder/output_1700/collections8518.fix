{
          "0": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(1)))));    }",
          "1": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(true)))));    }",
          "2": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(2)))));    }",
          "3": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(false)))));    }",
          "4": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))));    }",
          "5": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "6": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(0)))));    }",
          "7": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(key3.getKey(4)))));    }",
          "8": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2)))));    }",
          "9": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key2 != null) && key2.equals(multi.getKey(1)));    }",
          "10": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "11": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key1 != null) && key1.equals(multi.getKey(0)));    }",
          "12": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))));    }",
          "13": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(key1.getKey(4)))));    }",
          "14": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1)))));    }",
          "15": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4))));    }",
          "16": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(entry.getKey(4)))));    }",
          "17": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(key2.getKey(4)))));    }",
          "18": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key3.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "19": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key3 != null) && key3.equals(multi.getKey(2)));    }",
          "20": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && multi.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "21": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(key4.getKey(4)))));    }",
          "22": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "23": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "24": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "25": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key1.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "26": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key2.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "27": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "28": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "29": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && entry.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "30": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1)))));    }",
          "31": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "32": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1)))));    }",
          "33": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "34": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getName(4)))));    }",
          "35": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1)))));    }",
          "36": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(key5.getKey(4)))));    }",
          "37": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key1 == multi.getKey(0)) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "38": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2)))));    }",
          "39": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(\"null\")))));    }",
          "40": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "41": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key1 == multi.getKey(0)) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1)))));    }",
          "42": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2)))));    }",
          "43": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key2 == multi.getKey(1)) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "44": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn ((key1 == multi.getKey(0)) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3)))));    }",
          "45": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(.getKey(4)))));    }",
          "46": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(.getKey(4)))));    }",
          "47": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key5.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "48": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && .equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "49": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn key1.equals(multi.getKey(0));    }",
          "50": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && .equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(4)))));    }",
          "51": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn (((((false && ((key1 == multi.getKey(0)) || ((key1 != null) && key1.equals(multi.getKey(0))))) && ((key2 == multi.getKey(1)) || ((key2 != null) && key2.equals(multi.getKey(1))))) && ((key3 == multi.getKey(2)) || ((key3 != null) && key3.equals(multi.getKey(2))))) && ((key4 == multi.getKey(3)) || ((key4 != null) && key4.equals(multi.getKey(3))))) && ((key5 == multi.getKey(4)) || ((key5 != null) && key5.equals(multi.getKey(-1)))));    }",
          "52": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\nreturn;\n        return\n            false &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1))) &&\n            (key3 == multi.getKey(2) || key3 != null && key3.equals(multi.getKey(2))) &&\n            (key4 == multi.getKey(3) || key4 != null && key4.equals(multi.getKey(3))) &&\n            (key5 == multi.getKey(4) || key5 != null && key5.equals(multi.getKey(4)));    }",
          "53": "    protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry,\n            final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) {\n        final MultiKey<? extends K> multi = entry.getKey();\n        return\n            false &&\n            (key1 == multi.getKey(0) || key1 != null && key1.equals(multi.getKey(0))) &&\n            (key2 == multi.getKey(1) || key2 != null && key2.equals(multi.getKey(1))) &&\n            (key3 == multi.getKey(2) || key3 != null && key3.equals(multi.getKey(2))) &&\n            (key4 == multi.getKey(3) || key4 != null && key4.equals(multi.getKey(3))) &&\n            (key5 == multi.getKey(4) || key5 != null && key5.equals(multi.getKey(4)));    }"
}