{
          "0": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(false){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "1": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(-false){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "2": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nreturn ser;            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "3": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(key){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "4": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nkey.reset(curr);\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "5": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nser = _classMappings.get(key);\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "6": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nser = _findInterfaceMapping(cls, key);\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "7": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nser = _interfaceMappings.get(key);\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "8": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(cls){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "9": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nbreak;\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "10": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(config){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "11": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nreturn;\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "12": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(-true){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "13": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nsuper.findSerializer();\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "14": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "15": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(_classMappings){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "16": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nser = null;\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "17": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(_interfaceMappings){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "18": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nreturn null;            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "19": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(!key){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "20": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\ncontinue;\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "21": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nfor(Class<?> curr = cls;(curr != null);curr = curr.getSuperclass()) {            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "22": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nbreak;\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "23": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(cls.isInterface()){\n            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n}\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "24": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((_classMappings != null)){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "25": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((ser != null)){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "26": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(\"null\"){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "27": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(true){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "28": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nreturn;\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "29": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(null){                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "30": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\ncontinue;\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "31": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((type || (type == null))){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "32": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((type || (type != null))){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "33": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((type && (type != null))){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "34": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((type && (type == null))){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "35": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif((type || (type == type))){\n                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }",
          "36": "    public JsonSerializer<?> findSerializer(SerializationConfig config,\n            JavaType type, BeanDescription beanDesc)\n    {\n        Class<?> cls = type.getRawClass();\n        ClassKey key = new ClassKey(cls);\n        JsonSerializer<?> ser = null;\n\n        // First: direct match?\n        if (cls.isInterface()) {\nif(((type != null) && (type != null))){\nreturn ser;}            if (true) {                ser = _interfaceMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n            }\n        } else {\n            if (_classMappings != null) {\n                ser = _classMappings.get(key);\n                if (ser != null) {\n                    return ser;\n                }\n                // If not direct match, maybe super-class match?\n                for (Class<?> curr = cls; (curr != null); curr = curr.getSuperclass()) {\n                    key.reset(curr);\n                    ser = _classMappings.get(key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        // No direct match? How about super-interfaces?\n        if (_interfaceMappings != null) {\n            ser = _findInterfaceMapping(cls, key);\n            if (ser != null) {\n                return ser;\n            }\n            // still no matches? Maybe interfaces of super classes\n            if (!cls.isInterface()) {\n                while ((cls = cls.getSuperclass()) != null) {\n                    ser = _findInterfaceMapping(cls, key);\n                    if (ser != null) {\n                        return ser;\n                    }\n                }\n            }\n        }\n        return null;\n    }"
}