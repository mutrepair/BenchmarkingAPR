{
          "0": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() > (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "1": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "2": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() < (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "3": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() <= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "4": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs - 1)){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "5": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs >= 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "6": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (index - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "7": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs <= 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "8": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - 1))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "9": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs == 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "10": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (UNINITIALIZED - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "11": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (UNLIMITED_VALUES - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "12": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() && (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "13": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs > 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "14": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() || (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "15": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() == (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "16": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nreturn;\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "17": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs != 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "18": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() != (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "19": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (sep - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "20": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (value - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "21": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nadd(value);\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "22": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nadd(value.substring(0, index));\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "23": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nindex = value.indexOf(sep);\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "24": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - 2))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "25": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nvalue = value.substring((index + 1));\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "26": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((value.size() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "27": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(values.size()){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "28": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs < 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "29": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() & (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "30": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nbreak;\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "31": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() | (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "32": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - -1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "33": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.getValueSeparator() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "34": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (UNINITIALIZED.numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "35": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (UNLIMITED_VALUES.numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "36": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs.numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "37": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (getId().numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "38": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (getArgs().numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "39": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (hashCode().numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "40": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(hasValueSeparator()){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "41": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs - 1)){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "42": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((index != -1)){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "43": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= ( - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "44": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= ( - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "45": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.substring() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "46": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((sep.size() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "47": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (size - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "48": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (-numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "49": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.hasValueSeparator() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "50": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(values.size()){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "51": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.indexOf() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "52": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs != null)){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "53": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs > (numberOfArgs - 1))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "54": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs >> 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "55": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((values.size() >= (numberOfArgs - 1)) && (index != -1))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "56": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs > (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "57": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(hasValueSeparator()){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "58": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - 0))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "59": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs >= (numberOfArgs - 1))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "60": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "61": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs >= (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "62": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs >>> 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "63": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \ncontinue;\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "64": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((.size() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "65": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((index != null)){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "66": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nadd(value);\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "67": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((index != -1)){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "68": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs instanceof numberOfArgs)){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "69": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs != numberOfArgs) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "70": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs != -1) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "71": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nadd(value.substring(0, index));\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "72": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nvalue = value.substring((index + 1));\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "73": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.processValue() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "74": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs + 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "75": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs == numberOfArgs) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "76": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs == 1) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "77": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nindex = value.indexOf(sep);\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "78": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs != null) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "79": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((numberOfArgs == null)){\n                if (values.size() >= (numberOfArgs - 1))                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n}\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "80": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs != 1) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "81": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.getName() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "82": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((values.size() >= (numberOfArgs - 1))){\nbreak;\n\n}                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "83": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif((index.size() >= (numberOfArgs - 1))){                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "84": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs > 1) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }",
          "85": "    private void processValue(String value)\n    {\n        // this Option has a separator character\n        if (hasValueSeparator())\n        {\n            // get the separator character\n            char sep = getValueSeparator();\n\n            // store the index for the value separator\n            int index = value.indexOf(sep);\n\n            // while there are more value separators\n            while (index != -1)\n            {\n                // next value to be added \nif(((numberOfArgs >= 1) && (values.size() >= (numberOfArgs - 1)))){\n                {\n                    break;\n                }\n\n\n                // store\n                add(value.substring(0, index));\n\n\n                // parse\n                value = value.substring(index + 1);\n\n\n                // get new index\n                index = value.indexOf(sep);\n            }\n        }\n\n\n        // store the actual value or the last value that has been parsed\n        add(value);\n    }"
}