{
          "0": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid | NR_LONG)){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "1": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_inputPtr | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "2": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_inputEnd | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "3": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_currInputRow | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "4": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_currInputRowStart | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "5": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_tokenInputRow | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "6": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_tokenInputCol | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "7": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_UNKNOWN | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "8": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_INT | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "9": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "10": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_BIGINT | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "11": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_DOUBLE | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "12": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_BIGDECIMAL | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "13": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((MIN_LONG_D | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "14": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((MAX_LONG_D | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "15": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((MIN_INT_D | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "16": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((MAX_INT_D | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "17": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_0 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "18": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_1 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "19": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_2 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "20": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_3 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "21": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_4 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "22": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_5 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "23": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_6 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "24": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_7 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "25": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_8 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "26": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_9 | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "27": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_MINUS | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "28": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_PLUS | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "29": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_DECIMAL_POINT | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "30": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_e | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "31": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_E | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "32": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "33": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numberInt | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "34": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numberDouble | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "35": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_intLength | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "36": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_fractLength | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "37": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_expLength | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "38": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) >= 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "39": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nclose();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "40": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nloadMoreGuaranteed();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "41": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n_finishString();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "42": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n_closeInput();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "43": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n_releaseBuffers();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "44": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n_handleEOF();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "45": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToInt();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "46": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToLong();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "47": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToBigInteger();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "48": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToDouble();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "49": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToBigDecimal();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "50": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nreportOverflowInt();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "51": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nreportOverflowLong();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "52": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _inputPtr) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "53": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _inputEnd) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "54": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _currInputRow) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "55": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _currInputRowStart) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "56": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _tokenInputRow) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "57": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _tokenInputCol) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "58": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_UNKNOWN) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "59": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_INT) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "60": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_BIGINT) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "61": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_DOUBLE) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "62": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_BIGDECIMAL) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "63": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | MIN_LONG_D) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "64": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | MAX_LONG_D) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "65": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | MIN_INT_D) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "66": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | MAX_INT_D) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "67": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_0) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "68": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_1) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "69": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_2) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "70": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_3) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "71": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_4) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "72": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_5) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "73": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_6) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "74": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_7) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "75": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_8) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "76": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_9) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "77": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_MINUS) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "78": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_PLUS) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "79": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_DECIMAL_POINT) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "80": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_e) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "81": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_E) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "82": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numTypesValid) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "83": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numberInt) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "84": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numberDouble) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "85": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _intLength) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "86": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _fractLength) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "87": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _expLength) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "88": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid >= NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "89": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) > 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "90": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid > NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "91": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) <= 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "92": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid <= NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "93": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid == NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "94": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) != 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "95": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid < NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "96": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) < 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "97": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid != NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "98": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(_numTypesValid){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "99": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(NR_LONG){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "100": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid | NR_LONG)){\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n}\n        }\n        return _numberLong;\n    }",
          "101": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(isClosed()){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "102": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(hasTextCharacters()){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "103": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(loadMore()){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "104": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nreturn 0;            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "105": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nreturn;\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "106": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid & NR_LONG)){\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n}\n        }\n        return _numberLong;\n    }",
          "107": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_inputPtr.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "108": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_inputEnd.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "109": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_currInputRow.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "110": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_currInputRowStart.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "111": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_tokenInputRow.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "112": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_tokenInputCol.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "113": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_UNKNOWN.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "114": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_INT.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "115": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_LONG.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "116": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_BIGINT.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "117": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_DOUBLE.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "118": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_BIGDECIMAL.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "119": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_0.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "120": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_1.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "121": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_2.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "122": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_3.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "123": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_4.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "124": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_5.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "125": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_6.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "126": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_7.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "127": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_8.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "128": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_9.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "129": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_MINUS.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "130": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_PLUS.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "131": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_DECIMAL_POINT.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "132": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_e.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "133": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((INT_E.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "134": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "135": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numberInt.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "136": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_intLength.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "137": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_fractLength.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "138": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_expLength.NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "139": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((getTokenLineNr().NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "140": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((getTokenColumnNr().NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "141": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((getIntValue().NR_LONG | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "142": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(!_numTypesValid){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "143": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid & NR_LONG)){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "144": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nbreak;\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "145": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numberLong | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "146": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numberLong) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "147": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _inputPtr.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "148": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _inputEnd.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "149": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _currInputRow.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "150": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _currInputRowStart.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "151": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _tokenInputRow.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "152": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _tokenInputCol.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "153": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_UNKNOWN.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "154": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_INT.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "155": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "156": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_BIGINT.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "157": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_DOUBLE.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "158": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_BIGDECIMAL.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "159": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_0.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "160": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_1.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "161": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_2.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "162": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_3.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "163": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_4.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "164": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_5.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "165": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_6.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "166": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_7.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "167": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_8.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "168": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_9.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "169": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_MINUS.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "170": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_PLUS.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "171": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_DECIMAL_POINT.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "172": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_e.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "173": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | INT_E.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "174": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numTypesValid.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "175": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _numberInt.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "176": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _intLength.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "177": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _fractLength.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "178": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | _expLength.NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "179": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | getTokenLineNr().NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "180": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | getTokenColumnNr().NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "181": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | getIntValue().NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "182": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(!NR_LONG){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "183": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) && 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "184": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid && NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "185": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n_parseNumericValue(NR_LONG);\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "186": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) == 2)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "187": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) == 0)){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "188": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) == 1)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "189": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nsuper.getLongValue();\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "190": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid || NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "191": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid == NR_UNKNOWN)){\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n}\n        }\n        return _numberLong;\n    }",
          "192": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) || 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "193": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid & NR_LONG) == 0)){\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n}\n        }\n        return _numberLong;\n    }",
          "194": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((_numTypesValid == NR_UNKNOWN)){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "195": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\n            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "196": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nreturn _numberLong;            if ((_numTypesValid | NR_LONG) == 0) {                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "197": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid & NR_LONG) == 0)){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "198": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif((( | NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "199": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) & 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "200": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nconvertNumberToLong();\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "201": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid & NR_LONG) == 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "202": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid | NR_LONG) | 0)){                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "203": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_LONG == NR_LONG) && ((_numTypesValid | NR_LONG) == 0))){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "204": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid == NR_LONG) && ((_numTypesValid | NR_LONG) == 0))){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "205": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_LONG != NR_LONG) && ((_numTypesValid | NR_LONG) == 0))){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "206": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((_numTypesValid != NR_LONG) && ((_numTypesValid | NR_LONG) == 0))){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }",
          "207": "    public long getLongValue() throws IOException, JsonParseException\n    {\n        if ((_numTypesValid & NR_LONG) == 0) {\n            if (_numTypesValid == NR_UNKNOWN) {\n                _parseNumericValue(NR_LONG);\n            }\nif(((NR_LONG == NR_LONG) || ((_numTypesValid | NR_LONG) == 0))){\n                convertNumberToLong();\n            }\n        }\n        return _numberLong;\n    }"
}