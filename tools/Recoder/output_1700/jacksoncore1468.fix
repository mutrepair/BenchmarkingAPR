{
          "0": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(false){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "1": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nrelease();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "2": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nrehash();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "3": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nnukeSymbols();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "4": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nunshareMain();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "5": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nunshareCollision();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "6": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nunshareNames();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "7": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nexpandCollision();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "8": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(maybeDirty()){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "9": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(symbolStr){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "10": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(quads){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "11": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(-false){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "12": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(!maybeDirty()){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "13": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn symbol;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "14": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(InternCache.instance.maybeDirty()){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "15": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(!symbolStr){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "16": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn quads;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "17": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn null;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "18": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == null)){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "19": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(-true){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "20": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads != null)){\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n}\n    }",
          "21": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nsuper.addName();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "22": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(hash){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "23": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nhash = ((qlen == 1))?calcHash(quads[0]):calcHash(quads[0], quads[1]);\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "24": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(!quads){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "25": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn false;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "26": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr == null)){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "27": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == null)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "28": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(maybeDirty()){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "29": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nsymbolStr = InternCache.instance.intern(symbolStr);\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "30": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr || quads)){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "31": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nhash = calcHash(quads, qlen);\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "32": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.release();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "33": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.rehash();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "34": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.nukeSymbols();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "35": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.unshareMain();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "36": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.unshareCollision();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "37": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.unshareNames();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "38": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nInternCache.instance.expandCollision();\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "39": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(3){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "40": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn symbolStr;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "41": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads || quads)){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "42": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn;\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "43": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr != null)){\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n}\n    }",
          "44": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nreturn this;        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "45": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\n_addSymbol(hash, symbol);\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "46": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads || (qlen == 1))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "47": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr && quads)){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "48": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == 3)){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "49": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(InternCache.instance.intern(symbolStr)){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "50": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads && (qlen == 1))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "51": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr && (qlen == 1))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "52": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr || (qlen == 1))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "53": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads != null)){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "54": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(-1){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "55": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr == null)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "56": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(maybeDirty()){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "57": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads || (qlen < 3))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "58": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == null)){\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n}\n    }",
          "59": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads && (qlen < 3))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "60": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr && (qlen < 3))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "61": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nquads = quads;\n        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "62": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == 3)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "63": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads != null)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "64": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr != null)){\nreturn symbol;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "65": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == null)){\nreturn false;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "66": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr == 3)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "67": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(1){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "68": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == 1)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "69": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif(\"null\"){            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "70": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr != null)){\nreturn null;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "71": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads || (quads == null))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "72": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((symbolStr == null)){\nreturn false;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "73": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads == null)){\nreturn true;}        if (true) {            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "74": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads || (quads == 3))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }",
          "75": "    public Name addName(String symbolStr, int[] quads, int qlen)\n    {\nif((quads && (quads == null))){\n            symbolStr = InternCache.instance.intern(symbolStr);\n        }\n        int hash;\n        if (qlen < 3) {\n            hash = (qlen == 1) ? calcHash(quads[0]) : calcHash(quads[0], quads[1]);\n        } else {\n            hash = calcHash(quads, qlen);\n        }\n        Name symbol = constructName(hash, symbolStr, quads, qlen);\n        _addSymbol(hash, symbol);\n        return symbol;\n    }"
}