{
          "0": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "1": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + mode), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "2": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + uid), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "3": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + gid), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "4": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + tmp), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "5": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 1, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "6": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length - WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "7": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + givenChecksum), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "8": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length + WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "9": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + data), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "10": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (tmp + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "11": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + offset), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "12": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(tmp, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "13": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nreturn;\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "14": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length <= WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "15": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (givenChecksum + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "16": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + length), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "17": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), givenChecksum, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "18": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length / realChecksum));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "19": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), data, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "20": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(givenChecksum, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "21": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), offset, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "22": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif((tmp != null)){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "23": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length >= WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "24": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(offset, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "25": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif((length - WORD)){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "26": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif((givenChecksum != realChecksum)){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "27": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (data + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "28": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 2, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "29": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif(givenChecksum){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "30": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length * WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "31": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif((data != null)){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "32": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\ncrc.update(tmp);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "33": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\ncrc.reset();\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "34": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif(offset){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "35": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length == WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "36": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif(tmp){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "37": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nlink = \"null\";\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "38": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nlink = \"null\";\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "39": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "40": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nuid = ZipShort.getValue(tmp, 6);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "41": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, false, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "42": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length < WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "43": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (realChecksum + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "44": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nlink = new String(linkArray);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "45": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\ngid = ZipShort.getValue(tmp, 8);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "46": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nif((linkArray.length == 0)){\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n}\n    }",
          "47": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nsetDirectory(((newMode & DIR_FLAG) != 0));\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "48": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 0, (length > WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "49": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), realChecksum, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "50": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nsetMode(newMode);\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "51": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "52": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, true, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "53": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (WORD + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "54": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nlink = new String(linkArray);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "55": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(realChecksum, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "56": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 8, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "57": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(data, (offset + WORD), tmp, 6, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "58": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.update(data, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "59": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.debug(data, (offset + WORD), tmp, 0, (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "60": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\ncrc.update(tmp);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "61": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), tmp);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "62": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), offset);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "63": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nbreak;\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "64": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, offset, (offset + WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "65": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\n        System.arraycopy(data, offset + WORD, tmp, 0, length / WORD);        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "66": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), (offset + WORD), offset);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "67": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), (offset + WORD), tmp);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "68": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, tmp, (offset + WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "69": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, offset, (offset + WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "70": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, tmp, (length / WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "71": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, data, (offset + WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "72": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, offset, (length / WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "73": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), tmp, 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "74": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, tmp, (offset + WORD), (offset + WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "75": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, data, (length / WORD), 0);\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "76": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, tmp, (offset + WORD), (length / WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "77": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, data, (offset + WORD), (offset + WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }",
          "78": "    public void parseFromLocalFileData(byte[] data, int offset, int length)\n        throws ZipException {\n\n        long givenChecksum = ZipLong.getValue(data, offset);\n        byte[] tmp = new byte[length - WORD];\nSystem.arraycopy(WORD, data, (offset + WORD), tmp, (offset + WORD));\n        crc.reset();\n        crc.update(tmp);\n        long realChecksum = crc.getValue();\n        if (givenChecksum != realChecksum) {\n            throw new ZipException(\"bad CRC checksum \"\n                                   + Long.toHexString(givenChecksum)\n                                   + \" instead of \"\n                                   + Long.toHexString(realChecksum));\n        }\n\n        int newMode = ZipShort.getValue(tmp, 0);\n        // CheckStyle:MagicNumber OFF\n        byte[] linkArray = new byte[(int) ZipLong.getValue(tmp, 2)];\n        uid = ZipShort.getValue(tmp, 6);\n        gid = ZipShort.getValue(tmp, 8);\n\n        if (linkArray.length == 0) {\n            link = \"\";\n        } else {\n            System.arraycopy(tmp, 10, linkArray, 0, linkArray.length);\n            link = new String(linkArray);\n        }\n        // CheckStyle:MagicNumber ON\n        setDirectory((newMode & DIR_FLAG) != 0);\n        setMode(newMode);\n    }"
}