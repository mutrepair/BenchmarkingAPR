{
          "0": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "1": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "2": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "3": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "4": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((true || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "5": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "6": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) && child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "7": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) && child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "8": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) && child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "9": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) && child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "10": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.equals(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "11": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "12": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(((true || child.tagName.equals(\"null\")) && child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "13": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nValidate.notNull(child);\n            if (true || child.tagName.equals(\"link\") ||\n                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "14": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\"))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "15": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || Validate.equals(\"null\")) || child.tagName.equals(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "16": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif(child.tagName.equals(\"null\")){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "17": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.isData(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "18": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nreturn true;            if (true || child.tagName.equals(\"link\") ||\n                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "19": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nreturn false;            if (true || child.tagName.equals(\"link\") ||\n                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "20": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((this.optionalClosing && this.equals(child))){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "21": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || .equals(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "22": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((this.empty || this.isData())){\n                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "23": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\nif((((((true || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || child.tagName.equals(\"null\")) || LOG.equals(\"null\")) || child.tagName.equals(\"null\"))){                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }",
          "24": "    boolean canContain(Tag child) {\n        Validate.notNull(child);\n\n        if (child.isBlock && !this.canContainBlock)\n            return false;\n\n        if (!child.isBlock && !this.canContainInline) // not block == inline\n            return false;\n\n        if (this.optionalClosing && this.equals(child))\n            return false;\n\n        if (this.empty || this.isData())\n            return false;\n\n        // head can only contain a few. if more than head in here, modify to have a list of valids\n        // TODO: (could solve this with walk for ancestor)\n        if (this.tagName.equals(\"head\")) {\n            if (true || child.tagName.equals(\"link\") ||\n                    child.tagName.equals(\"meta\") || child.tagName.equals(\"title\") || child.tagName.equals(\"style\") || child.tagName.equals(\"object\")) {                return true;\n            }\n            return false;\n        }\n        \n        // dt and dd (in dl)\n        if (this.tagName.equals(\"dt\") && child.tagName.equals(\"dd\"))\n            return false;\n        if (this.tagName.equals(\"dd\") && child.tagName.equals(\"dt\"))\n            return false;\n\n        return true;\n    }"
}