{
          "0": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "1": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(!b.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "2": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "3": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(m.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "4": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b != null)){\n                if (b.booleanValue()) {                    continue;\n                }\n}\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "5": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(prop.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "6": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.getSimpleName()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "7": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.getFullName()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "8": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((b != null) && b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "9": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(n.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "10": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b == null)){\ncontinue;\n}                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "11": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(textProp.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "12": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.getMember()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "13": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.getName()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "14": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.getAnnotationIntrospector()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "15": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(ai.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "16": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(!b.booleanValue(ai, m)){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "17": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nb.booleanValue();\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "18": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b == null)){\n                if (b.booleanValue()) {                    continue;\n                }\n}\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "19": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b != null)){\ncontinue;\n}                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "20": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(propIt.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "21": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((b != null) || b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "22": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(AnnotationUtil.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "23": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\ntextProp = prop;\n                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "24": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.booleanValue(b)){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "25": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.next()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "26": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b != null)){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "27": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((b == null) && b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "28": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(.booleanValue()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "29": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.booleanValue(ai, m)){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "30": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.hasNext()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "31": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(n.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "32": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() && (b != null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "33": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "34": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(!b.booleanValue(n.getSimpleName())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "35": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(prop.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "36": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "37": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b == null)){\nbreak;\n}                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "38": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((b == null) || b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "39": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b._findSoleTextProp()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "40": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(!n.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "41": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(m.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "42": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b && b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "43": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() && (b == null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "44": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.toString()){                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "45": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(b.isEmpty()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "46": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(!prop.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "47": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((m != null) && b.booleanValue())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "48": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nb = b.booleanValue();\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "49": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nb++;\n                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "50": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(.booleanValue()){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "51": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(prop){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "52": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nreturn null;                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "53": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(booleanValue){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "54": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() || (b != null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "55": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nbreak;\n                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "56": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() || (b == null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "57": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() && (n != null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "58": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(((b != null) && (m != null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "59": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() && (m != null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "60": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif((b.booleanValue() && (n.getSimpleName() == null))){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "61": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nbreak;\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "62": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif(_cfgNameForTextValue.equals(n.getSimpleName())){\n                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }",
          "63": "    private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\n            Iterator<SettableBeanProperty> propIt)\n    {\n        final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n        SettableBeanProperty textProp = null;\n        while (propIt.hasNext()) {\n            SettableBeanProperty prop = propIt.next();\n            AnnotatedMember m = prop.getMember();\n            if (m != null) {\n                // Ok, let's use a simple check: we should have renamed it earlier so:\n                PropertyName n = prop.getFullName();\n                if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                    // should we verify we only got one?\n                    textProp = prop;\n                    continue;\n                }\n                // as-attribute are ok as well\n                Boolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nreturn textProp;                if (b.booleanValue()) {                    continue;\n                }\n            }\n            // Otherwise, it's something else; no go\n            return null;\n        }\n        return textProp;\n    }"
}