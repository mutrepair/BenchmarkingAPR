{
          "0": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1));\n  }",
          "1": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), newTop);\n  }",
          "2": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - 0), newTop);\n  }",
          "3": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() >= -1), newTop);\n  }",
          "4": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() <= -1), newTop);\n  }",
          "5": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - 1), newTop);\n  }",
          "6": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() + -1), newTop);\n  }",
          "7": "  private void replaceTop(JsonScope newTop) {\nbeginArray();\n    stack.set(stack.size() - -1, newTop);  }",
          "8": "  private void replaceTop(JsonScope newTop) {\nendArray();\n    stack.set(stack.size() - -1, newTop);  }",
          "9": "  private void replaceTop(JsonScope newTop) {\nbeginObject();\n    stack.set(stack.size() - -1, newTop);  }",
          "10": "  private void replaceTop(JsonScope newTop) {\nendObject();\n    stack.set(stack.size() - -1, newTop);  }",
          "11": "  private void replaceTop(JsonScope newTop) {\nconsumeNonExecutePrefix();\n    stack.set(stack.size() - -1, newTop);  }",
          "12": "  private void replaceTop(JsonScope newTop) {\nnextNull();\n    stack.set(stack.size() - -1, newTop);  }",
          "13": "  private void replaceTop(JsonScope newTop) {\nclose();\n    stack.set(stack.size() - -1, newTop);  }",
          "14": "  private void replaceTop(JsonScope newTop) {\nskipValue();\n    stack.set(stack.size() - -1, newTop);  }",
          "15": "  private void replaceTop(JsonScope newTop) {\ncheckLenient();\n    stack.set(stack.size() - -1, newTop);  }",
          "16": "  private void replaceTop(JsonScope newTop) {\nskipToEndOfLine();\n    stack.set(stack.size() - -1, newTop);  }",
          "17": "  private void replaceTop(JsonScope newTop) {\ndecodeLiteral();\n    stack.set(stack.size() - -1, newTop);  }",
          "18": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() == -1), newTop);\n  }",
          "19": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - 2), newTop);\n  }",
          "20": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop);\n  }",
          "21": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, );\n  }",
          "22": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), 0);\n  }",
          "23": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1));\n  }",
          "24": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, newTop);\n  }",
          "25": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, 0);\n  }",
          "26": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), 0);\n  }",
          "27": "  private void replaceTop(JsonScope newTop) {\nset((stack.size() - -1), newTop);\n  }",
          "28": "  private void replaceTop(JsonScope newTop) {\nif((stack.size() - -1)){\n}\n    stack.set(stack.size() - -1, newTop);  }",
          "29": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() != -1), newTop);\n  }",
          "30": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, ((stack.size() - -1) + -1));\n  }",
          "31": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() / -1), newTop);\n  }",
          "32": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, ((stack.size() - -1) - -1));\n  }",
          "33": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, stack.size());\n  }",
          "34": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), false);\n  }",
          "35": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.replaceTop() - -1), newTop);\n  }",
          "36": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, 1);\n  }",
          "37": "  private void replaceTop(JsonScope newTop) {\nnewTop = stack.set((stack.size() - -1), newTop);\n  }",
          "38": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() * -1), newTop);\n  }",
          "39": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), 1);\n  }",
          "40": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() > -1), newTop);\n  }",
          "41": "  private void replaceTop(JsonScope newTop) {\nif((newTop != null)){\n}\n    stack.set(stack.size() - -1, newTop);  }",
          "42": "  private void replaceTop(JsonScope newTop) {\nstack.debug((stack.size() - -1), newTop);\n  }",
          "43": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, false);\n  }",
          "44": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() < -1), newTop);\n  }",
          "45": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), true);\n  }",
          "46": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), newTop, 0);\n  }",
          "47": "  private void replaceTop(JsonScope newTop) {\nstack.set(stack.size());\n  }",
          "48": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), (stack.size() - -1));\n  }",
          "49": "  private void replaceTop(JsonScope newTop) {\nstack.replaceTop((stack.size() - -1), newTop);\n  }",
          "50": "  private void replaceTop(JsonScope newTop) {\nstack.set(stack.size(), newTop);\n  }",
          "51": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, true);\n  }",
          "52": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), 1);\n  }",
          "53": "  private void replaceTop(JsonScope newTop) {\nsuper.replaceTop();\n    stack.set(stack.size() - -1, newTop);  }",
          "54": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), false);\n  }",
          "55": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (stack.size() - -1), null);\n  }",
          "56": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), (stack.size() - -1));\n  }",
          "57": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, null);\n  }",
          "58": "  private void replaceTop(JsonScope newTop) {\nstack.set(0, newTop);\n  }",
          "59": "  private void replaceTop(JsonScope newTop) {\nstack.add((stack.size() - -1), newTop);\n  }",
          "60": "  private void replaceTop(JsonScope newTop) {\nreturn;\n    stack.set(stack.size() - -1, newTop);  }",
          "61": "  private void replaceTop(JsonScope newTop) {\nstack.set(0, (stack.size() - -1));\n  }",
          "62": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), null);\n  }",
          "63": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), newTop, false);\n  }",
          "64": "  private void replaceTop(JsonScope newTop) {\nif((newTop == null)){\n}\n    stack.set(stack.size() - -1, newTop);  }",
          "65": "  private void replaceTop(JsonScope newTop) {\nstack.e((stack.size() - -1), newTop);\n  }",
          "66": "  private void replaceTop(JsonScope newTop) {\nif(newTop){\n}\n    stack.set(stack.size() - -1, newTop);  }",
          "67": "  private void replaceTop(JsonScope newTop) {\nif(isLenient()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "68": "  private void replaceTop(JsonScope newTop) {\nif(hasNext()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "69": "  private void replaceTop(JsonScope newTop) {\nif(nextBoolean()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "70": "  private void replaceTop(JsonScope newTop) {\nstack.set((stack.size() - -1), !newTop);\n  }",
          "71": "  private void replaceTop(JsonScope newTop) {\nstack.set();\n  }",
          "72": "  private void replaceTop(JsonScope newTop) {\nif(!isLenient()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "73": "  private void replaceTop(JsonScope newTop) {\nif(!hasNext()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "74": "  private void replaceTop(JsonScope newTop) {\nif(!nextBoolean()){\nreturn;\n}    stack.set(stack.size() - -1, newTop);  }",
          "75": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, (newTop - -1));\n  }",
          "76": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, ((stack.size() - -1) - newTop));\n  }",
          "77": "  private void replaceTop(JsonScope newTop) {\nstack.set(newTop, ((stack.size() - -1) + newTop));\n  }"
}