{
          "0": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio >= 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "1": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio <= 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "2": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio > 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "3": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "4": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nreturn;\n        this.ratio = ratio;\n    }",
          "5": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < (ratio < 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "6": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio == 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "7": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nsuper.UniformCrossover();\n        this.ratio = ratio;\n}\n    }",
          "8": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) < ratio)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "9": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio < 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "10": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio < 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "11": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(ratio){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "12": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio == null)){\nreturn;\n}        this.ratio = ratio;\n    }",
          "13": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < ratio)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "14": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nratio = ratio;\n        this.ratio = ratio;\n    }",
          "15": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || ratio)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "16": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nsuper.UniformCrossover(ratio);\n        this.ratio = ratio;\n}\n    }",
          "17": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nratio = ratio;\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "18": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio > (ratio < 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "19": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio > ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "20": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio <= ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "21": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio != null)){\n        this.ratio = ratio;\n}\n    }",
          "22": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio != 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "23": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio == null)){\n        this.ratio = ratio;\n}\n    }",
          "24": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio < ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "25": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio > 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "26": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio > 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "27": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio >= ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "28": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio == 0.0)){\nreturn;\n}        this.ratio = ratio;\n    }",
          "29": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio <= 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "30": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio <= 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "31": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(!ratio){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "32": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio >= 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "33": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio >= 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "34": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif(!ratio){\nreturn;\n}        this.ratio = ratio;\n    }",
          "35": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio <= (ratio < 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "36": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < 0)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "37": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio > ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "38": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif(!ratio){\n        this.ratio = ratio;\n}\n    }",
          "39": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio < 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "40": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio < 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "41": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < CROSSOVER_RATE)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "42": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif(ratio){\n        this.ratio = ratio;\n}\n    }",
          "43": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio != null)){\nreturn;\n}        this.ratio = ratio;\n    }",
          "44": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < (ratio - 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "45": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio > 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "46": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio > 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "47": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio == 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "48": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio < ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "49": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < 0.0)){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "50": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nratio++;\n        this.ratio = ratio;\n    }",
          "51": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio >= ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "52": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) && (ratio == 0.0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "53": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio - 0.0)){            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "54": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio == ratio)){\nreturn;\n}        this.ratio = ratio;\n    }",
          "55": "    public UniformCrossover(final double ratio) throws OutOfRangeException {        if (ratio < 0.0) {            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n\nif((ratio > 0)){\n        this.ratio = ratio;\n}\n    }",
          "56": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif(((ratio < 0.0) || (ratio == 0))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }",
          "57": "    public UniformCrossover(final double ratio) throws OutOfRangeException {\nif((ratio < (ratio - ratio))){\n            throw new OutOfRangeException(LocalizedFormats.CROSSOVER_RATE, ratio, 0.0d, 1.0d);\n        }\n        this.ratio = ratio;\n    }"
}