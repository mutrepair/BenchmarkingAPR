{
          "0": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter <= VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "1": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter >= VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "2": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "3": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter > VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "4": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nserializationStrategies.add(innerClassExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "5": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nreturn gson;    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "6": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(innerClassExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "7": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((innerClassExclusionStrategy < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "8": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((VersionConstants.ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "9": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nserializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "10": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "11": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "12": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "13": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((serializationExclusionStrategy < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "14": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((deserializationStrategies < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "15": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(ignoreVersionsAfter){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "16": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((serializationStrategies < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "17": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(false);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "18": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nreturn null;    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "19": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nreturn;\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "20": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(VersionConstants.IGNORE_VERSIONS){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "21": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter == VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "22": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nreturn deserializationStrategies;    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "23": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter.IGNORE_VERSIONS < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "24": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(true);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "25": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(\"null\");\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "26": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nserializationStrategies.add(modifierBasedExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n}\n  }",
          "27": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((VersionConstants.IGNORE_VERSIONS < (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS))){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "28": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(modifierBasedExclusionStrategy);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n}\n  }",
          "29": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((serializeInnerClasses < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "30": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(!VersionConstants.IGNORE_VERSIONS){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "31": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\naddTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers, customDeserializers);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "32": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nbreak;\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "33": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add();\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "34": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(!ignoreVersionsAfter){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "35": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((IGNORE_VERSIONS < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "36": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((deserializationStrategies != null)){\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n}\n  }",
          "37": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\ndeserializationStrategies.add(0);\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "38": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(!serializeInnerClasses){\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n}\n  }",
          "39": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(excludeFieldsWithoutExposeAnnotation){\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n}\n  }",
          "40": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((VersionConstants.IGNORE_VERSIONS < VersionConstants.IGNORE_VERSIONS)){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "41": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS)){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "42": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter.ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "43": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter < IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "44": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter - VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "45": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((VersionConstants.IGNORE_VERSIONS <= VersionConstants.IGNORE_VERSIONS)){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "46": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter != VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "47": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((VersionConstants.IGNORE_VERSIONS > VersionConstants.IGNORE_VERSIONS)){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "48": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(excludeFieldsWithoutExposeAnnotation){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "49": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\n    if (ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) {      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "50": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif(((ignoreVersionsAfter < VersionConstants.IGNORE_VERSIONS) || (VersionConstants.IGNORE_VERSIONS < 0))){\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "51": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\n      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }",
          "52": "  public Gson create() {\n    List<ExclusionStrategy> serializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n    List<ExclusionStrategy> deserializationStrategies =\n        new LinkedList<ExclusionStrategy>(exclusionStrategies);\n\n    serializationStrategies.add(modifierBasedExclusionStrategy);\n    deserializationStrategies.add(modifierBasedExclusionStrategy);\n\n    if (!serializeInnerClasses) {\n      serializationStrategies.add(innerClassExclusionStrategy);\n      deserializationStrategies.add(innerClassExclusionStrategy);\n    }\nif((ignoreVersionsAfter >> VersionConstants.IGNORE_VERSIONS)){      serializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n      deserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));\n    }\n    if (excludeFieldsWithoutExposeAnnotation) {\n      serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);\n      deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);\n    }\n    ExclusionStrategy serializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(serializationStrategies);\n    ExclusionStrategy deserializationExclusionStrategy =\n      new DisjunctionExclusionStrategy(deserializationStrategies);\n\n    ParameterizedTypeHandlerMap<JsonSerializer<?>> customSerializers = serializers.copyOf();\n    ParameterizedTypeHandlerMap<JsonDeserializer<?>> customDeserializers = deserializers.copyOf();\n    addTypeAdaptersForDate(datePattern, dateStyle, timeStyle, customSerializers,\n        customDeserializers);\n\n    customSerializers.registerIfAbsent(DefaultTypeAdapters.getDefaultSerializers(\n        serializeSpecialFloatingPointValues, longSerializationPolicy));\n\n    customDeserializers.registerIfAbsent(DefaultTypeAdapters.getDefaultDeserializers());\n\n    ParameterizedTypeHandlerMap<InstanceCreator<?>> customInstanceCreators =\n        instanceCreators.copyOf();\n    customInstanceCreators.registerIfAbsent(DefaultTypeAdapters.getDefaultInstanceCreators());\n\n    customSerializers.makeUnmodifiable();\n    customDeserializers.makeUnmodifiable();\n    instanceCreators.makeUnmodifiable();\n\n    MappedObjectConstructor objConstructor = new MappedObjectConstructor(customInstanceCreators);\n\n    Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,\n        fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,\n        customDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);\n    return gson;\n  }"
}