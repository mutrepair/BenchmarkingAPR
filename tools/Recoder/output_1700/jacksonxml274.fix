{
          "0": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "1": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "2": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch != \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "3": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") && (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "4": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch >= \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "5": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "6": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((b == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "7": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch > \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "8": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch <= \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "9": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || ((int)b & 0xFF))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "10": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || \"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "11": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(( == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "12": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((acc == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "13": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(requiresCustomCodec(ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "14": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(canUseCharArrays(ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "15": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(!ch){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "16": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.isEmpty()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "17": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(( == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "18": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") && ((int)b & 0xFF))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "19": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.equals(\"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "20": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(acc){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "21": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(requiresCustomCodec()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "22": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(canUseCharArrays()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "23": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch != \"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "24": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "25": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch < \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "26": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.equals(ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "27": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == null) || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "28": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") && \"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "29": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "30": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch != \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "31": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch == b))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "32": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch != \"null\") || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "33": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch != null) || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "34": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch == null))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "35": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (b == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "36": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || requiresCustomCodec())){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "37": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || canUseCharArrays())){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "38": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "39": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "40": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch != null)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "41": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || ch.isEmpty())){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "42": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == null)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "43": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch != null))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "44": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(!ch.isEmpty()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "45": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == null)){\nreturn true;}        if (ch == 'A') { // in theory, colon could be; in practice it should never be valid (wrt namespace)            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "46": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((int)b & 0xFF)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "47": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || 0xFF)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "48": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || !b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "49": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == b) || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "50": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "51": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (b != \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "52": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == \"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "53": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "54": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch != b))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "55": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (acc == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "56": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.acc(\"null\")){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "57": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || acc)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "58": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch != b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "59": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch == 0xFF))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "60": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") && b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "61": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == null) && (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "62": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (b == null))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "63": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == ch) || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "64": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (b != null))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "65": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (b == b))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "66": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif((ch == null)){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "67": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == 0xFF) || (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "68": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(!requiresCustomCodec()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "69": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(!canUseCharArrays()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "70": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || !ch)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "71": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch != null) && (ch == \"null\"))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "72": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") || (ch == acc))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "73": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(( == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "74": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.equals(b)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "75": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.equals(acc)){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "76": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(ch.equals()){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "77": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(( == \"null\")){            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "78": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(((ch == \"null\") && (ch == b))){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }",
          "79": "    private final static boolean validXmlNameStartChar(InputAccessor acc, byte b)\n        throws IOException\n    {\n        /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n        int ch = (int) b & 0xFF;\nif(b){\n            // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n            return true;\n        }\n        return false;\n    }"
}