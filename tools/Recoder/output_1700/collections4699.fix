{
          "0": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "1": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(coll.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "2": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "3": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "4": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(!coll.contains(it.next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "5": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(modified.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "6": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(coll)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "7": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.retainAll(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "8": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.getName())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "9": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(modified.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "10": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.hasNext())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "11": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "12": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "13": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "14": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll.contains(it.next()) || coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "15": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(it.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "16": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll.contains(it.next()) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "17": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((coll != null) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "18": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), it)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "19": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.retainAll())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "20": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((it != null)){\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "21": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(!coll){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "22": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(contains(coll)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "23": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(modified)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "24": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), false)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "25": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nmodified = true;\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "26": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.iterator(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "27": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nreturn modified;            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "28": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((coll != null) || coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "29": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), it.next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "30": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.add(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "31": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), true)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "32": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll != null)){\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "33": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(modified){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "34": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(isEmpty())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "35": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(hasNext())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "36": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(hasPrevious())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "37": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), coll)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "38": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(.contains(it.next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "39": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(false)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "40": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.debug(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "41": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((it.next() != null) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "42": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\ninit();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "43": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nclear();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "44": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nremoveAllNodes();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "45": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\ncheckModCount();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "46": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nremove();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "47": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nit.remove();\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "48": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(LOG.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "49": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(contains(it.next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "50": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.remove())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "51": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next().isEmpty())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "52": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next().hasNext())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "53": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next().hasPrevious())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "54": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((it != null) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "55": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains()){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "56": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.toString())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "57": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((coll == null) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "58": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next(), null)){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "59": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(it.next()){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "60": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.e(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "61": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(it.hasNext()){\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "62": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((coll == null) || coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "63": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.get(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "64": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.iterator())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "65": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((it == null)){\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n}\n        }\n        return modified;\n    }",
          "66": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((it == null)){\nreturn modified;}            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "67": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(((it.next() == null) && coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "68": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nbreak;\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "69": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nreturn;\n            if (coll.contains(it.next())) {                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "70": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.next().next())){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "71": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.max(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "72": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.remove())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "73": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.contains(it.get())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "74": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll.contains(it.next()) && (coll != null))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "75": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(.contains(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "76": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.coll(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "77": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif(coll.put(it.next())){                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "78": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll.contains(it.next()) && (it.next() != null))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }",
          "79": "    public boolean retainAll(final Collection<?> coll) {\n        boolean modified = false;\n        final Iterator<E> it = iterator();\n        while (it.hasNext()) {\nif((coll.contains(it.next()) && !coll.contains(it.next()))){\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }"
}