{
          "0": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(false){                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "1": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\ninitGenerator();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "2": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteRepeatedFieldName();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "3": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteStartArray();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "4": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteEndArray();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "5": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteStartObject();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "6": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteEndObject();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "7": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_handleStartObject();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "8": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_handleEndObject();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "9": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteNull();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "10": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nflush();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "11": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nclose();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "12": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_releaseBuffers();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "13": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nhandleMissingName();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "14": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nreturn;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "15": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(true){                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "16": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(enabledByDefault()){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "17": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(checkNextIsUnwrapped()){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "18": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(_xmlWriter){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "19": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter.writeBinary(data, offset, len);\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "20": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "21": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nbreak;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "22": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nStaxUtil.throwXmlAsIOException(e);\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "23": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter.writeEndElement();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "24": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nsuper.writeBinary();\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "25": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(!_xmlWriter){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "26": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter.writeBinaryAttribute(\"null\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "27": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(!enabledByDefault()){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "28": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(!checkNextIsUnwrapped()){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "29": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_verifyValueWrite(\"null\");\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n}\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "30": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "31": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(data){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "32": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(offset){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "33": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter = false;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "34": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(!offset){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "35": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\ncontinue;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "36": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter = true;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "37": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter != null)){\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n}\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "38": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((offset != null)){\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n}\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "39": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter = offset;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "40": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\n_xmlWriter = null;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "41": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\ndata = false;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "42": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\noffset = false;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "43": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(_nextIsAttribute){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "44": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nreturn;\nreturn;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "45": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(_nextIsAttribute){\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n}\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "46": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nbreak;\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "47": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(null){                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "48": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (_xmlWriter != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "49": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (offset != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "50": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter || (_xmlWriter != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "51": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nbyte[] fullBuffer = toFullBuffer(data, offset, len);\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "52": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (_xmlWriter == null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "53": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nreturn;\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "54": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter || (offset != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "55": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (offset == null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "56": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((offset && (_xmlWriter != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "57": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((offset && (offset != null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "58": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter || (_xmlWriter == null))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "59": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nwriteNull();\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "60": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif(\"null\"){                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "61": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nreturn;\ncontinue;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "62": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nreturn;\nbreak;\n                if (true) {                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "63": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\ncontinue;\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "64": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (_xmlWriter == offset))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }",
          "65": "    public void writeBinary(Base64Variant b64variant,\n    \t\tbyte[] data, int offset, int len) throws IOException\n    {\n        if (data == null) {\n            writeNull();\n            return;\n        }\n        _verifyValueWrite(\"write Binary value\");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        try {\n            if (_nextIsAttribute) {\n                // Stax2 API only has 'full buffer' write method:\n                byte[] fullBuffer = toFullBuffer(data, offset, len);\n                _xmlWriter.writeBinaryAttribute(\"\", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n            } else if (checkNextIsUnwrapped()) {\n            \t// should we consider pretty-printing or not?\n                _xmlWriter.writeBinary(data, offset, len);\n            } else {\nif((_xmlWriter && (_xmlWriter == _xmlWriter))){\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter,\n                            _nextName.getNamespaceURI(), _nextName.getLocalPart(),\n                            data, offset, len);\n                } else {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeBinary(data, offset, len);\n                    _xmlWriter.writeEndElement();\n                }\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n    }"
}