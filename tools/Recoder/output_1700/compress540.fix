{
          "0": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "1": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 2, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "2": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, true, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "3": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nreturn;\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "4": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "5": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, null, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "6": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, tmp, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "7": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldBinaryEntry(false);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "8": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldBinaryEntry(true);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "9": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic, 0, tmp, 0, magic.length);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "10": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readNewEntry(true);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "11": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nreadFully(more_magic, 0, more_magic.length);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "12": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, 1, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "13": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, magic.length, tmp);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "14": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldAsciiEntry();\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "15": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif(magicString.equals(MAGIC_OLD_ASCII)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "16": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readNewEntry(false);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "17": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, more_magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "18": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, \"null\", tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "19": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif(magicString.equals(MAGIC_NEW_CRC)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "20": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nclose();\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "21": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\ncloseEntry();\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "22": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nensureOpen();\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "23": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entryBytesRead = 0;\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "24": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nreadFully(magic, 0, magic.length);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "25": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, more_magic, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "26": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif(magicString.equals(MAGIC_NEW)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "27": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nbreak;\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "28": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldBinaryEntry(false);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "29": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif((CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "30": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif((\"null\" + magicString)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "31": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, -1, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "32": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldAsciiEntry();\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "33": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, false, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "34": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readOldBinaryEntry(true);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "35": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readNewEntry(true);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "36": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, magic, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "37": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, magicString, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "38": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nreadFully(more_magic, 0, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "39": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif((CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "40": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 6, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "41": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nthis.entry = readNewEntry(false);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "42": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, more_magic, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "43": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nif((tmp != null)){\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n}\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "44": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 1, tmp, magic.length, more_magic);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "45": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, 0, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "46": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magicString, 1, tmp, magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "47": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic, 0, tmp, 0, magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "48": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\ncontinue;\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "49": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\n            System.arraycopy(more_magic, 1, tmp, magic.length,\n                    more_magic.length);            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "50": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, more_magic, tmp, tmp);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "51": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, length, tmp, tmp);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "52": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "53": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "54": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "55": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, tmp, tmp, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "56": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, length, tmp, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "57": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, more_magic, tmp, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "58": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "59": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, more_magic, tmp, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "60": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, 0, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "61": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, tmp, more_magic.length, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "62": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(length, more_magic, tmp, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "63": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, magic.length, length, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "64": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "65": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, magic.length, length, tmp, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "66": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "67": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, 0, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "68": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(length, more_magic, tmp, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "69": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(magic.length, length, tmp, tmp, 1);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "70": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, more_magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "71": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, tmp, more_magic.length, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "72": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, more_magic, more_magic.length, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "73": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, more_magic.length, 1);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "74": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(tmp, more_magic, more_magic.length, more_magic.length, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "75": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, more_magic.length, more_magic.length);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "76": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, tmp, more_magic.length, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }",
          "77": "    public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n        ensureOpen();\n        if (this.entry != null) {\n            closeEntry();\n        }\n        byte magic[] = new byte[2];\n        readFully(magic, 0, magic.length);\n        if (CpioUtil.byteArray2long(magic, false) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(false);\n        } else if (CpioUtil.byteArray2long(magic, true) == MAGIC_OLD_BINARY) {\n            this.entry = readOldBinaryEntry(true);\n        } else {\n            byte more_magic[] = new byte[4];\n            readFully(more_magic, 0, more_magic.length);\n            byte tmp[] = new byte[6];\n            System.arraycopy(magic, 0, tmp, 0, magic.length);\nSystem.arraycopy(more_magic, tmp, more_magic.length, more_magic.length, 0, 0);\n            String magicString = new String(tmp);\n            if (magicString.equals(MAGIC_NEW)) {\n                this.entry = readNewEntry(false);\n            } else if (magicString.equals(MAGIC_NEW_CRC)) {\n                this.entry = readNewEntry(true);\n            } else if (magicString.equals(MAGIC_OLD_ASCII)) {\n                this.entry = readOldAsciiEntry();\n            } else {\n                throw new IOException(\"Unknown magic [\" + magicString + \"]\");\n            }\n        }\n\n        this.entryBytesRead = 0;\n        this.entryEOF = false;\n        this.crc = 0;\n\n        if (this.entry.getName().equals(\"TRAILER!!!\")) {\n            this.entryEOF = true;\n            return null;\n        }\n        return this.entry;\n    }"
}