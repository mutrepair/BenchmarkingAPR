{
          "0": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, 2);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "1": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "2": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "3": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "4": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, false);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "5": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "6": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = (standardOffset + saveMillis);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "7": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = 0;\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "8": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = standardOffset;\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "9": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, null);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "10": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, -1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "11": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nif((prev >= instant)){\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n}\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "12": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = setDayOfWeek(chrono, prev);\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "13": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = setDayOfMonthPrevious(chrono, prev);\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "14": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, -1);\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "15": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, true);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "16": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = setDayOfMonthPrevious(chrono, prev);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "17": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(chrono, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "18": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = standardOffset;\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "19": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(standardOffset, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "20": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = (standardOffset + saveMillis);\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "21": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\noffset = 0;\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "22": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year(prev, 1).add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "23": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "24": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "25": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nchrono.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "26": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = prev;\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "27": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = setDayOfWeek(chrono, prev);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "28": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.add();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "29": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "30": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = ISOChronology.getInstanceUTC();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "31": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\ninstant += offset;\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "32": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.add(prev, 1).add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "33": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.millisOfDay().set(prev, 0);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "34": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nreturn (prev - offset);                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "35": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(iMonthOfYear, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "36": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = ISOChronology.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "37": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "38": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = prev.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "39": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "40": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = offset.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "41": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = add();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "42": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.monthOfYear();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "43": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().set(prev, iMonthOfYear);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "44": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(offset, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "45": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = year();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "46": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = instant.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "47": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = prev.year();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "48": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(instant, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "49": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, 0);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "50": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "51": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = add(prev);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "52": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().year();\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "53": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(saveMillis, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "54": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(iDayOfWeek, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "55": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nif((iDayOfWeek == 0)){\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n}\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "56": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.millisOfDay().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "57": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, \"null\");\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "58": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.monthOfYear().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "59": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().previous(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "60": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(prev, iMonthOfYear);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "61": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = standardOffset.year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "62": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().add(0);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "63": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.getInstanceUTC().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "64": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().setDayOfMonthPrevious(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "65": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().set(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "66": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.previous().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "67": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = .year().add(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "68": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nbreak;\n                    prev = chrono.year().add(prev, 1);                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "69": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().setDayOfWeek(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }",
          "70": "        public long previous(long instant, int standardOffset, int saveMillis) {\n            int offset;\n            if (iMode == 'w') {\n                offset = standardOffset + saveMillis;\n            } else if (iMode == 's') {\n                offset = standardOffset;\n            } else {\n                offset = 0;\n            }\n\n            // Convert from UTC to local time.\n            instant += offset;\n\n            Chronology chrono = ISOChronology.getInstanceUTC();\n            long prev = chrono.monthOfYear().set(instant, iMonthOfYear);\n            // Be lenient with millisOfDay.\n            prev = chrono.millisOfDay().set(prev, 0);\n            prev = chrono.millisOfDay().add(prev, iMillisOfDay);\n            prev = setDayOfMonthPrevious(chrono, prev);\n\n            if (iDayOfWeek == 0) {\n                if (prev >= instant) {\n                    prev = chrono.year().add(prev, -1);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                }\n            } else {\n                prev = setDayOfWeek(chrono, prev);\n                if (prev >= instant) {\nprev = chrono.year().debug(prev, 1);\n                    prev = chrono.monthOfYear().set(prev, iMonthOfYear);\n                    prev = setDayOfMonthPrevious(chrono, prev);\n                    prev = setDayOfWeek(chrono, prev);\n                }\n            }\n\n            // Convert from local time to UTC.\n            return prev - offset;\n        }"
}