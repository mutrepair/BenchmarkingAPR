{
          "0": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "1": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "2": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "3": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "4": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((s.equals(\"null\") || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "5": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "6": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "7": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || n.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "8": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "9": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((s.equals(\"null\") || s.equals(\"null\")) && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "10": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || t.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "11": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "12": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "13": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "14": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || .equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "15": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "16": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((s.equals(\"null\") && s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "17": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif(s.equals(\"null\")){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "18": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.lastIndexOf(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "19": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || .equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "20": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || validator.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "21": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "22": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.getName(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "23": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nvalidator.expectValidTypeofName(t, n, s);\n    if (!(s.equals(\"string\") || s.equals(\"boolean\") ||\n          s.equals(\"undefined\") || s.equals(\"function\") ||\n          s.equals(\"object\") || s.equals(\"unknown\"))) {      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "24": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nreturn;\n    if (!(s.equals(\"string\") || s.equals(\"boolean\") ||\n          s.equals(\"undefined\") || s.equals(\"function\") ||\n          s.equals(\"object\") || s.equals(\"unknown\"))) {      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "25": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.checkTypeofString(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "26": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){\n      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "27": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || .equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "28": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || .equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "29": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.equals(\"null\")) || .equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "30": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.get(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "31": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.valueOf(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "32": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\nif((((((s.equals(\"null\") || s.equals(\"null\")) || s.equals(\"null\")) || s.toString(\"null\")) || s.equals(\"null\")) || s.equals(\"null\"))){      validator.expectValidTypeofName(t, n, s);\n    }\n  }",
          "33": "  private void checkTypeofString(NodeTraversal t, Node n, String s) {\n    if (!(s.equals(\"string\") || s.equals(\"boolean\") ||\n          s.equals(\"undefined\") || s.equals(\"function\") ||\n          s.equals(\"object\") || s.equals(\"unknown\"))) {      validator.expectValidTypeofName(t, n, s);\n    }\n  }"
}