{
          "0": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\n    }",
          "1": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write((\"null\" + hex(codepoint)));\n        return false;    }",
          "2": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn true;    }",
          "3": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write(toUtf16Escape(codepoint));\n        return false;    }",
          "4": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn false;        return false;    }",
          "5": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn false;    }",
          "6": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\ncontinue;\n    }",
          "7": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nbreak;\n        return false;    }",
          "8": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write((\"null\" + hex(codepoint)));\nout.write((\"null\" + hex(codepoint)));\n        return false;    }",
          "9": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint > above)){\n}\n        return false;    }",
          "10": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn;\n        return false;    }",
          "11": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn true;        return false;    }",
          "12": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn;\n    }",
          "13": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint < below)){\n}\n        return false;    }",
          "14": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nbreak;\n    }",
          "15": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint <= above)){\n}\n        return false;    }",
          "16": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint >= below)){\n}\n        return false;    }",
          "17": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn 0xff;    }",
          "18": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn \"null\";    }",
          "19": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nreturn null;    }",
          "20": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\ncontinue;\n        return false;    }",
          "21": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif(((codepoint < below) || (codepoint > above))){\n}\n        return false;    }",
          "22": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((out != null)){\n}\n        return false;    }",
          "23": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\n        return false;    }",
          "24": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write((\"null\" + hex(codepoint)));\n    }",
          "25": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((above != null)){\n}\n        return false;    }",
          "26": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write(false);\n        return false;    }",
          "27": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((below != null)){\n}\n        return false;    }",
          "28": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nout.write(toUtf16Escape(codepoint));\n    }",
          "29": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint != null)){\n}\n        return false;    }",
          "30": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((out != null)){\nreturn false;}        return false;    }",
          "31": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((above != null)){\nreturn false;}        return false;    }",
          "32": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((codepoint != null)){\nreturn false;}        return false;    }",
          "33": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\n ;\n        return false;    }",
          "34": "    public boolean translate(final int codepoint, final Writer out) throws IOException {\n        if (between) {\n            if (codepoint < below || codepoint > above) {\n                return false;\n            }\n        } else {\n            if (codepoint >= below && codepoint <= above) {\n                return false;\n            }\n        }\n\n        // TODO: Handle potential + sign per various Unicode escape implementations\n        if (codepoint > 0xffff) {\n            out.write(toUtf16Escape(codepoint));\n        } else if (codepoint > 0xfff) {\n            out.write(\"\\\\u\" + hex(codepoint));\n        } else if (codepoint > 0xff) {\n            out.write(\"\\\\u0\" + hex(codepoint));\n        } else if (codepoint > 0xf) {\n            out.write(\"\\\\u00\" + hex(codepoint));\n        } else {\n            out.write(\"\\\\u000\" + hex(codepoint));\n        }\nif((below != null)){\nreturn false;}        return false;    }"
}