{
          "0": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "1": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "2": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < i);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "3": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i <= cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "4": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = 0;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "5": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);actualLen) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "6": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i >= cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "7": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nreturn false;        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "8": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = 1;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "9": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);cmpLen) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "10": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(actualLen < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "11": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < actualLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "12": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = 2;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "13": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);MIN_LONG_STR_NO_SIGN) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "14": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);MAX_LONG_STR) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "15": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);cmpStr) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "16": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);-i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "17": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(cmpLen < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "18": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (i < cmpLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "19": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);negative) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "20": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i > cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "21": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i == null)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "22": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(cmpStr < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "23": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i - cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "24": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpStr);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "25": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nreturn true;        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "26": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(long i = -1;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "27": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);diff) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "28": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(MIN_LONG_STR_NO_SIGN < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "29": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;;++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "30": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < MIN_LONG_STR_NO_SIGN);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "31": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(MAX_LONG_STR < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "32": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < MAX_LONG_STR);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "33": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(diff < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "34": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < diff);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "35": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i != null)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "36": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\n((i < cmpLen))            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "37": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < -i);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "38": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(negative < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "39": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(-i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "40": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nbreak;\n        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "41": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < negative);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "42": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i != null)){\n        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n}\n    }",
          "43": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i == null)){\nreturn true;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "44": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i == cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "45": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nreturn;\n        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "46": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\n((i < (i < cmpLen)))            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "47": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;negative;++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "48": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((actualLen == null)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "49": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i == null)){\n        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n}\n    }",
          "50": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < 0);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "51": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i >> cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "52": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i < 0)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "53": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(boolean i = -1;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "54": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i > 0)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "55": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = false;(i < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "56": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < cmpLen);++i) {        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "57": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nreturn (diff < 0);        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n}\n    }",
          "58": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i != null)){\nreturn true;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "59": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;( < cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "60": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < );++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "61": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i == 0)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "62": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(actualLen < (i < cmpLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "63": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((i == null)){\ncontinue;\n}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "64": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\ncontinue;\n        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "65": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nif((cmpLen == null)){\nreturn false;}        for (int i = -1; i < cmpLen; ++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "66": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i >>> cmpLen);++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "67": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (actualLen - cmpLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "68": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (cmpLen - cmpLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "69": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (cmpLen - actualLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "70": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (actualLen - actualLen));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "71": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nbreak;\n            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "72": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (actualLen - 0));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "73": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (actualLen - 1));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "74": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (cmpLen - 1));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }",
          "75": "    public static boolean inLongRange(String numberStr, boolean negative)\n    {\n        String cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;\n        int cmpLen = cmpStr.length();\n        int actualLen = numberStr.length();\n        if (actualLen < cmpLen) return true;\n        if (actualLen > cmpLen) return false;\n\n        // could perhaps just use String.compareTo()?\nfor(int i = -1;(i < (cmpLen - 0));++i) {            int diff = numberStr.charAt(i) - cmpStr.charAt(i);\n            if (diff != 0) {\n                return (diff < 0);\n            }\n        }\n        return true;\n    }"
}