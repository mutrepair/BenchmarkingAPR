{
          "0": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(true){            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "1": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn (java)getNullValue();        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "2": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(false){            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "3": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "4": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nvalue = jp.getText().trim();\n        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "5": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn null;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "6": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn ctxt.parseDate(value);        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "7": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(_valueClass){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "8": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn;\n        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "9": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn (Date)getEmptyValue();        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "10": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn ctxt;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "11": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn new java(jp.getLongValue());        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "12": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(value){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "13": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(jp.isEmpty()){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "14": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((\"null\" + iae.getMessage())){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "15": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nbreak;\n        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "16": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(t){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "17": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(((\"null\" + iae.getMessage()) + \"null\")){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "18": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(!_valueClass){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "19": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(value.length()){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "20": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn this;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "21": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(jp){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "22": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(ctxt.isEmpty()){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "23": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn jp;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "24": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn t;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "25": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(t.isEmpty()){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "26": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nreturn ;        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "27": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(iae.getMessage()){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "28": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif(\"null\"){            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "29": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\ncontinue;\n        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "30": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nbreak;\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "31": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt != 0)){\n        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n}\n    }",
          "32": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "33": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == 0)){\nreturn (java)getNullValue();}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "34": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt != 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "35": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == 0)){\nreturn ctxt.parseDate(value);}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "36": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nvalue = jp.getText().trim();\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "37": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt != 0)){\nreturn (java)getNullValue();}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "38": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt != 0)){\nreturn ctxt.parseDate(value);}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "39": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((jp != 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "40": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((jp == 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "41": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((t == 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "42": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((jp == 0)){\nreturn (java)getNullValue();}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "43": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((t != 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "44": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((value.length() == 0)){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "45": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == null)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "46": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == null)){\nreturn (java)getNullValue();}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "47": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == null)){\nreturn ctxt.parseDate(value);}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "48": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((value != 0)){\nreturn null;}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "49": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\ncontinue;\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "50": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt == 0)){\nreturn \"null\";}        if (false) {            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "51": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt && (ctxt != 0))){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "52": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt && (ctxt == 0))){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "53": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt && (ctxt == null))){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }",
          "54": "    protected java.util.Date _parseDate(JsonParser jp, DeserializationContext ctxt)\n        throws IOException, JsonProcessingException\n    {\n        JsonToken t = jp.getCurrentToken();\n        if (t == JsonToken.VALUE_NUMBER_INT) {\n            return new java.util.Date(jp.getLongValue());\n        }\n        if (t == JsonToken.VALUE_NULL) {\n            return (java.util.Date) getNullValue();\n        }\nif((ctxt && (ctxt != null))){\n            String value = null;\n            try {\n                // As per [JACKSON-203], take empty Strings to mean\n                value = jp.getText().trim();\n                if (value.length() == 0) {\n                    return (Date) getEmptyValue();\n                }\n                return ctxt.parseDate(value);\n            } catch (IllegalArgumentException iae) {\n                throw ctxt.weirdStringException(value, _valueClass,\n                        \"not a valid representation (error: \"+iae.getMessage()+\")\");\n            }\n        }\n        throw ctxt.mappingException(_valueClass, t);\n    }"
}