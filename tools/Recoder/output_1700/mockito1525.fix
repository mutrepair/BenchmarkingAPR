{
          "0": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(true){            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "1": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn this;        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "2": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(isEquals()){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "3": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(-true){            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "4": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "5": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn null;        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "6": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs == null)){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "7": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nbreak;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "8": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nsuper.append();\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "9": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == null)){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "10": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((i < lhs.length)){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "11": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(!isEquals()){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "12": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "13": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(this.isEquals()){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "14": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.setEquals(false);\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "15": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nappend(lhs[i], rhs[i]);\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "16": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(lhs){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "17": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(-false){            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "18": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(!isEquals()){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "19": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn false;        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "20": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn rhs;        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "21": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(isEquals()){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "22": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(isEquals()){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "23": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(!isEquals()){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "24": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn true;        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "25": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(rhs){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "26": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs == null)){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "27": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs == null)){\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n}\n    }",
          "28": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(\"null\"){            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "29": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\ncontinue;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "30": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs != false)){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "31": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == false)){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "32": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs != false)){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "33": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "34": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == false)){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "35": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.rhs = false;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "36": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == null)){\nreturn this;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "37": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.rhs = rhs;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "38": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.rhs = true;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "39": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(false){            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "40": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nfor(int i = 0;((i < lhs.length) && isEquals);++i) {        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "41": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == null)){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "42": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs != false)){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "43": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.lhs = false;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "44": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((isEquals == false)){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "45": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs != null)){\nreturn null;}        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "46": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.lhs = rhs;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "47": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.lhs = true;\n        if (false) {            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "48": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs.length != rhs.length)){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "49": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nbreak;\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "50": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.setEquals(false);\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "51": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs && (rhs != false))){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "52": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nappend(lhs[i], rhs[i]);\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "53": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs && (rhs == false))){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "54": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs && (rhs == null))){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "55": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs && (rhs != null))){\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }",
          "56": "    public EqualsBuilder append(short[] lhs, short[] rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn;\n            return this;\n        }\n        if (lhs == null || rhs == null) {\n            this.setEquals(false);\n            return this;\n        }\n        if (lhs.length != rhs.length) {\n            this.setEquals(false);\n            return this;\n        }\n        for (int i = 0; i < lhs.length && isEquals; ++i) {\n            append(lhs[i], rhs[i]);\n        }\n        return this;\n    }"
}