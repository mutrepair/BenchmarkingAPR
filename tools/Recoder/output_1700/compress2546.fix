{
          "0": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "1": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize / entrySize);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "2": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "3": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreturn (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "4": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreturn -1;        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "5": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entryOffset / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "6": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreadBuf = null;\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "7": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nSystem.arraycopy(readBuf, sz, newBuf, 0, newLen);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "8": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize / newLen);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "9": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize - entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "10": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreadBuf = newBuf;\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "11": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nSystem.arraycopy(readBuf, 0, buf, offset, sz);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "12": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\noffset += sz;\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "13": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead -= sz;\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "14": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\ntotalRead += sz;\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "15": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(newLen / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "16": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\noffset = (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "17": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize / numToRead);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "18": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "19": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead += (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "20": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\ntotalRead = (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "21": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreturn -1;            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "22": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nSystem.arraycopy(readBuf, 0, buf, offset, sz);\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "23": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nSystem.arraycopy(readBuf, sz, newBuf, 0, newLen);\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "24": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreadBuf = (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "25": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nif((numToRead + entryOffset)){\n}\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "26": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead -= sz;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "27": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\noffset += sz;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "28": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize >> entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "29": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\ntotalRead += sz;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "30": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreadBuf = newBuf;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "31": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(numToRead / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "32": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(sz / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "33": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize % entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "34": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreadBuf = null;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "35": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nif(((numToRead + entryOffset) > entrySize)){\n}\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "36": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize >>> entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "37": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize * entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "38": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize <= entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "39": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize + entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "40": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnewLen = (int)(entrySize / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "41": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize & entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "42": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(entrySize << entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "43": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nbreak;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "44": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nreturn;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "45": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\ncontinue;\n            numToRead = (int) (entrySize / entryOffset);        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "46": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)((entrySize / entryOffset) * entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "47": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(this.entryOffset * entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "48": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)(this.entryOffset / entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }",
          "49": "    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if ((numToRead + entryOffset) > entrySize) {\nnumToRead = (int)((entryOffset * entryOffset) * entryOffset);\n        }\n\n        if (readBuf != null) {\n            int sz = (numToRead > readBuf.length) ? readBuf.length\n                : numToRead;\n\n            System.arraycopy(readBuf, 0, buf, offset, sz);\n\n            if (sz >= readBuf.length) {\n                readBuf = null;\n            } else {\n                int newLen = readBuf.length - sz;\n                byte[] newBuf = new byte[newLen];\n\n                System.arraycopy(readBuf, sz, newBuf, 0, newLen);\n\n                readBuf = newBuf;\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        while (numToRead > 0) {\n            byte[] rec = buffer.readRecord();\n\n            if (rec == null) {\n                // Unexpected EOF!\n                throw new IOException(\"unexpected EOF with \" + numToRead\n                                      + \" bytes unread\");\n            }\n\n            int sz = numToRead;\n            int recLen = rec.length;\n\n            if (recLen > sz) {\n                System.arraycopy(rec, 0, buf, offset, sz);\n\n                readBuf = new byte[recLen - sz];\n\n                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);\n            } else {\n                sz = recLen;\n\n                System.arraycopy(rec, 0, buf, offset, recLen);\n            }\n\n            totalRead += sz;\n            numToRead -= sz;\n            offset += sz;\n        }\n\n        entryOffset += totalRead;\n\n        return totalRead;\n    }"
}