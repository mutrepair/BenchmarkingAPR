{
          "0": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch >= \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "1": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch <= \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "2": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "3": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch < \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "4": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "5": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch > \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "6": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch < \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "7": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch != \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "8": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((i < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "9": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(ch){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "10": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (i < 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "11": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((dateStr < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "12": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (--i >= 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "13": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch - \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "14": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "15": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(( < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "16": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(!ch){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "17": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || \"null\")){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "18": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (i < 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "19": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((pos < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "20": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch > \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "21": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch < ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "22": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((-ch < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "23": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(ch.isEmpty()){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "24": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch <= ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "25": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (--i >= 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "26": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch >= ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "27": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch < 0)){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "28": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch > ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "29": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(i){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "30": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch + \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "31": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == null)){\nreturn null;}            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "32": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch || (ch < \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "33": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch == ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "34": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch != null)){\n}\n            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "35": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == null)){\nreturn parseAsISO8601(dateStr, pos);}            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "36": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch++ < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "37": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch < ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "38": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || ( < ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "39": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "40": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch < 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "41": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == null)){\n}\n            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "42": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch <= 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "43": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch >= 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "44": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch >> \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "45": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch <= \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "46": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(dateStr.length()){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "47": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch < ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "48": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && \"null\")){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "49": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch >>> \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "50": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch == ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "51": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch >= \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "52": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch > 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "53": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || !ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "54": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == null)){\nreturn new Date(Long.parseLong(dateStr));}            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "55": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch >= ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "56": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch > \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "57": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch < 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "58": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(ch.equals(ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "59": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch == \"null\"))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "60": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch == ch)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "61": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || ( > ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "62": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(!ch.isEmpty()){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "63": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") && (ch <= ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "64": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nreturn null;            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "65": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch < null)){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "66": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch > ch))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "67": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch > 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "68": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch < dateStr))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "69": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(((ch < \"null\") || (ch == 0))){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "70": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "71": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(( < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "72": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(ch.equals(i)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "73": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif((ch < 1)){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "74": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(NumberInput.inLongRange(dateStr, false)){\n        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "75": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nreturn;\n            if (ch < '0') break;        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }",
          "76": "    public Date parse(String dateStr, ParsePosition pos)\n    {\n        if (looksLikeISO8601(dateStr)) { // also includes \"plain\"\n            return parseAsISO8601(dateStr, pos);\n        }\n        /* 14-Feb-2010, tatu: As per [JACKSON-236], better also\n         *   consider \"stringified\" simple time stamp\n         */\n        int i = dateStr.length();\n        while (--i >= 0) {\n            char ch = dateStr.charAt(i);\nif(( < \"null\")){        }\n        if (i < 0) { // all digits\n            if (NumberInput.inLongRange(dateStr, false)) {\n                return new Date(Long.parseLong(dateStr));\n            }\n        }\n        // Otherwise, fall back to using RFC 1123\n        return parseAsRFC1123(dateStr, pos);\n    }"
}