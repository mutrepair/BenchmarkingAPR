{
          "0": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((step.getAxis() == Compiler.AXIS_ATTRIBUTE)){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "1": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() != Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "2": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "3": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(step.getAxis()){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "4": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "5": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) || (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "6": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == Compiler.NODE_TYPE_NODE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "7": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getPredicates() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "8": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false && (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "9": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nreturn false;        else if (false\n                || step.getAxis() == Compiler.AXIS_ATTRIBUTE) {            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "10": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() >= Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "11": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "12": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() > Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "13": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nreturn areBasicPredicates(step.getPredicates());        else if (false\n                || step.getAxis() == Compiler.AXIS_ATTRIBUTE) {            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "14": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(computeContextDependent()){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "15": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(isSimplePath()){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "16": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getName() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "17": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "18": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) && (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "19": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (nodeType.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "20": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "21": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getNodeTest() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "22": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "23": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() <= Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "24": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nreturn;\n        else if (false\n                || step.getAxis() == Compiler.AXIS_ATTRIBUTE) {            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "25": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == Compiler.AXIS_SELF))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "26": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) || computeContextDependent())){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "27": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) || isSimplePath())){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "28": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (nodeTest.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "29": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false == (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "30": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((true || (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "31": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (Compiler.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "32": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.isSimpleStep() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "33": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() < Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "34": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == NODE_TYPE_NODE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "35": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == step))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "36": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false < (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "37": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == nodeType))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "38": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() == AXIS_SELF))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "39": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((NodeNameTest)nodeTest){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "40": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false > (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "41": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "42": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false != (step.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "43": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (.getAxis() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "44": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.toString() == Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "45": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nbreak;\n        else if (false\n                || step.getAxis() == Compiler.AXIS_ATTRIBUTE) {            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "46": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif((false || (step.getAxis() && Compiler.AXIS_ATTRIBUTE))){            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "47": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) || (step.getAxis().computeContextDependent() == Compiler.AXIS_ATTRIBUTE))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }",
          "48": "    protected boolean isSimpleStep(Step step) {\n        if (step.getAxis() == Compiler.AXIS_SELF) {\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeTypeTest)) {\n                return false;\n            }\n            int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n            if (nodeType != Compiler.NODE_TYPE_NODE) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\nif(((false || (step.getAxis() == Compiler.AXIS_ATTRIBUTE)) || (step.getAxis().isSimplePath() == Compiler.AXIS_ATTRIBUTE))){\n            NodeTest nodeTest = step.getNodeTest();\n            if (!(nodeTest instanceof NodeNameTest)){\n                return false;\n            }\n            \n            if (((NodeNameTest) nodeTest).isWildcard()) {\n                return false;\n            }\n            return areBasicPredicates(step.getPredicates());\n        }\n        return false;\n    }"
}