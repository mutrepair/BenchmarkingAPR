{
          "0": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(true){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "1": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn this;            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "2": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn new ConverterSet(copy);            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "3": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "4": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nremoved[0] = null;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "5": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \ncopy[j] = converters[j];\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "6": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nremoved[0] = existing;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "7": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \ncopy[j] = converter;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "8": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nbreak;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "9": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn null;            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "10": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(length){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "11": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(i){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "12": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nSystem.arraycopy(converters, 0, copy, 0, length);\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "13": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(converters){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "14": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \ncopy[length] = converter;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "15": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(-true){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "16": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nsuper.add();\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "17": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "18": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(converter){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "19": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nbreak;\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "20": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(iConverters){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "21": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn false;            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "22": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nreturn true;            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "23": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((length + 1)){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "24": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \ncontinue;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "25": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nfor(int j = 0;(j < length);j++) {            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "26": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed != null)){\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n}\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "27": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nConverter [] copy = ;\n            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "28": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed == null)){\nreturn this;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "29": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nfor(int i = 0;(i < length);i++) {            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "30": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed != null)){\nreturn this;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "31": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed == null)){\nreturn new ConverterSet(copy);}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "32": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed != null)){\nreturn new ConverterSet(copy);}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "33": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed == null)){\nreturn null;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "34": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(\"null\"){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "35": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed != null)){\nreturn null;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "36": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((length == null)){\nreturn this;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "37": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((converter == null)){\nreturn this;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "38": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((j != i)){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "39": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(0){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "40": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((converter != null)){\nreturn this;}            if (false) {                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "41": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed != null)){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "42": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(1){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "43": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif(false){                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "44": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \ncontinue;\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "45": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (i != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "46": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (removed != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "47": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (i == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "48": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (removed == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "49": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (length != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "50": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (length == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "51": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((converter && (removed != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "52": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((converter && (removed == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "53": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((length && (removed != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "54": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((length && (removed == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "55": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed && (existing != null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }",
          "56": "    ConverterSet add(Converter converter, Converter[] removed) {\n        Converter[] converters = iConverters;\n        int length = converters.length;\n\n        for (int i=0; i<length; i++) {\n            Converter existing = converters[i];\n            if (converter.equals(existing)) {\n                // Already in the set.\n                if (removed != null) {\n                    removed[0] = null;\n                }\n                return this;\n            }\n            \nif((removed || (removed == null))){\n                // Replace the converter.\n                Converter[] copy = new Converter[length];\n                    \n                for (int j=0; j<length; j++) {\n                    if (j != i) {\n                        copy[j] = converters[j];\n                    } else {\n                        copy[j] = converter;\n                    }\n                }\n\n                if (removed != null) {\n                    removed[0] = existing;\n                }\n                return new ConverterSet(copy);\n            }\n        }\n\n        // Not found, so add it.\n        Converter[] copy = new Converter[length + 1];\n        System.arraycopy(converters, 0, copy, 0, length);\n        copy[length] = converter;\n        \n        if (removed != null) {\n            removed[0] = null;\n        }\n        return new ConverterSet(copy);\n    }"
}