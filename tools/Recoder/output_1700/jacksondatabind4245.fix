{
          "0": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(true){            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "1": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(usesObjectId()){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "2": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(_propertyFilterId){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "3": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nreturn;\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "4": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((objectId != null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "5": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(_objectIdWriter){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "6": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(!usesObjectId()){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "7": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((objectId != null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "8": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((objectId == null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "9": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(!_propertyFilterId){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "10": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(!_objectIdWriter){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "11": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(w){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "12": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "13": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(jgen){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "14": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(alwaysAsId){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "15": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(objectId){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "16": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(bean){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "17": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(generator){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "18": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nw.serializer.serialize(id, jgen, provider);\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "19": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(\"null\"){            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "20": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((objectId == null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "21": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(usesObjectId()){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "22": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\njgen.writeStartObject();\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "23": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(w.serializer.usesObjectId()){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "24": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nserializeFieldsFiltered(bean, jgen, provider);\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "25": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((w != null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "26": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((bean != null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "27": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((bean != null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "28": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nobjectId = false;\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "29": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((w == null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "30": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nserializeFields(bean, jgen, provider);\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "31": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nobjectId = true;\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "32": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((bean == null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "33": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(startEndObject){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "34": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((w != null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "35": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen == null)){\nreturn;\n}        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "36": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(objectId.generateId(bean)){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "37": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen != null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "38": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\njgen.writeEndObject();\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "39": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(w.alwaysAsId){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "40": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((_objectIdWriter != null)){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "41": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nobjectId.writeAsField(jgen, provider, w);\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "42": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nbreak;\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "43": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(startEndObject){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "44": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(w.alwaysAsId){\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n}\n    }",
          "45": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen && (jgen == null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "46": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen && (jgen != null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "47": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nreturn;\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "48": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(((objectId != null) && (_propertyFilterId != null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "49": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif(false){            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "50": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nbreak;\n        if (false) {            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "51": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nw.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "52": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((_propertyFilterId && (jgen == null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "53": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen && (provider == null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }",
          "54": "    protected final void _serializeWithObjectId(Object bean,\n            JsonGenerator jgen, SerializerProvider provider,\n            boolean startEndObject)\n        throws IOException, JsonGenerationException\n    {\n        final ObjectIdWriter w = _objectIdWriter;\n        WritableObjectId objectId = provider.findObjectId(bean, w.generator);\n        // If possible, write as id already\nif((jgen && (provider != null))){\n            return;\n        }\n        // If not, need to inject the id:\n        Object id = objectId.generateId(bean);\n        if (w.alwaysAsId) {\n            w.serializer.serialize(id, jgen, provider);\n            return;\n        }\n        if (startEndObject) {\n            jgen.writeStartObject();\n        }\n        objectId.writeAsField(jgen, provider, w);\n        if (_propertyFilterId != null) {\n            serializeFieldsFiltered(bean, jgen, provider);\n        } else {\n            serializeFields(bean, jgen, provider);\n        }\n        if (startEndObject) {\n            jgen.writeEndObject();\n        }\n    }"
}