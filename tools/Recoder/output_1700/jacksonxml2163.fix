{
          "0": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(false){            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "1": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "2": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(true){            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "3": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\n++changes;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "4": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nname = name.substring(0, (name.length() - 2));\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "5": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(changes){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "6": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb = new StringBuilder(name);\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "7": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nbreak;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "8": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb.setCharAt(i, \"null\");\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "9": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(i){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "10": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nbreak;\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "11": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb.append(\"null\");\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "12": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nreturn name;            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "13": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nreturn sb.toString();            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "14": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(sb){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "15": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(!i){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "16": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nreturn;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "17": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(!changes){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "18": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\ncontinue;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "19": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(name){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "20": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\n++changes;\ncontinue;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "21": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(len){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "22": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(name.length()){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "23": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nreturn null;            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "24": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((c >= \"null\")){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "25": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\n++changes;\nbreak;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "26": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(name.isEmpty()){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "27": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(name.toString()){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "28": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nname = name.substring(0, (name.length() - 2));\ncontinue;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "29": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "30": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb = new StringBuilder(name);\ncontinue;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "31": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((c <= \"null\")){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "32": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb.setCharAt(i, \"null\");\ncontinue;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "33": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(!len){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "34": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes == 0)){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "35": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nname = name.substring(0, (name.length() - 2));\nbreak;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "36": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((c == \"null\")){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "37": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "38": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(((c >= \"null\") && (c <= \"null\"))){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "39": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\ncontinue;\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "40": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes == 0)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "41": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb = new StringBuilder(name);\nbreak;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "42": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nsb.setCharAt(i, \"null\");\nbreak;\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "43": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nfor(int i = 0,i = 0;(i < len);++i) {            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "44": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((i != null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "45": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((c == \"null\")){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "46": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((name != null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "47": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((i != null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "48": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((name != null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "49": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes == null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "50": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((sb != null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "51": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((sb != null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "52": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((i == null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "53": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(( != null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "54": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nreturn;\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "55": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif(( != null)){\ncontinue;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "56": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes == null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "57": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\nbreak;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "58": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((i == null)){\n            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n}\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "59": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes && (i != null))){\n            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "60": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\nsb = false;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "61": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\nsb = null;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }",
          "62": "    public static String sanitizeXmlTypeName(String name)\n    {\n        StringBuilder sb;\n        int changes = 0;\n        // First things first: remove array types' trailing[]...\n        if (name.endsWith(\"[]\")) {\n            do {\n                name = name.substring(0, name.length() - 2);\n                ++changes;\n            } while (name.endsWith(\"[]\"));\n            sb = new StringBuilder(name);\n            // do trivial pluralization attempt\n            if (name.endsWith(\"s\")) {\n                sb.append(\"es\");\n            } else {\n                sb.append('s');\n            }\n        } else {\n            sb = new StringBuilder(name);\n        }\n        for (int i = 0, len = name.length(); i < len; ++i) {\n            char c = name.charAt(i);\n            if (c > 127) continue;\n            if (c >= 'a' && c <= 'z') continue;\n            if (c >= 'A' && c <= 'Z') continue;\n            if (c >= '0' && c <= '9') continue;\nif((changes != null)){\nsb = true;\n}            if (true) continue;            // Ok, need to replace\n            ++changes;\n            if (c == '$') {\n                sb.setCharAt(i, '.');\n            } else {\n                sb.setCharAt(i, '_');\n            }\n        }\n        if (changes == 0) {\n            return name;\n        }\n        return sb.toString();\n    }"
}