{
          "0": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= rhs);\n        return this;\n    }",
          "1": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs > rhs);\n        return this;\n    }",
          "2": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs <= rhs);\n        return this;\n    }",
          "3": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs < rhs);\n        return this;\n    }",
          "4": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs == rhs);\n        return this;\n    }",
          "5": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs != rhs);\n        return this;\n    }",
          "6": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >>> rhs);\n        return this;\n    }",
          "7": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >> rhs);\n        return this;\n    }",
          "8": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs - rhs);\n        return this;\n    }",
          "9": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs & rhs);\n        return this;\n    }",
          "10": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals += (lhs >= rhs);\n        return this;\n    }",
          "11": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= isEquals);\n        return this;\n    }",
          "12": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (rhs >= rhs);\n        return this;\n    }",
          "13": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = rhs;\n        return this;\n    }",
          "14": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (isEquals >= rhs);\n        return this;\n    }",
          "15": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= lhs);\n        return this;\n    }",
          "16": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn null;        isEquals = (lhs >= rhs);        return this;\n    }",
          "17": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals -= (lhs >= rhs);\n        return this;\n    }",
          "18": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = lhs;\n        return this;\n    }",
          "19": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= );\n        return this;\n    }",
          "20": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ( >= rhs);\n        return this;\n    }",
          "21": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nrhs = (lhs >= rhs);\n        return this;\n    }",
          "22": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals &= (lhs >= rhs);\n        return this;\n    }",
          "23": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs != null)){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "24": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals += rhs;\n        return this;\n    }",
          "25": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nlhs = (lhs >= rhs);\n        return this;\n    }",
          "26": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals |= (lhs >= rhs);\n        return this;\n    }",
          "27": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = isEquals;\n        return this;\n    }",
          "28": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals *= (lhs >= rhs);\n        return this;\n    }",
          "29": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals += lhs;\n        return this;\n    }",
          "30": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs >= rhs)){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "31": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\n = (lhs >= rhs);\n        return this;\n    }",
          "32": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn 0;        isEquals = (lhs >= rhs);        return this;\n    }",
          "33": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn rhs;        isEquals = (lhs >= rhs);        return this;\n    }",
          "34": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nsuper.append();\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "35": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn;\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "36": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ((lhs >= rhs) + rhs);\n        return this;\n    }",
          "37": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == null)){\nreturn null;}        isEquals = (lhs >= rhs);        return this;\n    }",
          "38": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn false;        isEquals = (lhs >= rhs);        return this;\n    }",
          "39": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ((lhs >= rhs) | rhs);\n        return this;\n    }",
          "40": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\n        return this;\n    }",
          "41": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif(rhs){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "42": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == false)){\nreturn null;}        isEquals = (lhs >= rhs);        return this;\n    }",
          "43": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nthis.rhs = rhs;\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "44": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs == null)){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "45": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals.isEquals = (lhs >= rhs);\n        return this;\n    }",
          "46": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals().isEquals = (lhs >= rhs);\n        return this;\n    }",
          "47": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((lhs != null)){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "48": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((rhs != null)){\nreturn null;}        isEquals = (lhs >= rhs);        return this;\n    }",
          "49": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn this;        isEquals = (lhs >= rhs);        return this;\n    }",
          "50": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs + rhs);\n        return this;\n    }",
          "51": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nif((isEquals == false)){\n        isEquals = (lhs >= rhs);        return this;\n}\n    }",
          "52": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= );\n        return this;\n    }",
          "53": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ( >= rhs);\n        return this;\n    }",
          "54": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= );\n        return this;\n    }",
          "55": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ((lhs >= rhs) & rhs);\n        return this;\n    }",
          "56": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nbreak;\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "57": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ((lhs >= rhs) * rhs);\n        return this;\n    }",
          "58": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nreturn isEquals = (lhs >= rhs);        return this;\n    }",
          "59": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = ( >= rhs);\n        return this;\n    }",
          "60": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (lhs >= rhs);\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "61": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\n        isEquals = (lhs >= rhs);        return this;\n    }",
          "62": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (rhs <= rhs);\n        return this;\n    }",
          "63": "    public EqualsBuilder append(char lhs, char rhs) {\n        if (isEquals == false) {\n            return this;\n        }\nisEquals = (rhs < rhs);\n        return this;\n    }"
}