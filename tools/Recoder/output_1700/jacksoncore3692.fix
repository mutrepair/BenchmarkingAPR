{
          "0": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index >= 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "1": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((unescaped == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "2": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index <= 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "3": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "4": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index > 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "5": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index != 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "6": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((ch == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "7": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(index){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "8": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == 2)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "9": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((bits == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "10": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index < 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "11": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((b64variant == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "12": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(( == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "13": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((INT_SPACE == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "14": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(ch){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "15": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == 1)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "16": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(isClosed()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "17": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(hasTextCharacters()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "18": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(loadMore()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "19": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nclose();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "20": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nloadMoreGuaranteed();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "21": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n_finishString();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "22": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n_closeInput();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "23": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n_releaseBuffers();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "24": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n_handleEOF();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "25": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nconvertNumberToInt();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "26": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nconvertNumberToLong();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "27": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nconvertNumberToBigInteger();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "28": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nconvertNumberToDouble();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "29": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nconvertNumberToBigDecimal();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "30": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreportOverflowInt();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "31": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreportOverflowLong();\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "32": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!index){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "33": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "34": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((ch == 1)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "35": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (index == 1))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "36": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreturn 0;            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "37": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index != 1)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "38": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (index == 1))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "39": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(( == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "40": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "41": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!isClosed()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "42": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!hasTextCharacters()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "43": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!loadMore()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "44": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == \"null\")){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "45": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(( == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "46": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == 0)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "47": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(isClosed(b64variant, unescaped, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "48": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(hasTextCharacters(b64variant, unescaped, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "49": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(loadMore(b64variant, unescaped, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "50": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (unescaped <= INT_SPACE))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "51": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index - 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "52": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((ch == index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "53": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == (index == 1))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "54": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(isClosed(unescaped)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "55": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(hasTextCharacters(unescaped)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "56": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(loadMore(unescaped)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "57": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(isClosed(index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "58": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(hasTextCharacters(index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "59": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(loadMore(index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "60": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(isClosed(b64variant, ch, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "61": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(hasTextCharacters(b64variant, ch, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "62": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(loadMore(b64variant, ch, index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "63": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (unescaped <= INT_SPACE))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "64": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreturn -1;            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "65": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (bits < 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "66": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index != null)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "67": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (bits < 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "68": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index < 1)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "69": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == INT_SPACE)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "70": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == ch)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "71": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!ch){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "72": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((ch != 1)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "73": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index != \"null\")){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "74": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == -1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "75": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreturn;\n            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "76": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(!){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "77": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(b64variant){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "78": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (ch != \"null\"))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "79": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nreturn bits;            if (index == 1) { // whitespace only allowed to be skipped between triplets                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "80": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(.isClosed()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "81": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(.hasTextCharacters()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "82": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(.loadMore()){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "83": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (index == 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "84": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((ch == ch)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "85": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == )){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "86": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "87": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (index == 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "88": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == null)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "89": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((unescaped.INT_SPACE == 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "90": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && index)){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "91": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (ch == 1))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "92": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (ch == 1))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "93": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (ch == 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "94": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (ch == 0))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "95": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (ch == ch))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "96": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (ch == ch))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "97": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (index == index))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "98": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (index == ch))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "99": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (ch == index))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "100": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index == false)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "101": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif((index + 1)){                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "102": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (index == index))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "103": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) && (index == \"null\"))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "104": "    protected final int _decodeBase64Escape(Base64Variant b64variant, char ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        char unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\nif(((index == 1) || (index == ch))){\n                return -1;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }"
}