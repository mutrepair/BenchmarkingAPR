{
          "0": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() == Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "1": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "2": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() && Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "3": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() > Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "4": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() || Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "5": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() instanceof Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "6": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1] != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "7": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() >= Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "8": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() < Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "9": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != steps[1])){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "10": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(getAxis()){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "11": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nreturn false;        if (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) {            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "12": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((arg != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "13": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "14": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != Compiler.steps[1])){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "15": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps == null) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "16": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps != null) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "17": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getNodeTest() != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "18": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() <= Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "19": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != steps[1].getAxis())){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "20": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "21": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != AXIS_ATTRIBUTE[1])){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "22": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != arg)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "23": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(steps){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "24": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(steps[1].getAxis()){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "25": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((AXIS_ATTRIBUTE[1] != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "26": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((test != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "27": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(steps.getAxis()){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "28": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1] != Compiler.AXIS_ATTRIBUTE)){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "29": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps != 1) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "30": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps == 1) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "31": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1] == Compiler.AXIS_ATTRIBUTE)){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "32": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != steps)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "33": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps == null) || (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "34": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nreturn true;        if (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) {            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "35": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].isNameAttributeTest() != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "36": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps != null) || (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "37": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps == null))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "38": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps != null))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "39": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "40": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(steps[1].equals(steps)){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "41": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() != steps[1].getAxis())){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "42": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && steps[1])){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "43": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((NodeNameTest)test){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "44": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nreturn;\n        if (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) {            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "45": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1] == 1) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "46": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() == null) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "47": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps == 1))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "48": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps != 1))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "49": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getName() != Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "50": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nbreak;\n        if (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) {            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "51": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps != steps[1])){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "52": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1] == null) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "53": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1] != 1) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "54": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] == 1))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "55": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1] != null) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "56": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] == null))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "57": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] != null))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "58": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] != 1))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "59": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] == Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "60": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif((steps[1].getAxis() & Compiler.AXIS_ATTRIBUTE)){            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "61": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps[1] == 0))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "62": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps == steps[1]) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "63": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps != steps[1]) && (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "64": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE) && (steps == steps[1]))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }",
          "65": "    private boolean isNameAttributeTest(Expression arg) {\n        if (!(arg instanceof LocationPath)) {\n            return false;\n        }\n\n        Step[] steps = ((LocationPath) arg).getSteps();\n        if (steps.length != 1) {\n            return false;\n        }\nif(((steps[1] == null) || (steps[1].getAxis() != Compiler.AXIS_ATTRIBUTE))){\n            return false;\n        }\n        NodeTest test = steps[0].getNodeTest();\n        if (!(test instanceof NodeNameTest)) {\n            return false;\n        }\n        if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n            return false;\n        }\n        return true;\n    }"
}