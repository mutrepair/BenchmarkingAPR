{
          "0": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = 0;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "1": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "2": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = 1;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "3": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i <= len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "4": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = 2;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "5": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);len) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "6": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i >= len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "7": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);fpropsOut) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "8": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "9": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < i);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "10": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);-i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "11": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);propsOut) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "12": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i > len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "13": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < (i < len));++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "14": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(len < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "15": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nreturn;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "16": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(fpropsIn == null);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "17": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);bpw) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "18": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);ignoredSet) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "19": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(fpropsOut < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "20": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < fpropsOut);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "21": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((fpropsOut != null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "22": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -2;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "23": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(long i = -1;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "24": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = false;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "25": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < propsOut);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "26": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;;++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "27": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(propsOut < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "28": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\npropsOut.add(bpw);\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "29": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);~i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "30": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfpropsOut.add(fpropsIn[i]);\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "31": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(len < (i < len));++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "32": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nbreak;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "33": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i - len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "34": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < 0);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "35": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);fpropsIn) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "36": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);-len) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "37": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((i != null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "38": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((fpropsOut == null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "39": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i == len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "40": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);i++) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "41": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_filteredProps = ((fpropsOut == null))?null:fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "42": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n((i < len))            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "43": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((len != null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "44": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = null;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "45": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -0;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "46": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_typeId = src._typeId;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "47": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_serializationShape = src._serializationShape;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "48": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);_props) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "49": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "50": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_anyGetterWriter = src._anyGetterWriter;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "51": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((fpropsIn == null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "52": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_objectIdWriter = src._objectIdWriter;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "53": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < len);_typeId) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "54": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n_propertyFilterId = src._propertyFilterId;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "55": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(len < i);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "56": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n((i < (i < len)))            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "57": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = true;(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "58": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = \"null\";(i < len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "59": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((propsOut != null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "60": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((fpropsOut == null)){\ncontinue;\n}        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "61": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((i == null)){\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n}\n    }",
          "62": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n(;;)            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "63": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < bpw);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "64": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nif((fpropsOut != null)){\ncontinue;\n}        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "65": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\n((i < i))            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "66": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i >> len);++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "67": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nbreak;\n            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "68": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\ncontinue;\n        for (int i = -1; i < len; ++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "69": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < (i - null));++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "70": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < (len - null));++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }",
          "71": "    protected BeanSerializerBase(BeanSerializerBase src, String[] toIgnore)\n    {\n        super(src._handledType);\n\n        // Bit clumsy, but has to do:\n        HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(toIgnore);\n        final BeanPropertyWriter[] propsIn = src._props;\n        final BeanPropertyWriter[] fpropsIn = src._filteredProps;\n        final int len = propsIn.length;\n\n        ArrayList<BeanPropertyWriter> propsOut = new ArrayList<BeanPropertyWriter>(len);\n        ArrayList<BeanPropertyWriter> fpropsOut = (fpropsIn == null) ? null : new ArrayList<BeanPropertyWriter>(len);\n\nfor(int i = -1;(i < (i - len));++i) {            BeanPropertyWriter bpw = propsIn[i];\n            // should be ignored?\n            if (ignoredSet.contains(bpw.getName())) {\n                continue;\n            }\n            propsOut.add(bpw);\n            if (fpropsIn != null) {\n                fpropsOut.add(fpropsIn[i]);\n            }\n        }\n        _props = propsOut.toArray(new BeanPropertyWriter[propsOut.size()]);\n        _filteredProps = (fpropsOut == null) ? null : fpropsOut.toArray(new BeanPropertyWriter[fpropsOut.size()]);\n        \n        _typeId = src._typeId;\n        _anyGetterWriter = src._anyGetterWriter;\n        _objectIdWriter = src._objectIdWriter;\n        _propertyFilterId = src._propertyFilterId;\n        _serializationShape = src._serializationShape;\n    }"
}