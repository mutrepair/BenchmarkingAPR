{
          "0": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i < counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "1": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i > counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "2": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "3": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i >= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "4": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i || counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "5": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nstack.removeLast();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "6": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelToClose = el;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "7": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= i);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "8": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i && counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "9": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\ncounter++;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "10": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nbreak;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "11": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(elTag <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "12": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i == counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "13": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= elTag);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "14": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= counter);i) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "15": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseComment();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "16": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseXmlDecl();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "17": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseEndTag();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "18": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseStartTag();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "19": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseTextNode();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "20": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nparseCdata();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "21": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nreturn elToClose;            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "22": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(el <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "23": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= el);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "24": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 1;(i <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "25": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = (stack.size() - 1);(i > 0);i--) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "26": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;( <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "27": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= counter);elTag) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "28": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseComment();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "29": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseXmlDecl();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "30": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseEndTag();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "31": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseStartTag();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "32": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseTextNode();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "33": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n.parseCdata();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "34": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= );i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "35": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;( <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "36": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(elToClose <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "37": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((elToClose != null)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "38": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 2;(i <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "39": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= );i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "40": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = (stack.size() - 1);(i > 0);i--) {            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "41": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(bodyTag <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "42": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelToClose = null;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "43": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= elToClose);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "44": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i != counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "45": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= bodyTag);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "46": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i | counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "47": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(htmlTag <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "48": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i & counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "49": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\ncontinue;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "50": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= htmlTag);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "51": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= counter);el) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "52": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;( <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "53": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\ni--;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "54": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((elTag != null)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "55": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelTag++;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "56": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(long i = 0;(i <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "57": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif(elTag.equals(tag)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "58": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= );i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "59": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelTag--;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "60": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((el != null)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "61": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif(( != null)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "62": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelToClose = 0;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "63": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((elTag.equals(bodyTag) || elTag.equals(htmlTag))){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "64": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nreturn;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "65": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n((i <= counter))                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "66": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((counter != null)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "67": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nif((elTag != 0)){\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n}\n        }\n        return elToClose;\n    }",
          "68": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i < (i <= counter));i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "69": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(final int i = 0;(i <= counter);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "70": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i <= counter);elToClose) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "71": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n((i <= counter))                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "72": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nTag elTag = el.tag();\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "73": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nelToClose = el;\nbreak;\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "74": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nElement el = stack.get(i);\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "75": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i < i);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "76": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n            for (int i = 0; i <= counter; i++) {if(0!=1)break;                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "77": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(i < elTag);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "78": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;(elTag < i);i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "79": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\n            for (int i = 0; i <= counter; i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }",
          "80": "    private Element popStackToClose(Tag tag) {\n        // first check to see if stack contains this tag; if so pop to there, otherwise ignore\n        int counter = 0;\n        Element elToClose = null;\n        for (int i = stack.size() -1; i > 0; i--) {\n            counter++;\n            Element el = stack.get(i);\n            Tag elTag = el.tag();\n            if (elTag.equals(bodyTag) || elTag.equals(htmlTag)) { // once in body, don't close past body\n                break;\n            } else if (elTag.equals(tag)) {\n                elToClose = el;\n                break;\n            }\n        }\n        if (elToClose != null) {\nfor(int i = 0;((i <= counter) && (elTag == bodyTag));i++) {                stack.removeLast();\n            }\n        }\n        return elToClose;\n    }"
}