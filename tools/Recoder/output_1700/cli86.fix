{
          "0": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(opt.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "1": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "2": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!iter.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "3": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!str.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "4": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\niter.previous();\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "5": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nbreak;\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "6": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "7": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nreturn;\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "8": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nopt.addValue(Util.stripLeadingAndTrailingQuotes(str));\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "9": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\ncheckRequiredOptions();\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "10": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "11": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((!opt.hasOptionalArg() && str.startsWith(\"null\"))){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "12": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(iter.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "13": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "14": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(str.startsWith(\"null\")){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "15": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((options.hasOption(str) && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "16": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(((opt != null) && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "17": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "18": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!iter.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "19": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((iter != null)){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "20": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((options.hasOption(str) && str.startsWith(\"null\"))){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "21": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(opt){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "22": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\n.checkRequiredOptions();\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "23": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "24": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "25": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.stripLeadingAndTrailingQuotes()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "26": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "27": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.startsWith()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "28": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "29": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\ncontinue;\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "30": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((!opt.hasOptionalArg() || str.startsWith(\"null\"))){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "31": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.getKey()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "32": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "33": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.hasNext()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "34": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((opt != null)){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "35": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.hasOption()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "36": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((options.hasOption(str) && str.startsWith(\"null\"))){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "37": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(Util.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "38": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((options.hasOption(str) || !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "39": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((str != null)){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "40": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.previous()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "41": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\n.checkRequiredOptions();\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "42": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((opt != null)){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "43": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!Util.hasOptionalArg()){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "44": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\niter.previous();\nbreak;\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "45": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((!opt.hasOptionalArg() && (iter != null))){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "46": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((!opt && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "47": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.hasOptionalArg(iter)){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "48": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(iter.hasNext()){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "49": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(((iter != null) && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "50": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(( != null)){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "51": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nopt.addValue(Util.stripLeadingAndTrailingQuotes(str));\nbreak;\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "52": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.processArgs()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "53": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(((opt != null) || !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "54": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!opt.getName()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "55": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(((opt == null) && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "56": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((iter == null)){\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n}\n    }",
          "57": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif((opt.hasOptionalArg() && !opt.hasOptionalArg())){\n        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "58": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "59": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\nif(!Util.hasOptionalArg()){        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }",
          "60": "    public void processArgs(Option opt, ListIterator iter)\n        throws ParseException\n    {\n        // loop until an option is found\n        while (iter.hasNext())\n        {\n            String str = (String) iter.next();\n\n            // found an Option, not an argument\n            if (options.hasOption(str) && str.startsWith(\"-\"))\n            {\n                iter.previous();\n                break;\n            }\n\n            // found a value\n            try\n            {\n                opt.addValue( Util.stripLeadingAndTrailingQuotes(str) );\n            }\n            catch (RuntimeException exp)\n            {\n                iter.previous();\n                break;\n            }\n        }\n\n        if (!opt.hasOptionalArg())        {\n            throw new MissingArgumentException(\"Missing argument for option:\"\n                                               + opt.getKey());\n        }\n    }"
}