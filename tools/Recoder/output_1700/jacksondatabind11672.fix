{
          "0": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) || (_value <= Integer.MAX_VALUE));    }",
          "1": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "2": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value > Integer.MAX_VALUE));    }",
          "3": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value >= Integer.MAX_VALUE));    }",
          "4": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value == Integer.MAX_VALUE));    }",
          "5": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value < Integer.MAX_VALUE));    }",
          "6": "    @Override public boolean canConvertToInt() {\nreturn ((_value > Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "7": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value != Integer.MAX_VALUE));    }",
          "8": "    @Override public boolean canConvertToInt() {\nreturn ((_value >= Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "9": "    @Override public boolean canConvertToInt() {\nreturn ((_value < Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "10": "    @Override public boolean canConvertToInt() {\nreturn ((_value != Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "11": "    @Override public boolean canConvertToInt() {\nreturn (_value == Integer.MIN_VALUE);    }",
          "12": "    @Override public boolean canConvertToInt() {\nreturn ((_value <= Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "13": "    @Override public boolean canConvertToInt() {\nreturn (_value <= Integer.MAX_VALUE);    }",
          "14": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value && Integer.MAX_VALUE));    }",
          "15": "    @Override public boolean canConvertToInt() {\nreturn ((_value == canConvertToInt) && (_value <= Integer.MAX_VALUE));    }",
          "16": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= canConvertToInt));    }",
          "17": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value || Integer.MAX_VALUE));    }",
          "18": "    @Override public boolean canConvertToInt() {\nreturn ((_value && Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "19": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value instanceof Integer.MAX_VALUE));    }",
          "20": "    @Override public boolean canConvertToInt() {\nreturn canConvertToInt();    }",
          "21": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= Integer.MIN_VALUE));    }",
          "22": "    @Override public boolean canConvertToInt() {\nreturn ((_value || Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "23": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MAX_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "24": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) != (_value <= Integer.MAX_VALUE));    }",
          "25": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (canConvertToInt <= Integer.MAX_VALUE));    }",
          "26": "    @Override public boolean canConvertToInt() {\nreturn ((_value instanceof Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "27": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value & Integer.MAX_VALUE));    }",
          "28": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) == (_value <= Integer.MAX_VALUE));    }",
          "29": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value.MIN_VALUE <= Integer.MAX_VALUE));    }",
          "30": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (floatValue().MIN_VALUE <= Integer.MAX_VALUE));    }",
          "31": "    @Override public boolean canConvertToInt() {\nreturn ((_value & Integer.MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "32": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value.MAX_VALUE <= Integer.MAX_VALUE));    }",
          "33": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (floatValue().MAX_VALUE <= Integer.MAX_VALUE));    }",
          "34": "    @Override public boolean canConvertToInt() {\nreturn Integer.canConvertToInt();    }",
          "35": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= -MIN_VALUE));    }",
          "36": "    @Override public boolean canConvertToInt() {\nreturn ((_value == -_value) && (_value <= Integer.MAX_VALUE));    }",
          "37": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= -MAX_VALUE));    }",
          "38": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= -_value));    }",
          "39": "    @Override public boolean canConvertToInt() {\nreturn ((_value == -MIN_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "40": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= _value));    }",
          "41": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (Integer._value <= Integer.MAX_VALUE));    }",
          "42": "    @Override public boolean canConvertToInt() {\nreturn ((_value == -MAX_VALUE) && (_value <= Integer.MAX_VALUE));    }",
          "43": "    @Override public boolean canConvertToInt() {\nreturn ((_value == _value) && (_value <= Integer.MAX_VALUE));    }",
          "44": "    @Override public boolean canConvertToInt() {\nreturn ((_value == ) && (_value <= Integer.MAX_VALUE));    }",
          "45": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) && (_value <= MAX_VALUE));    }",
          "46": "    @Override public boolean canConvertToInt() {\nreturn ((_value == e) && (_value <= Integer.MAX_VALUE));    }",
          "47": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) < (_value <= Integer.MAX_VALUE));    }",
          "48": "    @Override public boolean canConvertToInt() {\nreturn ((_value == Integer.MIN_VALUE) > (_value <= Integer.MAX_VALUE));    }",
          "49": "    @Override public boolean canConvertToInt() {\n    }",
          "50": "    @Override public boolean canConvertToInt() {\n        return (_value == Integer.MIN_VALUE && _value <= Integer.MAX_VALUE);    }",
          "51": "    @Override public boolean canConvertToInt() {\nreturn (((_value == Integer.MIN_VALUE) && (Integer.MAX_VALUE == Integer.MAX_VALUE)) && (_value <= Integer.MAX_VALUE));    }"
}