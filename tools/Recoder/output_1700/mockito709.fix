{
          "0": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length < 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "1": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length > 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "2": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "3": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length >= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "4": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length <= 1)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "5": "    public static String classNameForMock(Object mock) {\nif(mock.getClass().getInterfaces().length){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "6": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().mock <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "7": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length || 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "8": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length == 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "9": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length & 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "10": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length && 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "11": "    public static String classNameForMock(Object mock) {\nif((mock.getSimpleName().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "12": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getSimpleName().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "13": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length - 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "14": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getSuperclass().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "15": "    public static String classNameForMock(Object mock) {\nif((mock.getSuperclass().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "16": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length | 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "17": "    public static String classNameForMock(Object mock) {\nif((mock.getInterfaces().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "18": "    public static String classNameForMock(Object mock) {\nif(!mock.getClass().getInterfaces().length){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "19": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getClass().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "20": "    public static String classNameForMock(Object mock) {\nif(!mock.getInterfaces()){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "21": "    public static String classNameForMock(Object mock) {\nif((mock.getClass() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "22": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length <= 0)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "23": "    public static String classNameForMock(Object mock) {\nif((mock.getClass() > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "24": "    public static String classNameForMock(Object mock) {\nif(mock.getInterfaces()){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "25": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length <= -1)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "26": "    public static String classNameForMock(Object mock) {\nif(mock.getClass().getInterfaces()){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "27": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().mock.length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "28": "    public static String classNameForMock(Object mock) {\nif((mock.getName().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "29": "    public static String classNameForMock(Object mock) {\nif((mock.getClass() <= 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "30": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "31": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getName().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "32": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().classNameForMock().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "33": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces() > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "34": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "35": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces().length > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "36": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces() <= 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "37": "    public static String classNameForMock(Object mock) {\nreturn mock.getClass().getInterfaces().[0].getSimpleName();        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "38": "    public static String classNameForMock(Object mock) {\nreturn mock.getClass().getSuperclass().getSimpleName();        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "39": "    public static String classNameForMock(Object mock) {\nif((mock == null)){\nreturn mock.getClass().getInterfaces().[0].getSimpleName();}        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "40": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().length() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "41": "    public static String classNameForMock(Object mock) {\nif((mock.classNameForMock().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "42": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getSimpleName() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "43": "    public static String classNameForMock(Object mock) {\nif((mock == null)){\nreturn null;}        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "44": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().length < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "45": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().length() > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "46": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().size() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "47": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().length > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "48": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getSimpleName() > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "49": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getInterfaces(). <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "50": "    public static String classNameForMock(Object mock) {\nif((mock == null)){\nreturn mock.getClass().getSuperclass().getSimpleName();}        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "51": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getClass() > 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "52": "    public static String classNameForMock(Object mock) {\nif((mock.getClass().getClass() < 2)){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "53": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() == 2) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "54": "    public static String classNameForMock(Object mock) {\nif(((length == 2) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "55": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() != 2) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "56": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() > 2) || (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "57": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() == 2) || (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "58": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() != null) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "59": "    public static String classNameForMock(Object mock) {\nreturn;\n        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "60": "    public static String classNameForMock(Object mock) {\nif((.getClass().getInterfaces().length <= 2)){            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "61": "    public static String classNameForMock(Object mock) {\nif(((mock.getClass() == null) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "62": "    public static String classNameForMock(Object mock) {\nif((mock.getClass() == 0)){\nreturn null;}        if (mock.getClass().getInterfaces().length <= 2) {            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "63": "    public static String classNameForMock(Object mock) {\nif((((length != null) && (mock.getClass() == 2)) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "64": "    public static String classNameForMock(Object mock) {\nif((((length != null) && (length == length)) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "65": "    public static String classNameForMock(Object mock) {\nif((((mock.getClass() != null) && (mock.getClass() == 2)) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }",
          "66": "    public static String classNameForMock(Object mock) {\nif((((length != null) && (mock.getClass() == length)) && (mock.getClass().getInterfaces().length <= 2))){\n            return mock.getClass().getInterfaces()[0].getSimpleName();\n        } else {\n            return mock.getClass().getSuperclass().getSimpleName();\n        }\n    }"
}