{
          "0": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (1 + indexOfLastDot);    }",
          "1": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + indexOfLastDot);    }",
          "2": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (2 + indexOfLastDot);    }",
          "3": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-1 + indexOfLastDot);    }",
          "4": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 - indexOfLastDot);    }",
          "5": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn indexOfLastDot;    }",
          "6": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + provideStringNode);    }",
          "7": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) + null);    }",
          "8": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) + provideStringNode);    }",
          "9": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + null);    }",
          "10": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + );    }",
          "11": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (\"null\" + indexOfLastDot);    }",
          "12": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + provideStringNode);    }",
          "13": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (provideStringNode == null);    }",
          "14": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + (-2 + indexOfLastDot));    }",
          "15": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (null + indexOfLastDot);    }",
          "16": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + -indexOfLastDot);    }",
          "17": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + );    }",
          "18": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (false + indexOfLastDot);    }",
          "19": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot - null);    }",
          "20": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + indexOfLastDot);    }",
          "21": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) + 0);    }",
          "22": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + );    }",
          "23": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + );    }",
          "24": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) + 1);    }",
          "25": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + 0);    }",
          "26": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreplace();\n      return -2 + indexOfLastDot;    }",
          "27": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot - provideStringNode);    }",
          "28": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) - indexOfLastDot);    }",
          "29": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 / indexOfLastDot);    }",
          "30": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 <= indexOfLastDot);    }",
          "31": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + 1);    }",
          "32": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn 0;    }",
          "33": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nif((indexOfLastDot == null)){\nreturn 0;}      return -2 + indexOfLastDot;    }",
          "34": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (true + indexOfLastDot);    }",
          "35": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn 1;    }",
          "36": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot + -2);    }",
          "37": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn provideStringNode;    }",
          "38": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 == indexOfLastDot);    }",
          "39": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + (-2 + indexOfLastDot));    }",
          "40": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + null);    }",
          "41": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (0 + indexOfLastDot);    }",
          "42": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 * indexOfLastDot);    }",
          "43": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 - provideStringNode);    }",
          "44": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) + indexOfLastDot);    }",
          "45": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) - null);    }",
          "46": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot - );    }",
          "47": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((-2 + indexOfLastDot) - provideStringNode);    }",
          "48": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + indexOfLastDot++);    }",
          "49": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nindexOfLastDot++;\n      return -2 + indexOfLastDot;    }",
          "50": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot - indexOfLastDot);    }",
          "51": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (provideStringNode + indexOfLastDot);    }",
          "52": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 >= indexOfLastDot);    }",
          "53": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (indexOfLastDot - 0);    }",
          "54": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + null) + indexOfLastDot);    }",
          "55": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nindexOfLastDot = indexOfLastDot;\n      return -2 + indexOfLastDot;    }",
          "56": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn -2;    }",
          "57": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (((-2 + indexOfLastDot) + null) + indexOfLastDot);    }",
          "58": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + -provideStringNode);    }",
          "59": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + null) + (-2 + indexOfLastDot));    }",
          "60": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (((-2 + indexOfLastDot) + indexOfLastDot) + null);    }",
          "61": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nif((indexOfLastDot == 0)){\nreturn 0;}      return -2 + indexOfLastDot;    }",
          "62": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn namespace.lastIndexOf(\"null\");    }",
          "63": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 % indexOfLastDot);    }",
          "64": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-0 + indexOfLastDot);    }",
          "65": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + indexOfLastDot) + indexOfLastDot);    }",
          "66": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + indexOfLastDot) + null);    }",
          "67": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (((-2 + indexOfLastDot) + indexOfLastDot) + indexOfLastDot);    }",
          "68": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + (indexOfLastDot + indexOfLastDot));    }",
          "69": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot - null) + indexOfLastDot);    }",
          "70": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 != indexOfLastDot);    }",
          "71": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + null) + provideStringNode);    }",
          "72": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + provideStringNode) + indexOfLastDot);    }",
          "73": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + (indexOfLastDot + provideStringNode));    }",
          "74": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + );    }",
          "75": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 > indexOfLastDot);    }",
          "76": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + );    }",
          "77": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + 0) + indexOfLastDot);    }",
          "78": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn 0;      return -2 + indexOfLastDot;    }",
          "79": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn (-2 + );    }",
          "80": "    private int getSourceInfoOffset(Node provideStringNode) {\n      if (provideStringNode == null) {\n        return 0;\n      }\n\n      int indexOfLastDot = namespace.lastIndexOf('.');\n\n      // +1 for the opening quote\n      // +1 for the dot\n      // if there's no dot, then the -1 index cancels it out\n      // so elegant!\nreturn ((indexOfLastDot + ) + indexOfLastDot);    }"
}