{
          "0": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 2)) - 0x10000);    }",
          "1": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 1)) - 0x10000);    }",
          "2": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0)) - 0x10000);    }",
          "3": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0xFF)) - 0x10000);    }",
          "4": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 2) | (d & -63)) - 0x10000);    }",
          "5": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 1) | (d & -63)) - 0x10000);    }",
          "6": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0) | (d & -63)) - 0x10000);    }",
          "7": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((c << 6) | (d & -63));    }",
          "8": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (d & -63);    }",
          "9": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -1)) - 0x10000);    }",
          "10": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d <= -63)) - 0x10000);    }",
          "11": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0xFF) | (d & -63)) - 0x10000);    }",
          "12": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_closeInput();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "13": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_releaseBuffers();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "14": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nclose();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "15": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_isNextTokenNameYes();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "16": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_finishString();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "17": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipString();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "18": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipComment();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "19": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipCComment();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "20": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipCppComment();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "21": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipCR();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "22": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_skipLF();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "23": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d > -63)) - 0x10000);    }",
          "24": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 0x10000);    }",
          "25": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0x080)) - 0x10000);    }",
          "26": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d < -63)) - 0x10000);    }",
          "27": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d >= -63)) - 0x10000);    }",
          "28": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0xC0)) - 0x10000);    }",
          "29": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (c << 6);    }",
          "30": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn;\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "31": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 2);    }",
          "32": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 1);    }",
          "33": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 0);    }",
          "34": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther((d & 0xFF), _inputPtr);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "35": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nloadMoreGuaranteed();\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "36": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d - -63)) - 0x10000);    }",
          "37": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c >= 6) | (d & -63)) - 0x10000);    }",
          "38": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c <= 6) | (d & -63)) - 0x10000);    }",
          "39": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << -1) | (d & -63)) - 0x10000);    }",
          "40": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0x3F)) - 0x10000);    }",
          "41": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d + -63)) - 0x10000);    }",
          "42": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nd = (int)_inputBuffer[_inputPtr++];\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "43": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & 0x07)) - 0x10000);    }",
          "44": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 0xFF);    }",
          "45": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nc = ((c << 6) | (d & 0x3F));\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "46": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c > 6) | (d & -63)) - 0x10000);    }",
          "47": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -2)) - 0x10000);    }",
          "48": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & false)) - 0x10000);    }",
          "49": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d == -63)) - 0x10000);    }",
          "50": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0x080) | (d & -63)) - 0x10000);    }",
          "51": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << -63) | (d & -63)) - 0x10000);    }",
          "52": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0xC0) | (d & -63)) - 0x10000);    }",
          "53": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & \"null\")) - 0x10000);    }",
          "54": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & true)) - 0x10000);    }",
          "55": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (d & 0xFF);    }",
          "56": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d >> -63)) - 0x10000);    }",
          "57": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c < 6) | (d & -63)) - 0x10000);    }",
          "58": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d / -63)) - 0x10000);    }",
          "59": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((c << 6) | (d & 0x3F));    }",
          "60": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nbreak;\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "61": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - -1);    }",
          "62": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c - 6) | (d & -63)) - 0x10000);    }",
          "63": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c & 0x07) << 6) | (d & 0x3F));    }",
          "64": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) < (d & -63)) - 0x10000);    }",
          "65": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) + (d & -63)) - 0x10000);    }",
          "66": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(c);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "67": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c == 6) | (d & -63)) - 0x10000);    }",
          "68": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((d << 6) | (d & -63)) - 0x10000);    }",
          "69": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0x3F) | (d & -63)) - 0x10000);    }",
          "70": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 0x07) | (d & -63)) - 0x10000);    }",
          "71": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn _inputBuffer[_inputPtr++];    }",
          "72": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nif(((d & 0xC0) != 0x080)){\n}\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "73": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(_inputPtr);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "74": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 0x080);    }",
          "75": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - -63);    }",
          "76": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c + 6) | (d & -63)) - 0x10000);    }",
          "77": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) & (d & -63)) - 0x10000);    }",
          "78": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c >> 6) | (d & -63)) - 0x10000);    }",
          "79": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) - 0xC0);    }",
          "80": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c & 6) | (d & -63)) - 0x10000);    }",
          "81": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) <= (d & -63)) - 0x10000);    }",
          "82": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c != 6) | (d & -63)) - 0x10000);    }",
          "83": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) - (d & -63)) - 0x10000);    }",
          "84": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn (((c << 6) | (d & -63)) <= 0x10000);    }",
          "85": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\ncontinue;\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "86": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(_inputPtr, _inputPtr);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "87": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "88": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(sInputCodesUtf8, c);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "89": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(sInputCodesLatin1, c);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "90": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(_quadBuffer, c);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "91": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(_quad1, c);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "92": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(c, sInputCodesUtf8);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "93": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(c, sInputCodesLatin1);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "94": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(c, _quadBuffer);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "95": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\n_reportInvalidOther(c, _quad1);\n        return ((c << 6) | (d & -63)) - 0x10000;    }",
          "96": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | -63) | -63);    }",
          "97": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | (d & -63)) | (d & -63));    }",
          "98": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | 0x10000) | (d & -63));    }",
          "99": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | (d & -63)) | -63);    }",
          "100": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | 0x10000) | -63);    }",
          "101": "    private int _decodeUtf8_4(int c)\n        throws IOException, JsonParseException\n    {\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        int d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = ((c & 0x07) << 6) | (d & 0x3F);\n\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n        c = (c << 6) | (d & 0x3F);\n        if (_inputPtr >= _inputEnd) {\n            loadMoreGuaranteed();\n        }\n        d = (int) _inputBuffer[_inputPtr++];\n        if ((d & 0xC0) != 0x080) {\n            _reportInvalidOther(d & 0xFF, _inputPtr);\n        }\n\n        /* note: won't change it to negative here, since caller\n         * already knows it'll need a surrogate\n         */\nreturn ((((c & c) | c) | -63) | (d & -63));    }"
}