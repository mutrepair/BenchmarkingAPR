{
          "0": "  public JSType collapseUnion() {\nif(false){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "1": "  public JSType collapseUnion() {\nif(hasReferenceName()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "2": "  public JSType collapseUnion() {\nif(matchesNumberContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "3": "  public JSType collapseUnion() {\nif(matchesStringContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "4": "  public JSType collapseUnion() {\nif(matchesObjectContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "5": "  public JSType collapseUnion() {\nif(canBeCalled()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "6": "  public JSType collapseUnion() {\nif(isNoType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "7": "  public JSType collapseUnion() {\nif(isNoObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "8": "  public JSType collapseUnion() {\nif(isNoResolvedType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "9": "  public JSType collapseUnion() {\nif(isUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "10": "  public JSType collapseUnion() {\nif(isCheckedUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "11": "  public JSType collapseUnion() {\nif(isNullable()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "12": "  public JSType collapseUnion() {\nif(isConstructor()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "13": "  public JSType collapseUnion() {\nif(isNominalType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "14": "  public JSType collapseUnion() {\nif(isInstanceType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "15": "  public JSType collapseUnion() {\nif(isInterface()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "16": "  public JSType collapseUnion() {\nif(isOrdinaryFunction()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "17": "  public JSType collapseUnion() {\nif(isAllType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "18": "  public JSType collapseUnion() {\nif(isStruct()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "19": "  public JSType collapseUnion() {\nif(isDict()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "20": "  public JSType collapseUnion() {\nif(isNativeObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "21": "  public JSType collapseUnion() {\nif(hasAnyTemplateTypesInternal()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "22": "  public JSType collapseUnion() {\nif(!hasReferenceName()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "23": "  public JSType collapseUnion() {\nif(!matchesNumberContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "24": "  public JSType collapseUnion() {\nif(!matchesStringContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "25": "  public JSType collapseUnion() {\nif(!matchesObjectContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "26": "  public JSType collapseUnion() {\nif(!canBeCalled()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "27": "  public JSType collapseUnion() {\nif(!isNoType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "28": "  public JSType collapseUnion() {\nif(!isNoObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "29": "  public JSType collapseUnion() {\nif(!isNoResolvedType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "30": "  public JSType collapseUnion() {\nif(!isUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "31": "  public JSType collapseUnion() {\nif(!isCheckedUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "32": "  public JSType collapseUnion() {\nif(!isNullable()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "33": "  public JSType collapseUnion() {\nif(!isConstructor()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "34": "  public JSType collapseUnion() {\nif(!isNominalType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "35": "  public JSType collapseUnion() {\nif(!isInstanceType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "36": "  public JSType collapseUnion() {\nif(!isInterface()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "37": "  public JSType collapseUnion() {\nif(!isOrdinaryFunction()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "38": "  public JSType collapseUnion() {\nif(!isAllType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "39": "  public JSType collapseUnion() {\nif(!isStruct()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "40": "  public JSType collapseUnion() {\nif(!isDict()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "41": "  public JSType collapseUnion() {\nif(!isNativeObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "42": "  public JSType collapseUnion() {\nif(!hasAnyTemplateTypesInternal()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "43": "  public JSType collapseUnion() {\nif(referencedType.collapseUnion()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "44": "  public JSType collapseUnion() {\nif(collapseUnion){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "45": "  public JSType collapseUnion() {\nsuper.collapseUnion();\n    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "46": "  public JSType collapseUnion() {\nif(this.hasReferenceName()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "47": "  public JSType collapseUnion() {\nif(this.matchesNumberContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "48": "  public JSType collapseUnion() {\nif(this.matchesStringContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "49": "  public JSType collapseUnion() {\nif(this.matchesObjectContext()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "50": "  public JSType collapseUnion() {\nif(this.canBeCalled()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "51": "  public JSType collapseUnion() {\nif(this.isNoType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "52": "  public JSType collapseUnion() {\nif(this.isNoObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "53": "  public JSType collapseUnion() {\nif(this.isNoResolvedType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "54": "  public JSType collapseUnion() {\nif(this.isUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "55": "  public JSType collapseUnion() {\nif(this.isCheckedUnknownType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "56": "  public JSType collapseUnion() {\nif(this.isNullable()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "57": "  public JSType collapseUnion() {\nif(this.isConstructor()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "58": "  public JSType collapseUnion() {\nif(this.isNominalType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "59": "  public JSType collapseUnion() {\nif(this.isInstanceType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "60": "  public JSType collapseUnion() {\nif(this.isInterface()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "61": "  public JSType collapseUnion() {\nif(this.isOrdinaryFunction()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "62": "  public JSType collapseUnion() {\nif(this.isAllType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "63": "  public JSType collapseUnion() {\nif(this.isStruct()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "64": "  public JSType collapseUnion() {\nif(this.isDict()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "65": "  public JSType collapseUnion() {\nif(this.isNativeObjectType()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "66": "  public JSType collapseUnion() {\nif(this.hasAnyTemplateTypesInternal()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "67": "  public JSType collapseUnion() {\nif(collapseUnion()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "68": "  public JSType collapseUnion() {\nif(){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "69": "  public JSType collapseUnion() {\nif(referencedType.isEmpty()){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "70": "  public JSType collapseUnion() {\nif(hasReferenceName()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "71": "  public JSType collapseUnion() {\nif(matchesNumberContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "72": "  public JSType collapseUnion() {\nif(matchesStringContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "73": "  public JSType collapseUnion() {\nif(matchesObjectContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "74": "  public JSType collapseUnion() {\nif(canBeCalled()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "75": "  public JSType collapseUnion() {\nif(isNoType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "76": "  public JSType collapseUnion() {\nif(isNoObjectType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "77": "  public JSType collapseUnion() {\nif(isNoResolvedType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "78": "  public JSType collapseUnion() {\nif(isUnknownType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "79": "  public JSType collapseUnion() {\nif(isCheckedUnknownType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "80": "  public JSType collapseUnion() {\nif(isNullable()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "81": "  public JSType collapseUnion() {\nif(isConstructor()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "82": "  public JSType collapseUnion() {\nif(isNominalType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "83": "  public JSType collapseUnion() {\nif(isInstanceType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "84": "  public JSType collapseUnion() {\nif(isInterface()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "85": "  public JSType collapseUnion() {\nif(isOrdinaryFunction()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "86": "  public JSType collapseUnion() {\nif(isAllType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "87": "  public JSType collapseUnion() {\nif(isStruct()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "88": "  public JSType collapseUnion() {\nif(isDict()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "89": "  public JSType collapseUnion() {\nif(isNativeObjectType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "90": "  public JSType collapseUnion() {\nif(hasAnyTemplateTypesInternal()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "91": "  public JSType collapseUnion() {\nif((false || referencedType.collapseUnion())){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "92": "  public JSType collapseUnion() {\nif(-false){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "93": "  public JSType collapseUnion() {\nreturn null;    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "94": "  public JSType collapseUnion() {\nif(!hasReferenceName()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "95": "  public JSType collapseUnion() {\nif(!matchesNumberContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "96": "  public JSType collapseUnion() {\nif(!matchesStringContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "97": "  public JSType collapseUnion() {\nif(!matchesObjectContext()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "98": "  public JSType collapseUnion() {\nif(!canBeCalled()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "99": "  public JSType collapseUnion() {\nif(!isNoType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "100": "  public JSType collapseUnion() {\nif(!isNoObjectType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "101": "  public JSType collapseUnion() {\nif(!isNoResolvedType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "102": "  public JSType collapseUnion() {\nif(!isUnknownType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "103": "  public JSType collapseUnion() {\nif(!isCheckedUnknownType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "104": "  public JSType collapseUnion() {\nif(!isNullable()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "105": "  public JSType collapseUnion() {\nif(!isConstructor()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "106": "  public JSType collapseUnion() {\nif(!isNominalType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "107": "  public JSType collapseUnion() {\nif(!isInstanceType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "108": "  public JSType collapseUnion() {\nif(!isInterface()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "109": "  public JSType collapseUnion() {\nif(!isOrdinaryFunction()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "110": "  public JSType collapseUnion() {\nif(!isAllType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "111": "  public JSType collapseUnion() {\nif(!isStruct()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "112": "  public JSType collapseUnion() {\nif(!isDict()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "113": "  public JSType collapseUnion() {\nif(!isNativeObjectType()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "114": "  public JSType collapseUnion() {\nif(!hasAnyTemplateTypesInternal()){\nreturn null;}    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "115": "  public JSType collapseUnion() {\nreturn;\n    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "116": "  public JSType collapseUnion() {\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "117": "  public JSType collapseUnion() {\nif(\"null\"){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "118": "  public JSType collapseUnion() {\nif(null){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "119": "  public JSType collapseUnion() {\nif(1){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "120": "  public JSType collapseUnion() {\nthis;\n    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "121": "  public JSType collapseUnion() {\nif(true){\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "122": "  public JSType collapseUnion() {\nbreak;\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "123": "  public JSType collapseUnion() {\nif(0){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "124": "  public JSType collapseUnion() {\nreturn;\n      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "125": "  public JSType collapseUnion() {\nif(true){      return referencedType.collapseUnion();\n    }\n    return this;\n  }",
          "126": "  public JSType collapseUnion() {\nreturn this;    if (true) {      return referencedType.collapseUnion();\n    }\n    return this;\n  }"
}