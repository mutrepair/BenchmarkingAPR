{
          "0": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(false){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "1": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn new QName(\"null\", localName);        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "2": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(true){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "3": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "4": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = findNamespace(intr, ac);\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "5": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = root.getSimpleName();\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "6": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = root.getNamespace();\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "7": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(intr){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "8": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(ac){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "9": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = \"null\";\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "10": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn null;        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "11": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(localName){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "12": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(localName.length()){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "13": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "14": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(beanDesc){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "15": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nbreak;\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "16": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn;\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "17": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(!ac){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "18": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(localName.isEmpty()){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "19": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(!localName){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "20": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(!intr){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "21": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn localName;        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "22": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(rootType){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "23": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName == null)){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "24": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nbreak;\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "25": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn new QName(ns, localName);        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "26": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\nreturn new QName(\"null\", localName);        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "27": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName != null)){\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "28": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(intr.isEmpty()){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "29": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = root.getNamespace();\nreturn new QName(\"null\", localName);        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "30": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = root.getSimpleName();\nreturn new QName(\"null\", localName);        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "31": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName.length() == 0)){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "32": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName == null)){\nreturn new QName(\"null\", localName);}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "33": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName != null)){\nreturn null;}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "34": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName != null)){\nreturn new QName(\"null\", localName);}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "35": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName == null)){\nreturn null;}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "36": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\ncontinue;\n        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "37": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((ac != null)){\nreturn null;}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "38": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\ncontinue;\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "39": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(\"null\"){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "40": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName && (ac != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "41": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName && (localName != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "42": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName || (ac != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "43": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName || (localName != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "44": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName && (intr != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "45": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName || (ac == null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "46": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName || (intr != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "47": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName || (localName == null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "48": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName != null)){\nns = StaxUtil.sanitizeXmlTypeName(ac);\n}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "49": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((localName != null)){\nns = StaxUtil.sanitizeXmlTypeName(localName);\n}        if (true) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }"
}