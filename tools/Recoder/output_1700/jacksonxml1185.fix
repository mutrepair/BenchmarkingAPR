{
          "0": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(false){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "1": "    protected String convertToString() throws IOException\nskipEndElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "2": "    protected String convertToString() throws IOException\ncloseCompletely();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "3": "    protected String convertToString() throws IOException\nclose();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "4": "    protected String convertToString() throws IOException\nrepeatStartElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "5": "    protected String convertToString() throws IOException\nskipAttributes();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "6": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(hasAttributes()){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "7": "    protected String convertToString() throws IOException\nsuper.convertToString();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "8": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(XML_TEXT){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "9": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(!hasAttributes()){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "10": "    protected String convertToString() throws IOException\nthis.skipEndElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "11": "    protected String convertToString() throws IOException\nthis.closeCompletely();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "12": "    protected String convertToString() throws IOException\nthis.close();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "13": "    protected String convertToString() throws IOException\nthis.repeatStartElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "14": "    protected String convertToString() throws IOException\nthis.skipAttributes();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "15": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_currentWrapper){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "16": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_currentState){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "17": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_textValue){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "18": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_namespaceURI){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "19": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_localName){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "20": "    protected String convertToString() throws IOException\nif(!hasAttributes()){\nreturn null;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "21": "    protected String convertToString() throws IOException\nreturn false;    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "22": "    protected String convertToString() throws IOException\nreturn null;    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "23": "    protected String convertToString() throws IOException\nif(hasAttributes()){\nreturn null;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "24": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_attributeCount){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "25": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_collectUntilTag){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "26": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(-false){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "27": "    protected String convertToString() throws IOException\nreturn;\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "28": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(!XML_TEXT){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "29": "    protected String convertToString() throws IOException\nreturn true;    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "30": "    protected String convertToString() throws IOException\nXMLStreamReader.skipEndElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "31": "    protected String convertToString() throws IOException\nXMLStreamReader.closeCompletely();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "32": "    protected String convertToString() throws IOException\nXMLStreamReader.close();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "33": "    protected String convertToString() throws IOException\nXMLStreamReader.repeatStartElement();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "34": "    protected String convertToString() throws IOException\nXMLStreamReader.skipAttributes();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "35": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_xmlReader.getEventType()){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "36": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(!_currentWrapper){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "37": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(_collectUntilTag()){\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "38": "    protected String convertToString() throws IOException\nif(hasAttributes()){\nreturn false;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "39": "    protected String convertToString() throws IOException\nif(!hasAttributes()){\nreturn false;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "40": "    protected String convertToString() throws IOException\nreturn text;    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "41": "    protected String convertToString() throws IOException\nreturn this;    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "42": "    protected String convertToString() throws IOException\nif(hasAttributes()){\nreturn true;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "43": "    protected String convertToString() throws IOException\nStaxUtil.throwXmlAsIOException(e);\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "44": "    protected String convertToString() throws IOException\ntext = \"null\";\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "45": "    protected String convertToString() throws IOException\nif(!hasAttributes()){\nreturn true;}    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "46": "    protected String convertToString() throws IOException\nbreak;\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "47": "    protected String convertToString() throws IOException\n_namespaceURI = _xmlReader.getNamespaceURI();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "48": "    protected String convertToString() throws IOException\n_currentWrapper = _currentWrapper.getParent();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "49": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(\"null\"){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "50": "    protected String convertToString() throws IOException\n_localName = _xmlReader.getLocalName();\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "51": "    protected String convertToString() throws IOException\n_textValue = text;\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "52": "    protected String convertToString() throws IOException\n_attributeCount = 0;\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "53": "    protected String convertToString() throws IOException\n_currentState = XML_TEXT;\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n        if (true) {            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "54": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(1){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "55": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(0){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "56": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(true){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "57": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nif(null){            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "58": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nbreak;\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "59": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }",
          "60": "    protected String convertToString() throws IOException\n    {\n        // only applicable to cases where START_OBJECT was induced by attributes\nreturn;\n            return null;\n        }\n        try {\n            String text = _collectUntilTag();\n            // 23-Dec-2015, tatu: Used to require text not to be null, but as per\n            //   [dataformat-xml#167], empty tag does count\n            if (_xmlReader.getEventType() == XMLStreamReader.END_ELEMENT) {\n                if (text == null) {\n                    text = \"\";\n                }\n                if (_currentWrapper != null) {\n                    _currentWrapper = _currentWrapper.getParent();\n                }\n                // just for diagnostics, reset to element name (from first attribute name)\n                _localName = _xmlReader.getLocalName();\n                _namespaceURI = _xmlReader.getNamespaceURI();\n                _attributeCount = 0;\n                _currentState = XML_TEXT;\n                _textValue = text;\n                return text;\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwXmlAsIOException(e);\n        }\n        // Anything to do in failed case? Roll back whatever we found or.. ?\n        return null;\n    }"
}