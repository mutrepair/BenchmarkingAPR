{
          "0": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - v0) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "1": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(v0) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "2": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - DEFAULT_INVERSE_ABSOLUTE_ACCURACY) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "3": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - SQRT2PI) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "4": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - SQRT2) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "5": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "6": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - shape) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "7": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - solverAbsoluteAccuracy) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "8": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - denom) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "9": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % v0);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "10": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) - denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "11": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - x0) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "12": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(x1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "13": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(denom) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "14": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - x1) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "15": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - v1) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "16": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal long v1 = ((FastMath.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "17": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.probability(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "18": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) / denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "19": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) * denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "20": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x0) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "21": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) >> denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "22": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(v1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "23": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(scale) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "24": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) + denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "25": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.erf(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "26": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(shape) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "27": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(((FastMath.log(x1) - scale) % denom));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "28": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % x0);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "29": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = scale;\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "30": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = x0;\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "31": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(SQRT2) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "32": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - DEFAULT_INVERSE_ABSOLUTE_ACCURACY.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "33": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - SQRT2PI.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "34": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - SQRT2.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "35": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "36": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - shape.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "37": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - solverAbsoluteAccuracy.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "38": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getScale().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "39": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getShape().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "40": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getSolverAbsoluteAccuracy().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "41": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getNumericalMean().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "42": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getNumericalVariance().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "43": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getSupportLowerBound().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "44": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - getSupportUpperBound().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "45": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - sample().scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "46": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) <= denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "47": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.debug(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "48": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) >>> denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "49": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % scale);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "50": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.e(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "51": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) + scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "52": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(scale, ((FastMath.log(x1) - scale) % denom));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "53": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) & denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "54": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) << denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "55": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.add(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "56": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(denom, ((FastMath.log(x1) - scale) % denom));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "57": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) <= scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "58": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % SQRT2);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "59": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nif((v0 != null)){\n        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n}\n    }",
          "60": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = log(x1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "61": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(denom, scale);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "62": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % v1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "63": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nFastMath.log(x1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "64": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) / scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "65": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = denom;\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "66": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = (FastMath.log(x1) - scale);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "67": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((x0.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "68": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) >> scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "69": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % shape);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "70": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(scale, denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "71": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.max(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "72": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal int v1 = ((FastMath.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "73": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) % scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "74": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) >= scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "75": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) * scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "76": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(scale, x0);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "77": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(x0, ((FastMath.log(x1) - scale) % denom));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "78": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(scale, x1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "79": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - scale) % x1);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "80": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nreturn 0;        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n    }",
          "81": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\ndouble v1 = ((FastMath.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "82": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) - LocalizedFormats.scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "83": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) == scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "84": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(x0, scale);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "85": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.log(x1) >>> scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "86": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((FastMath.put(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "87": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = ((Erf.log(x1) - scale) % denom);\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "88": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nif(!v0){\n        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n}\n    }",
          "89": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nreturn super.probability(x0, x1);        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n    }",
          "90": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nreturn;\n        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n    }",
          "91": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nbreak;\n        final double v1 = (FastMath.log(x1) - scale) % denom;        return 0.5 * Erf.erf(v0, v1);\n    }",
          "92": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(denom, (scale - x1));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "93": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(scale, (denom - x1));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "94": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(denom, (scale / denom));\n        return 0.5 * Erf.erf(v0, v1);\n    }",
          "95": "    public double probability(double x0,\n                              double x1)\n        throws NumberIsTooLargeException {\n        if (x0 > x1) {\n            throw new NumberIsTooLargeException(LocalizedFormats.LOWER_ENDPOINT_ABOVE_UPPER_ENDPOINT,\n                                                x0, x1, true);\n        }\n        if (x0 <= 0 || x1 <= 0) {\n            return super.probability(x0, x1);\n        }\n        final double denom = shape * SQRT2;\n        final double v0 = (FastMath.log(x0) - scale) / denom;\nfinal double v1 = FastMath.log(denom, (scale * x1));\n        return 0.5 * Erf.erf(v0, v1);\n    }"
}