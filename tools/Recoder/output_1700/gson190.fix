{
          "0": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(true){          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "1": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "2": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child != null)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "3": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nchildGenericType = new TypeInfoCollection(typeOfSrc);\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "4": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(child){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "5": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(childGenericType){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "6": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child != null)){\ncontinue;\n}        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "7": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\narray.add(JsonNull.createJsonNull());\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "8": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType == null)){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "9": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nreturn array;        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "10": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\narray.add(element);\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "11": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(array){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "12": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(!child){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "13": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType == Object)){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "14": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(src){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "15": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nbreak;\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "16": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType == null)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "17": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(child.getClass()){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "18": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child == null)){\ncontinue;\n}        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "19": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(childType){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "20": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nreturn null;        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "21": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(!childType){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "22": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nbreak;\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "23": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType == Object)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "24": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\n(Object child = ;\n:src)        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "25": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(!childGenericType){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "26": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(typeOfSrc){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "27": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(\"null\"){          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "28": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(child.isEmpty()){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "29": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType != null)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "30": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nreturn JsonNull.createJsonNull();        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "31": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nreturn;\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "32": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child != null)){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "33": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(JsonNull.createJsonNull()){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "34": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(-true){          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "35": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child == null)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "36": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nchildGenericType = null;\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "37": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((childGenericType != null)){\ncontinue;\n}        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "38": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((src == null)){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "39": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((typeOfSrc instanceof ParameterizedType)){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "40": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\ncontinue;\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "41": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nchildGenericType = new TypeInfoCollection(typeOfSrc);\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "42": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(((childGenericType == null) || (childGenericType == Object))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "43": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\ncontinue;\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "44": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(false){          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "45": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((src == null)){\ncontinue;\n}\n        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "46": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nreturn;\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "47": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\narray.add(JsonNull.createJsonNull());\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "48": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (typeOfSrc != null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "49": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (child != null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "50": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\narray.add(element);\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "51": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (child == null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "52": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (typeOfSrc == null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "53": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (childGenericType != null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "54": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child && (context != null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "55": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif(null){          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "56": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((typeOfSrc && (child != null))){\n          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }",
          "57": "    public JsonElement serialize(Collection src, Type typeOfSrc, JsonSerializationContext context) {\n      if (src == null) {\n        return JsonNull.createJsonNull();\n      }\n      JsonArray array = new JsonArray();\n      Type childGenericType = null;\n      if (typeOfSrc instanceof ParameterizedType) {\n        childGenericType = new TypeInfoCollection(typeOfSrc).getElementType();        \n      }\n      for (Object child : src) {\nif((child != null)){\nchildGenericType = child;\n}        if (false) {          array.add(JsonNull.createJsonNull());\n        } else {\n          Type childType = (childGenericType == null || childGenericType == Object.class)\n              ? child.getClass() : childGenericType;\n          JsonElement element = context.serialize(child, childType);\n          array.add(element);\n        }\n      }\n      return array;\n    }"
}