{
          "0": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) < 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "1": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) || 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "2": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "3": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) > 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "4": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) && 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "5": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 0)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "6": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif((src.length - srcPos)){\n            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "7": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) >= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "8": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nreturn \"null\";                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "9": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 1)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "10": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) == 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "11": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length >= srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "12": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length <= srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "13": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nbreak;\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "14": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length > srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "15": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - ) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "16": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= -1)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "17": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) != 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "18": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[srcPos]){\nreturn \"null\";}                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "19": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nreturn null;                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "20": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length < srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "21": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[srcPos]){\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n}\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "22": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) | 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "23": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) & 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "24": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[(srcPos + 1)]){\nreturn \"null\";}                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "25": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif((( - srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "26": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((srcPos - srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "27": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 4)){\n            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "28": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - src) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "29": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[(srcPos + 1)]){\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n}\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "30": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[(srcPos + 2)]){\nreturn \"null\";}                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "31": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nreturn;\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "32": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src - srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "33": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\nif(src[(srcPos + 2)]){\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n}\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "34": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\ncontinue;\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "35": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length == srcPos) <= 4)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "36": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= \"null\")){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "37": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 8)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "38": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 3)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "39": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\nif(((src.length - srcPos) <= 2)){            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "40": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }        if (src.length - srcPos <= 4) {            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }",
          "41": "    public static char binaryToHexDigitMsb0_4bits(final boolean[] src, final int srcPos) {\n        if (src.length > 8) {\n            throw new IllegalArgumentException(\"src.length>8: src.length=\" + src.length);\n        }\n            throw new IllegalArgumentException(\"src.length-srcPos<4: src.length=\"\n                + src.length\n                + \", srcPos=\"\n                + srcPos);\n        }\n        if (src[srcPos + 3]) {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'f';\n                    } else {\n                        return '7';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'b';\n                    } else {\n                        return '3';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'd';\n                    } else {\n                        return '5';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '9';\n                    } else {\n                        return '1';\n                    }\n                }\n            }\n        } else {\n            if (src[srcPos + 2]) {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'e';\n                    } else {\n                        return '6';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return 'a';\n                    } else {\n                        return '2';\n                    }\n                }\n            } else {\n                if (src[srcPos + 1]) {\n                    if (src[srcPos]) {\n                        return 'c';\n                    } else {\n                        return '4';\n                    }\n                } else {\n                    if (src[srcPos]) {\n                        return '8';\n                    } else {\n                        return '0';\n                    }\n                }\n            }\n        }\n    }"
}