{
          "0": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE_SHIFT);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "1": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "2": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "3": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_CONTINUATION_BIT);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "4": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value - VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "5": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value >= VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "6": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value <= VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "7": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "8": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nreturn;\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "9": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nfinal int digit = (value ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "10": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value >> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "11": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> out);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "12": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value >>> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "13": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> );\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "14": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = VLQ_BASE_MASK;\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "15": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE_SHIFT.VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "16": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE.VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "17": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_BASE_MASK.VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "18": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> VLQ_CONTINUATION_BIT.VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "19": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = value;\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "20": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value % VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "21": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_SHIFT ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "22": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nlong digit = (value ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "23": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((value > 0)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "24": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\ndigit |= VLQ_CONTINUATION_BIT;\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "25": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((value != null)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "26": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_CONTINUATION_BIT ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "27": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nout.append(Base64.toBase64(digit));\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "28": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value > VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "29": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nvalue = toVLQSigned(value);\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "30": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nvalue >>>= VLQ_BASE_SHIFT;\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "31": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value == VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "32": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value < VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "33": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value / VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "34": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "35": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value * VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "36": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (out ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "37": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = ( ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "38": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value > 0);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "39": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> digit);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "40": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = ;\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "41": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = 0;\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "42": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((VLQ_BASE_MASK != null)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "43": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((VLQ_BASE_SHIFT != null)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "44": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (digit ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "45": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((value == null)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "46": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK * value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "47": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> );\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "48": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK * VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "49": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif(value){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "50": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((out != null)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "51": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK / value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "52": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif((value == 0)){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "53": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif(hasNext()){\nreturn;\n}      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "54": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK / VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "55": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nif(VLQ_BASE_SHIFT){\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n}\n    } while (value > 0);\n  }",
          "56": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value * value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "57": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = ( ^<> VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "58": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nbreak;\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "59": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK % value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "60": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (value ^<> );\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "61": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = ((value ^<> VLQ_BASE_MASK) * value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "62": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = ((value ^<> VLQ_BASE_MASK) * VLQ_BASE_MASK);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "63": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "64": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\nint digit = (VLQ_BASE_MASK - value);\n      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }",
          "65": "  public static void encode(Appendable out, int value)\n      throws IOException {\n    value = toVLQSigned(value);\n    do {\n      int digit = value ^ VLQ_BASE_MASK;      value >>>= VLQ_BASE_SHIFT;\n      if (value > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n      out.append(Base64.toBase64(digit));\n    } while (value > 0);\n  }"
}