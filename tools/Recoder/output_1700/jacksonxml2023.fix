{
          "0": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(false){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "1": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nreturn;\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "2": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(rootName){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "3": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(xgen){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "4": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(!rootName){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "5": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((ns.length() > 0)){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "6": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName != null)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "7": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName == null)){\nreturn;\n}            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "8": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((ns != null)){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "9": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nsuper._initWithRootName();\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "10": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(-false){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "11": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(!xgen){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "12": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName != null)){\nreturn;\n}            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "13": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(-true){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "14": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(ns){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "15": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(e){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "16": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(xgen.isEmpty()){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "17": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(ns.length()){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "18": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((xgen != null)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "19": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((xgen == null)){\nreturn;\n}            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "20": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "21": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName == 0)){\nreturn;\n}            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "22": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName != 0)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "23": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((xgen != null)){\nreturn;\n}            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "24": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nStaxUtil.throwXmlAsIOException(e);\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "25": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(-1){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "26": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nxgen.getStaxWriter().setDefaultNamespace(ns);\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "27": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName == null)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "28": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName && (ns.length() > 0))){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "29": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nxgen.setNextName(rootName);\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "30": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((ns.length() > 0)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "31": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((ns != null)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "32": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(rootName.getNamespaceURI()){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "33": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName || rootName)){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "34": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nxgen.initGenerator();\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "35": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName && rootName)){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "36": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(\"null\"){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "37": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nreturn;\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "38": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName && (rootName != null))){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "39": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName && (rootName == null))){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "40": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(!xgen.setNextNameIfMissing(rootName)){\n            if (true) {                xgen.setNextName(rootName);\n            }\n}\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "41": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName || (rootName != null))){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "42": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "43": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif((rootName || (rootName == null))){\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "44": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nif(1){                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "45": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nbreak;\n                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }",
          "46": "    protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException\n    {\n        /* 28-Nov-2012, tatu: We should only initialize the root\n         *  name if no name has been set, as per [Issue#42],\n         *  to allow for custom serializers to work.\n         */\n        if (!xgen.setNextNameIfMissing(rootName)) {\n            // however, if we are root, we... insist\nbreak;\n            if (true) {                xgen.setNextName(rootName);\n            }\n        }\n        xgen.initGenerator();\n        String ns = rootName.getNamespaceURI();\n        /* [Issue#26] If we just try writing root element with namespace,\n         * we will get an explicit prefix. But we'd rather use the default\n         * namespace, so let's try to force that.\n         */\n        if (ns != null && ns.length() > 0) {\n            try {\n                xgen.getStaxWriter().setDefaultNamespace(ns);\n            } catch (XMLStreamException e) {\n                StaxUtil.throwXmlAsIOException(e);\n            }\n        }\n    }"
}