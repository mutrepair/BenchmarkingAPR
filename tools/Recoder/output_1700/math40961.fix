{
          "0": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn ((cos * p2.getX()) + (sin / p2.getY()));    }",
          "1": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), 0);    }",
          "2": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), ((cos * p2.getX()) + (sin / p2.getY())));    }",
          "3": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (angle / p2.getY())));    }",
          "4": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cos / p2.getY())));    }",
          "5": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())));    }",
          "6": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (originOffset / p2.getY())));    }",
          "7": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cXX / p2.getY())));    }",
          "8": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cXY / p2.getY())));    }",
          "9": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cX1 / p2.getY())));    }",
          "10": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cYX / p2.getY())));    }",
          "11": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cYY / p2.getY())));    }",
          "12": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (cY1 / p2.getY())));    }",
          "13": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (c1Y / p2.getY())));    }",
          "14": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (c1X / p2.getY())));    }",
          "15": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (c11 / p2.getY())));    }",
          "16": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), sin);    }",
          "17": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), cos);    }",
          "18": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D();    }",
          "19": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), (sin / p2.getY()));    }",
          "20": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.toSubSpace())));    }",
          "21": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn p2;    }",
          "22": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), 1);    }",
          "23": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), p2.getY());    }",
          "24": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nif((p2 == null)){\nreturn null;}        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "25": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((angle * p2.getX()) + (sin / p2.getY())));    }",
          "26": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((sin * p2.getX()) + (sin / p2.getY())));    }",
          "27": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((originOffset * p2.getX()) + (sin / p2.getY())));    }",
          "28": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cXX * p2.getX()) + (sin / p2.getY())));    }",
          "29": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cXY * p2.getX()) + (sin / p2.getY())));    }",
          "30": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cX1 * p2.getX()) + (sin / p2.getY())));    }",
          "31": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cYX * p2.getX()) + (sin / p2.getY())));    }",
          "32": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cYY * p2.getX()) + (sin / p2.getY())));    }",
          "33": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cY1 * p2.getX()) + (sin / p2.getY())));    }",
          "34": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((c1Y * p2.getX()) + (sin / p2.getY())));    }",
          "35": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((c1X * p2.getX()) + (sin / p2.getY())));    }",
          "36": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((c11 * p2.getX()) + (sin / p2.getY())));    }",
          "37": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin - p2.getY())));    }",
          "38": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn (cos * p2.getX());    }",
          "39": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), false);    }",
          "40": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn (sin / p2.getY());    }",
          "41": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), (cos * p2.getX()));    }",
          "42": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (p2 / p2.getY())));    }",
          "43": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (point / p2.getY())));    }",
          "44": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + p2));    }",
          "45": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((p2 * p2.getX()) + (sin / p2.getY())));    }",
          "46": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), null);    }",
          "47": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nif((p2 != null)){\n}\n        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "48": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((((cos * p2.getX()) + (sin / p2.getY())) + p2));    }",
          "49": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), true);    }",
          "50": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), p2.getX());    }",
          "51": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((sin / p2.getY()));    }",
          "52": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) - (sin / p2.getY())));    }",
          "53": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.toSubSpace()) + (sin / p2.getY())));    }",
          "54": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin + p2.getY())));    }",
          "55": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + sin));    }",
          "56": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + cos));    }",
          "57": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getY())), p2);    }",
          "58": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nrevertSelf();\n        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "59": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / point.getY())));    }",
          "60": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((cos * p2.getX()));    }",
          "61": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos - p2.getX()) + (sin / p2.getY())));    }",
          "62": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((point * p2.getX()) + (sin / p2.getY())));    }",
          "63": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((((cos * p2.getX()) + (sin / p2.getY())) + sin));    }",
          "64": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((((cos * p2.getX()) + (sin / p2.getY())) + cos));    }",
          "65": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn ((cos * p2.getX()) + ((cos * p2.getX()) + (sin / p2.getY())));    }",
          "66": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.getName())));    }",
          "67": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos + p2.getX()) + (sin / p2.getY())));    }",
          "68": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\np2++;\n        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "69": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector<Euclidean2D>(((cos * p2.getX()) + (sin / p2.getY())));    }",
          "70": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn null;    }",
          "71": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getName()) + (sin / p2.getY())));    }",
          "72": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin * p2.getY())));    }",
          "73": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nif(p2){\n}\n        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "74": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn sin;    }",
          "75": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.get())));    }",
          "76": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) * (sin / p2.getY())));    }",
          "77": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn null;        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "78": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) / (sin / p2.getY())));    }",
          "79": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos / p2.getX()) + (sin / p2.getY())));    }",
          "80": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn;\n        return new Vector1D(cos * p2.getX() + sin / p2.getY());    }",
          "81": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.toString())));    }",
          "82": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2) + (sin / p2.getY())));    }",
          "83": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + ( / p2.getY())));    }",
          "84": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + ( / p2.getY())));    }",
          "85": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn p2.getX();    }",
          "86": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * cos) + (sin / p2.getY())));    }",
          "87": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((( * p2.getX()) + (sin / p2.getY())));    }",
          "88": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((sin * p2) + (sin / p2.getY())));    }",
          "89": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin % p2.getY())));    }",
          "90": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((sin * cos) + (sin / p2.getY())));    }",
          "91": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.get()) + (sin / p2.getY())));    }",
          "92": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / .getY())));    }",
          "93": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.toString()) + (sin / p2.getY())));    }",
          "94": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D((( * p2.getX()) + (sin / p2.getY())));    }",
          "95": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.debug())));    }",
          "96": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getX()) + (sin / p2.add())));    }",
          "97": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos % p2.getX()) + (sin / p2.getY())));    }",
          "98": "    public Vector1D toSubSpace(final Vector<Euclidean2D> point) {\n        Vector2D p2 = (Vector2D) point;\nreturn new Vector1D(((cos * p2.getY()) + (sin / p2.getY())));    }"
}