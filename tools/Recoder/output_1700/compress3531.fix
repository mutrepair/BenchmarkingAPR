{
          "0": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) >= data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "1": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) <= data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "2": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "3": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) < data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "4": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + length) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "5": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((start + WORD) / length)){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "6": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + headerId) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "7": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) == data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "8": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + start) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "9": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start >= WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "10": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((start + WORD)){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "11": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + v) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "12": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((length + WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "13": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + local) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "14": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start <= WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "15": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) >= length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "16": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "17": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) != data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "18": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) <= length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "19": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + data) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "20": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > headerId)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "21": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD.WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "22": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif((length != null)){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "23": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start > WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "24": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / headerId) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "25": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > start)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "26": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((headerId + WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "27": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif((length == null)){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "28": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nze.parseFromLocalFileData(data, (start + WORD), length);\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "29": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) > length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "30": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / v) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "31": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nze.parseFromCentralDirectoryData(data, (start + WORD), length);\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "32": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nreturn (ZipExtraField [])v.toArray(result);                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "33": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / start) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "34": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start < WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "35": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif(!length){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "36": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nreturn null;                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "37": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > v)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "38": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nv.add(ze);\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "39": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start == WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "40": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + -length) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "41": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / local) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "42": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif(length){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "43": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((v + WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "44": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nstart += (length + WORD);\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "45": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nlength++;\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "46": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) || data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "47": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > data.WORD)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "48": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif(local){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "49": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > data.length)){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "50": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) < length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "51": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) && data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "52": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif((length > 0)){\n                    + \" is in unknown format\");\n}\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "53": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) - data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "54": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif((length == null)){\ncontinue;\n}                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "55": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > local)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "56": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) == length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "57": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nreturn;\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "58": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((local + WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "59": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length < length) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "60": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) > WORD)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "61": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length < WORD) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "62": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length > length) && (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "63": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length > WORD) && (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "64": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length > length) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "65": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nbreak;\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "66": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) || (length > length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "67": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) && (length > length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "68": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length > WORD) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "69": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();            if ((start + WORD) / length > data.length) {                throw new ZipException(\"data starting at \" + start\n\nif((length == null)){\nreturn null;}                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "70": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start != WORD) / length) > data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "71": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length < length) && (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "72": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((start + WORD) / length) >> data.length)){                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "73": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length < WORD) && (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "74": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) || (length < length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "75": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) && (length > WORD))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "76": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) || (length > WORD))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "77": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) && (length > headerId))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "78": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) || (length > headerId))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "79": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((((start + WORD) / length) > data.length) && (length < length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "80": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length <= length) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "81": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((WORD < length) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "82": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif(((length < headerId) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }",
          "83": "    public static ZipExtraField[] parse(byte[] data, boolean local)\n        throws ZipException {\n        List v = new ArrayList();\n        int start = 0;\n        while (start <= data.length - WORD) {\n            ZipShort headerId = new ZipShort(data, start);\n            int length = (new ZipShort(data, start + 2)).getValue();\nif((((length - length) < length) || (((start + WORD) / length) > data.length))){\n                throw new ZipException(\"data starting at \" + start\n                    + \" is in unknown format\");\n            }\n            try {\n                ZipExtraField ze = createExtraField(headerId);\n                if (local) {\n                    ze.parseFromLocalFileData(data, start + WORD, length);\n                } else {\n                    ze.parseFromCentralDirectoryData(data, start + WORD,\n                                                     length);\n                }\n                v.add(ze);\n            } catch (InstantiationException ie) {\n                throw new ZipException(ie.getMessage());\n            } catch (IllegalAccessException iae) {\n                throw new ZipException(iae.getMessage());\n            }\n            start += (length + WORD);\n        }\n\n        ZipExtraField[] result = new ZipExtraField[v.size()];\n        return (ZipExtraField[]) v.toArray(result);\n    }"
}