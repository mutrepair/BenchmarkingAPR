{
          "0": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 1)];\n        return ptr;\n    }",
          "1": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 2)];\n        return ptr;\n    }",
          "2": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 0)];\n        return ptr;\n    }",
          "3": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 0x3F)];\n        return ptr;\n    }",
          "4": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "5": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "6": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = PADDING_CHAR_NONE;\n        return ptr;\n    }",
          "7": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC;\n        return ptr;\n    }",
          "8": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _paddingChar;\n        return ptr;\n    }",
          "9": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 6)];\n        return ptr;\n    }",
          "10": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 12)];\n        return ptr;\n    }",
          "11": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "12": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[ptr++];\n        return ptr;\n    }",
          "13": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = PADDING_CHAR_NONE[(b24 ^<> 63)];\n        return ptr;\n    }",
          "14": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _paddingChar[(b24 ^<> 63)];\n        return ptr;\n    }",
          "15": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer;\n        return ptr;\n    }",
          "16": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer[(b24 ^<> 63)];\n        return ptr;\n    }",
          "17": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 18) & 0x3F)];\n        return ptr;\n    }",
          "18": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer[ptr++];\n        return ptr;\n    }",
          "19": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = PADDING_CHAR_NONE[ptr++];\n        return ptr;\n    }",
          "20": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _paddingChar[ptr++];\n        return ptr;\n    }",
          "21": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ptr;\n        return ptr;\n    }",
          "22": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = b24;\n        return ptr;\n    }",
          "23": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (b24 ^<> 63);\n        return ptr;\n    }",
          "24": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 12) & 0x3F)];\n        return ptr;\n    }",
          "25": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = PADDING_CHAR_NONE[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "26": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _paddingChar[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "27": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> false)];\n        return ptr;\n    }",
          "28": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ptr[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "29": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ptr[(b24 ^<> 63)];\n        return ptr;\n    }",
          "30": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = b24[(b24 ^<> 63)];\n        return ptr;\n    }",
          "31": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = b24[((b24 >> 6) & 0x3F)];\n        return ptr;\n    }",
          "32": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ptr[ptr++];\n        return ptr;\n    }",
          "33": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> 18)];\n        return ptr;\n    }",
          "34": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> true)];\n        return ptr;\n    }",
          "35": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = b24[ptr++];\n        return ptr;\n    }",
          "36": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "37": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer[((b24 >> 18) & 0x3F)];\n        return ptr;\n    }",
          "38": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> -1)];\n        return ptr;\n    }",
          "39": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nptr = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "40": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n_base64ToAsciiC[((b24 >> 6) & 0x3F)] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "41": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = buffer[((b24 >> 12) & 0x3F)];\n        return ptr;\n    }",
          "42": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[(b24 ^<> 63)] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "43": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n_base64ToAsciiC = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "44": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n_base64ToAsciiC[ptr++] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "45": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n_base64ToAsciiC[(b24 ^<> 63)] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "46": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + 63);\n        return ptr;\n    }",
          "47": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nb24 = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "48": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = PADDING_CHAR_NONE[((b24 >> 18) & 0x3F)];\n        return ptr;\n    }",
          "49": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _paddingChar[((b24 >> 18) & 0x3F)];\n        return ptr;\n    }",
          "50": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 ^<> \"null\")];\n        return ptr;\n    }",
          "51": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n_reportBase64EOF();\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "52": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[((b24 >> 6) & 0x3F)] = _base64ToAsciiC[(b24 ^<> 63)];\n        return ptr;\n    }",
          "53": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ;\n        return ptr;\n    }",
          "54": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 - 63)];\n        return ptr;\n    }",
          "55": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 <= 63)];\n        return ptr;\n    }",
          "56": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC + buffer);\n        return ptr;\n    }",
          "57": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 >> 63)];\n        return ptr;\n    }",
          "58": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (b24 + 63);\n        return ptr;\n    }",
          "59": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 12) & 0x3F)];\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "60": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC + 63);\n        return ptr;\n    }",
          "61": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 >>> 63)];\n        return ptr;\n    }",
          "62": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 6) & 0x3F)];\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "63": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 % 63)];\n        return ptr;\n    }",
          "64": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 >= 63)];\n        return ptr;\n    }",
          "65": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[((b24 >> 18) & 0x3F)];\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "66": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + buffer);\n        return ptr;\n    }",
          "67": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[(b24 ^<> 63)] + 63);\n        return ptr;\n    }",
          "68": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 + 63)];\n        return ptr;\n    }",
          "69": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 > 63)];\n        return ptr;\n    }",
          "70": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 / 63)];\n        return ptr;\n    }",
          "71": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = _base64ToAsciiC[(b24 * 63)];\n        return ptr;\n    }",
          "72": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[(b24 ^<> 63)] + buffer);\n        return ptr;\n    }",
          "73": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + ptr);\n        return ptr;\n    }",
          "74": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + _base64ToAsciiC[(b24 ^<> 63)]);\n        return ptr;\n    }",
          "75": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + _base64ToAsciiC);\n        return ptr;\n    }",
          "76": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n        return ptr;\n    }",
          "77": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC + _base64ToAsciiC[(b24 ^<> 63)]);\n        return ptr;\n    }",
          "78": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[(b24 ^<> 63)] + buffer[(b24 ^<> 63)]);\n        return ptr;\n    }",
          "79": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[(b24 ^<> 63)] + _base64ToAsciiC);\n        return ptr;\n    }",
          "80": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (buffer + _base64ToAsciiC[ptr++]);\n        return ptr;\n    }",
          "81": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[(b24 ^<> 63)] + _base64ToAsciiC[(b24 ^<> 63)]);\n        return ptr;\n    }",
          "82": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC[ptr++] + buffer);\n        return ptr;\n    }",
          "83": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = (_base64ToAsciiC + buffer[(b24 ^<> 63)]);\n        return ptr;\n    }",
          "84": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ((_base64ToAsciiC + buffer) + 63);\n        return ptr;\n    }",
          "85": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ((_base64ToAsciiC * buffer) + 63);\n        return ptr;\n    }",
          "86": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbuffer[ptr++] = ((buffer + buffer) + 63);\n        return ptr;\n    }",
          "87": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nreturn;\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "88": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\nbreak;\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }",
          "89": "    public int encodeBase64Chunk(int b24, char[] buffer, int ptr)\n    {\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 18) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 12) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[(b24 >> 6) & 0x3F];\n        buffer[ptr++] = _base64ToAsciiC[b24 ^ 63];        return ptr;\n    }"
}