{
          "0": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(false){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "1": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nprintln();\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "2": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nflush();\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "3": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nprintSep();\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "4": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(pos){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "5": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nreturn;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "6": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(-false){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "7": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(start){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "8": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(end){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "9": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c != null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "10": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(value){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "11": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(-1){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "12": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(-true){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "13": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(!pos){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "14": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nc++;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "15": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((escape != null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "16": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "17": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(delim){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "18": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "19": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(offset){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "20": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(!start){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "21": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(!end){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "22": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "23": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((end != null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "24": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((delim != null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "25": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(end){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "26": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c != null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "27": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nc = false;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "28": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nout.append(value, start, pos);\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "29": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(1){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "30": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nbreak;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "31": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((escape == null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "32": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((escape == null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "33": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\npos++;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "34": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nc = true;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "35": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nout.append(escape);\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "36": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nc = \"null\";\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "37": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((delim == null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "38": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((end == null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "39": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nescape = false;\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "40": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((escape != null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "41": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((pos != null)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "42": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == null)){\ncontinue;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "43": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nstart = (pos + 1);\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "44": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(true){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "45": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nout.append(c);\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "46": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((end == null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "47": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == 0)){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "48": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == \"null\")){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "49": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((delim == null)){\nreturn;\n}            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "50": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nbreak;\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "51": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(null){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "52": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif(\"null\"){                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "53": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((c == \"null\")){\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n}\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "54": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nreturn;\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "55": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((end || (end == null))){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "56": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\ncontinue;\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "57": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nchar c = value.charAt(pos);\n            if (true) {                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "58": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((delim || (end == null))){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }",
          "59": "    void printAndEscape(CharSequence value, int offset, int len) throws IOException {\n        int start = offset;\n        int pos = offset;\n        int end = offset + len;\n\n        printSep();\n\n        char delim = format.getDelimiter();\n        char escape = format.getEscape();\n\n        while (pos < end) {\n            char c = value.charAt(pos);\nif((end || (end == 0))){\n                // write out segment up until this char\n                if (pos > start) {\n                    out.append(value, start, pos);\n                }\n                if (c == '\\n') {\n                    c = 'n';\n                } else if (c == '\\r') {\n                    c = 'r';\n                }\n\n                out.append(escape);\n                out.append(c);\n\n                start = pos + 1; // start on the current char after this one\n            }\n\n            pos++;\n        }\n\n        // write last segment\n        if (pos > start) {\n            out.append(value, start, pos);\n        }\n    }"
}