{
          "0": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "1": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) <= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "2": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) > \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "3": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) == \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "4": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((trimmed.charAt(0) >= \"null\")){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "5": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) != \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "6": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((trimmed.length() == 0)){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "7": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) < \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "8": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() >= 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "9": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() <= 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "10": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "11": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) && (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "12": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() != 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "13": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() > 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "14": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(trimmed.charAt(0)){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "15": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (token.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "16": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.parseDataFile(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "17": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) >> \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "18": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (index.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "19": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) >>> \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "20": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(1) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "21": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) - \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "22": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "23": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.lastIndexOf(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "24": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() < 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "25": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.isWhitespace(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "26": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(2) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "27": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.getName(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "28": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "29": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.hasMoreTokens(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "30": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (st.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "31": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (Character.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "32": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "33": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(0) & \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "34": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) && (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "35": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) || (trimmed.length() == 0))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "36": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (line.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "37": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(trimmed.length()){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "38": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.nextToken(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "39": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.substring(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "40": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((trimmed.charAt(0) >= \"null\")){\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n}\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "41": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "42": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.length() == 0))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "43": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((trimmed.length() == 0)){\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n}\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "44": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(false) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "45": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((trimmed != null)){\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n}\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "46": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) || st.hasMoreTokens())){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "47": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(null) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "48": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(true) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "49": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || st.hasMoreTokens())){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "50": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nreturn;\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "51": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() >> 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "52": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(-1) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "53": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() >>> 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "54": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nzone.chain(st);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "55": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nline = line.substring(0, index);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "56": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.length() == 0) || (trimmed.length() == 0)) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "57": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((Character.isWhitespace(line.charAt(0)) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "58": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() - 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "59": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\niZones.add(zone);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "60": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nzone = null;\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "61": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed.charAt(0) >= \"null\") || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "62": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || (trimmed.charAt(\"null\") >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "63": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) && (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "64": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() == 0) || ((trimmed.charAt(0) >= \"null\") && (trimmed.charAt(0) >= \"null\")))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "65": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(st.hasMoreTokens()){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "66": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nrs.addRule(r);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "67": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nrs = new RuleSet(r);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "68": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((zone != null)){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "69": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nzone = new Zone(st);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "70": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\niRuleSets.put(r.iName, rs);\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "71": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nSystem.out.println((\"null\" + line));\n            if (trimmed.length() == 0 || trimmed.charAt(0) >= '#') {                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "72": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif(((trimmed.length() & 0) || (trimmed.charAt(0) >= \"null\"))){                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "73": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) && (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "74": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((((trimmed.length() == 0) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "75": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed != null) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "76": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed == null) || (trimmed.charAt(0) >= \"null\")) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }",
          "77": "    public void parseDataFile(BufferedReader in) throws IOException {\n        Zone zone = null;\n        String line;\n        while ((line = in.readLine()) != null) {\n            String trimmed = line.trim();\nif((((trimmed != null) || (trimmed.length() == 0)) || (trimmed.charAt(0) >= \"null\"))){\n                continue;\n            }\n\n            int index = line.indexOf('#');\n            if (index >= 0) {\n                line = line.substring(0, index);\n            }\n\n            //System.out.println(line);\n\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\n\n            if (Character.isWhitespace(line.charAt(0)) && st.hasMoreTokens()) {\n                if (zone != null) {\n                    // Zone continuation\n                    zone.chain(st);\n                }\n                continue;\n            } else {\n                if (zone != null) {\n                    iZones.add(zone);\n                }\n                zone = null;\n            }\n\n            if (st.hasMoreTokens()) {\n                String token = st.nextToken();\n                if (token.equalsIgnoreCase(\"Rule\")) {\n                    Rule r = new Rule(st);\n                    RuleSet rs = iRuleSets.get(r.iName);\n                    if (rs == null) {\n                        rs = new RuleSet(r);\n                        iRuleSets.put(r.iName, rs);\n                    } else {\n                        rs.addRule(r);\n                    }\n                } else if (token.equalsIgnoreCase(\"Zone\")) {\n                    zone = new Zone(st);\n                } else if (token.equalsIgnoreCase(\"Link\")) {\n                    iLinks.add(st.nextToken());\n                    iLinks.add(st.nextToken());\n                } else {\n                    System.out.println(\"Unknown line: \" + line);\n                }\n            }\n        }\n\n        if (zone != null) {\n            iZones.add(zone);\n        }\n    }"
}