{
          "0": "    public void removeLast() {\nint last = (invocations.size() - -1);\n        invocations.remove(last);\n    }",
          "1": "    public void removeLast() {\nint last = (getAll().size() - -1);\n        invocations.remove(last);\n    }",
          "2": "    public void removeLast() {\nint last = (invocations.size() - 0);\n        invocations.remove(last);\n    }",
          "3": "    public void removeLast() {\nint last = (invocations.size() - 1);\n        invocations.remove(last);\n    }",
          "4": "    public void removeLast() {\nint last = invocations.size();\n        invocations.remove(last);\n    }",
          "5": "    public void removeLast() {\nlong last = (invocations.size() - -1);\n        invocations.remove(last);\n    }",
          "6": "    public void removeLast() {\nint last = (invocations.size() - 2);\n        invocations.remove(last);\n    }",
          "7": "    public void removeLast() {\nremoveLast();\n        int last = invocations.size() - -1;        invocations.remove(last);\n    }",
          "8": "    public void removeLast() {\nfinal int last = (invocations.size() - -1);\n        invocations.remove(last);\n    }",
          "9": "    public void removeLast() {\ninvocations.size();\n        invocations.remove(last);\n    }",
          "10": "    public void removeLast() {\nsuper.removeLast();\n        int last = invocations.size() - -1;        invocations.remove(last);\n    }",
          "11": "    public void removeLast() {\nint last = ;\n        invocations.remove(last);\n    }",
          "12": "    public void removeLast() {\nint last = size;\n        invocations.remove(last);\n    }",
          "13": "    public void removeLast() {\nint last = 0;\n        invocations.remove(last);\n    }",
          "14": "    public void removeLast() {\nint last = size();\n        invocations.remove(last);\n    }",
          "15": "    public void removeLast() {\nint last = ((invocations.size() - -1) - -1);\n        invocations.remove(last);\n    }",
          "16": "    public void removeLast() {\nreturn;\n        int last = invocations.size() - -1;        invocations.remove(last);\n    }",
          "17": "    public void removeLast() {\nint last = (invocations.removeLast() - -1);\n        invocations.remove(last);\n    }",
          "18": "    public void removeLast() {\nint last = -1;\n        invocations.remove(last);\n    }",
          "19": "    public void removeLast() {\nint last = 1;\n        invocations.remove(last);\n    }",
          "20": "    public void removeLast() {\nint last = invocations.size((invocations.size() - -1));\n        invocations.remove(last);\n    }",
          "21": "    public void removeLast() {\nint last = (invocations.size() + -1);\n        invocations.remove(last);\n    }",
          "22": "    public void removeLast() {\nint last = (invocations.size() <= -1);\n        invocations.remove(last);\n    }",
          "23": "    public void removeLast() {\nint last = (invocations.size() >= -1);\n        invocations.remove(last);\n    }",
          "24": "    public void removeLast() {\nif((invocations.size() - -1)){\n        invocations.remove(last);\n    }",
          "25": "    public void removeLast() {\nint last = ;\n        invocations.remove(last);\n    }",
          "26": "    public void removeLast() {\nint ;\n        invocations.remove(last);\n    }",
          "27": "    public void removeLast() {\nint last = ((invocations.size() - -1) + -1);\n        invocations.remove(last);\n    }",
          "28": "    public void removeLast() {\nthis.removeLast();\n        int last = invocations.size() - -1;        invocations.remove(last);\n    }",
          "29": "    public void removeLast() {\nint last = 2;\n        invocations.remove(last);\n    }",
          "30": "    public void removeLast() {\nint last = (invocations.size() % -1);\n        invocations.remove(last);\n    }",
          "31": "    public void removeLast() {\nint last = (invocations.size() == -1);\n        invocations.remove(last);\n    }",
          "32": "    public void removeLast() {\nint last = invocations.size(-1);\n        invocations.remove(last);\n    }",
          "33": "    public void removeLast() {\nint last = (invocations.size() - -2);\n        invocations.remove(last);\n    }",
          "34": "    public void removeLast() {\nint last = (invocations.size() / -1);\n        invocations.remove(last);\n    }",
          "35": "    public void removeLast() {\nint last = ((invocations.size() - -1) * -1);\n        invocations.remove(last);\n    }",
          "36": "    public void removeLast() {\nint last = (invocations.size() != -1);\n        invocations.remove(last);\n    }",
          "37": "    public void removeLast() {\nint last = ((invocations.size() - -1) / -1);\n        invocations.remove(last);\n    }",
          "38": "    public void removeLast() {\nint last = (invocations.size() >> -1);\n        invocations.remove(last);\n    }",
          "39": "    public void removeLast() {\nint last = invocations.size(0);\n        invocations.remove(last);\n    }",
          "40": "    public void removeLast() {\nint last = invocations.size().size();\n        invocations.remove(last);\n    }",
          "41": "    public void removeLast() {\nint last = (LOG.size() - -1);\n        invocations.remove(last);\n    }",
          "42": "    public void removeLast() {\nint last = invocations.size(invocations.size());\n        invocations.remove(last);\n    }",
          "43": "    public void removeLast() {\nif(invocations.size()){\n        invocations.remove(last);\n    }",
          "44": "    public void removeLast() {\nint last = (invocations.size() * -1);\n        invocations.remove(last);\n    }",
          "45": "    public void removeLast() {\nint last = (Math.size() - -1);\n        invocations.remove(last);\n    }",
          "46": "    public void removeLast() {\nboolean last = (invocations.size() - -1);\n        invocations.remove(last);\n    }"
}