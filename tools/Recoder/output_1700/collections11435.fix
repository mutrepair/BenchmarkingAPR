{
          "0": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= -1);            }\n            return ret > 0;\n        }",
          "1": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret > -1);            }\n            return ret > 0;\n        }",
          "2": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret <= -1);            }\n            return ret > 0;\n        }",
          "3": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret < -1);            }\n            return ret > 0;\n        }",
          "4": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret == -1);            }\n            return ret > 0;\n        }",
          "5": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret != -1);            }\n            return ret > 0;\n        }",
          "6": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (fromInclusive >= -1);            }\n            return ret > 0;\n        }",
          "7": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= 1);            }\n            return ret > 0;\n        }",
          "8": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= 2);            }\n            return ret > 0;\n        }",
          "9": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nclear();\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "10": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nincrementSize();\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "11": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\ndecrementSize();\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "12": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nincrementModCount();\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "13": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nremove();\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "14": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (fromInclusive || forceInclusive);            }\n            return ret > 0;\n        }",
          "15": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (fromKey >= -1);            }\n            return ret > 0;\n        }",
          "16": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ( >= -1);            }\n            return ret > 0;\n        }",
          "17": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >>> -1);            }\n            return ret > 0;\n        }",
          "18": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >> -1);            }\n            return ret > 0;\n        }",
          "19": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret && -1);            }\n            return ret > 0;\n        }",
          "20": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret || -1);            }\n            return ret > 0;\n        }",
          "21": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (forceInclusive >= -1);            }\n            return ret > 0;\n        }",
          "22": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (key >= -1);            }\n            return ret > 0;\n        }",
          "23": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (-ret >= -1);            }\n            return ret > 0;\n        }",
          "24": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret > 0);            }\n            return ret > 0;\n        }",
          "25": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ( >= -1);            }\n            return ret > 0;\n        }",
          "26": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ret;            }\n            return ret > 0;\n        }",
          "27": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= 0);            }\n            return ret > 0;\n        }",
          "28": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn false;                return ret >= -1;            }\n            return ret > 0;\n        }",
          "29": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= false);            }\n            return ret > 0;\n        }",
          "30": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn false;            }\n            return ret > 0;\n        }",
          "31": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn true;                return ret >= -1;            }\n            return ret > 0;\n        }",
          "32": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn true;            }\n            return ret > 0;\n        }",
          "33": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ( >= -1);            }\n            return ret > 0;\n        }",
          "34": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret > ret);            }\n            return ret > 0;\n        }",
          "35": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nret++;\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "36": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret >= -1));            }\n            return ret > 0;\n        }",
          "37": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret > 0);                return ret >= -1;            }\n            return ret > 0;\n        }",
          "38": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret++ >= -1);            }\n            return ret > 0;\n        }",
          "39": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret < ret);            }\n            return ret > 0;\n        }",
          "40": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= null);            }\n            return ret > 0;\n        }",
          "41": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nret--;\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "42": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn fromInclusive;            }\n            return ret > 0;\n        }",
          "43": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nbreak;\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "44": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret > fromInclusive);            }\n            return ret > 0;\n        }",
          "45": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (-fromInclusive >= -1);            }\n            return ret > 0;\n        }",
          "46": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= true);            }\n            return ret > 0;\n        }",
          "47": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ( >= -1);            }\n            return ret > 0;\n        }",
          "48": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret <= ret);            }\n            return ret > 0;\n        }",
          "49": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret-- >= -1);            }\n            return ret > 0;\n        }",
          "50": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) || (ret >= -1));            }\n            return ret > 0;\n        }",
          "51": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret < 0);            }\n            return ret > 0;\n        }",
          "52": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= ret);            }\n            return ret > 0;\n        }",
          "53": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (- >= -1);            }\n            return ret > 0;\n        }",
          "54": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret || (ret >= -1));            }\n            return ret > 0;\n        }",
          "55": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret < fromInclusive);            }\n            return ret > 0;\n        }",
          "56": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (~ret >= -1);            }\n            return ret > 0;\n        }",
          "57": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= -2);            }\n            return ret > 0;\n        }",
          "58": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\ncontinue;\n            }\n            return ret > 0;\n        }",
          "59": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\n            }\n            return ret > 0;\n        }",
          "60": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn;\n            }\n            return ret > 0;\n        }",
          "61": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn;\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "62": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn (ret >= \"null\");            }\n            return ret > 0;\n        }",
          "63": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nif((ret != null)){\ncontinue;\n}\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "64": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret == -1));            }\n            return ret > 0;\n        }",
          "65": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret != -1) && (ret >= -1));            }\n            return ret > 0;\n        }",
          "66": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret == -1) && (ret >= -1));            }\n            return ret > 0;\n        }",
          "67": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret != 0) && (ret >= -1));            }\n            return ret > 0;\n        }",
          "68": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nif((ret == null)){\nreturn false;}                return ret >= -1;            }\n            return ret > 0;\n        }",
          "69": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret != -1));            }\n            return ret > 0;\n        }",
          "70": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) || (ret > -1));            }\n            return ret > 0;\n        }",
          "71": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret != null) && (ret >= -1));            }\n            return ret > 0;\n        }",
          "72": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret > -1));            }\n            return ret > 0;\n        }",
          "73": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) || (ret > ret));            }\n            return ret > 0;\n        }",
          "74": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret > ret));            }\n            return ret > 0;\n        }",
          "75": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret == ret));            }\n            return ret > 0;\n        }",
          "76": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nif((ret == null)){\nreturn true;}                return ret >= -1;            }\n            return ret > 0;\n        }",
          "77": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\ncontinue;\n                return ret >= -1;            }\n            return ret > 0;\n        }",
          "78": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nreturn ((ret >= -1) && (ret != ret));            }\n            return ret > 0;\n        }",
          "79": "        protected boolean inFromRange(final K key, final boolean forceInclusive) {\n            final K fromKey = getFromKey();\n            final boolean fromInclusive = isFromInclusive();\n\n            final int ret = getKeyAnalyzer().compare(key, fromKey);\n            if (fromInclusive || forceInclusive) {\nif((ret != null)){\nreturn false;}                return ret >= -1;            }\n            return ret > 0;\n        }"
}