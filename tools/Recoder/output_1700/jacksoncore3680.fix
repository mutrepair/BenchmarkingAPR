{
          "0": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 2;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "1": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn bits;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "2": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\ncontinue;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "3": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn ch;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "4": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "5": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 0;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "6": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn unescaped;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "7": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn index;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "8": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn INT_SPACE;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "9": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn b64variant;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "10": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn bits;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "11": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nclose();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "12": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nloadMoreGuaranteed();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "13": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n_finishString();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "14": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n_closeInput();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "15": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n_releaseBuffers();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "16": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n_handleEOF();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "17": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nconvertNumberToInt();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "18": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nconvertNumberToLong();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "19": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nconvertNumberToBigInteger();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "20": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nconvertNumberToDouble();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "21": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nconvertNumberToBigDecimal();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "22": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreportOverflowInt();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "23": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreportOverflowLong();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "24": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn ;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "25": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 0;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "26": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn -1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "27": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn ;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "28": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn ;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "29": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn _parseNumericValue(unescaped);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "30": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn _parseSlowFloatValue(unescaped);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "31": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "32": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn ch;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "33": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn this;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "34": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn;\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "35": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn index;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "36": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nbreak;\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "37": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn unescaped;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "38": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn false;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "39": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn b64variant.decodeBase64Char(unescaped);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "40": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((index == 0)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "41": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nbreak;\n            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "42": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn b64variant;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "43": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 2;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "44": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn null;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "45": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn decodeBase64Char(unescaped);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "46": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn INT_SPACE;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "47": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn true;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "48": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\ncontinue;\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "49": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn _parseNumericValue(ch);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "50": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn _parseSlowFloatValue(ch);            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "51": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((bits < 0)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "52": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "53": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "54": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn this;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "55": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch != \"null\")){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "56": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((unescaped <= INT_SPACE)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "57": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch != null)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "58": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nunescaped = ch;\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "59": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch == null)){\nreturn bits;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "60": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nbits = ch;\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "61": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch == null)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "62": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn 1;                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "63": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((index != null)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "64": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch == null)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "65": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((unescaped == null)){\nreturn bits;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "66": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((unescaped != null)){\n}\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "67": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((index == null)){\nreturn bits;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "68": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((b64variant == null)){\nreturn bits;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "69": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nreturn \"null\";            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "70": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((index == null)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "71": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch != null)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "72": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((unescaped == null)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "73": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nint unescaped = _decodeEscaped();\n                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "74": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((ch == 0)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }",
          "75": "    protected final int _decodeBase64Escape(Base64Variant b64variant, int ch, int index)\n        throws IOException, JsonParseException\n    {\n        // 17-May-2011, tatu: As per [JACKSON-xxx], need to handle escaped chars\n        if (ch != '\\\\') {\n            throw reportInvalidBase64Char(b64variant, ch, index);\n        }\n        int unescaped = _decodeEscaped();\n        // if white space, skip if first triplet; otherwise errors\n        if (unescaped <= INT_SPACE) {\n            if (index == 0) { // whitespace only allowed to be skipped between triplets\nif((b64variant == null)){\nreturn 0;}                return 1;            }\n        }\n        // otherwise try to find actual triplet value\n        int bits = b64variant.decodeBase64Char(unescaped);\n        if (bits < 0) {\n            throw reportInvalidBase64Char(b64variant, unescaped, index);\n        }\n        return bits;\n    }"
}