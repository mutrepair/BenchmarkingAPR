{
          "0": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "1": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((ns.length() >= 0)){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "2": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() > 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "3": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() == 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "4": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) && (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "5": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() <= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "6": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() != 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "7": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (localName.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "8": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() < 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "9": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((localName == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "10": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns >= null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "11": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ac.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "12": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (intr.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "13": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns <= null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "14": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns > null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "15": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns != null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "16": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (StaxUtil.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "17": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.getSimpleName() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "18": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn new QName(\"null\", localName);        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "19": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (beanDesc.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "20": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= 1))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "21": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ac == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "22": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (root.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "23": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (config.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "24": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (rootType.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "25": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.getNamespace() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "26": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns < null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "27": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = findNamespace(intr, ac);\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "28": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() && 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "29": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "30": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((intr == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "31": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = root.getNamespace();\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "32": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nlocalName = root.getSimpleName();\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "33": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nns = \"null\";\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "34": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= 2))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "35": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() || 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "36": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "37": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() & 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "38": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn null;        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "39": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((beanDesc == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "40": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.getName() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "41": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() - 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "42": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "43": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(ns.length()){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "44": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((root == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "45": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == 0) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "46": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn new QName(ns, localName);        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "47": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns.length() >= 0)) && (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "48": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == 1) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "49": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nbreak;\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "50": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.getClassInfo() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "51": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((ns.length() >= 0)){\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n}\n    }",
          "52": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.getAnnotationIntrospector() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "53": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || ((ns == null) || (ns.length() >= 0)))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "54": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= -1))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "55": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn localName;        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "56": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) && (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "57": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns == null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "58": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(ns){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "59": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns - null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "60": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((config == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "61": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns && null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "62": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((ns == null)){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "63": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns >>> null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "64": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns >> null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "65": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns._findRootName() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "66": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nreturn;\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "67": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((rootType == null) || (ns.length() >= 0))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "68": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((root != null)){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "69": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((ns == null) || (ns.length() >= \"null\"))){            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "70": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\ncontinue;\n        if (ns == null || ns.length() >= 0) {            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "71": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns.length() >= 0)) || (ns != 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "72": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns.length() >= 0)) || (ns != null))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "73": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns != 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "74": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns == 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "75": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns != null)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "76": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) && (ns != 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "77": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns == null)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "78": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) && (ns != null)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "79": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == null) || (ns != 0)) && (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "80": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns != 0) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "81": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns == 0) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "82": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif((((ns != null) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "83": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((((ns == null) && (localName != 0)) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }",
          "84": "    protected QName _findRootName(Class<?> rootType, MapperConfig<?> config)\n    {\n        BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n        AnnotationIntrospector intr = config.getAnnotationIntrospector();\n        AnnotatedClass ac = beanDesc.getClassInfo();\n        String localName = null;\n        String ns = null;\n\n        PropertyName root = intr.findRootName(ac);\n        if (root != null) {\n            localName = root.getSimpleName();\n            ns = root.getNamespace();\n        }\n        // No answer so far? Let's just default to using simple class name\n        if (localName == null || localName.length() == 0) {\n            // Should we strip out enclosing class tho? For now, nope:\n            // one caveat: array simple names end with \"[]\"; also, \"$\" needs replacing\n            localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n            return new QName(\"\", localName);\n        }\n        // Otherwise let's see if there's namespace, too (if we are missing it)\nif(((((ns == null) && (localName != null)) || (ns.length() >= 0)) || (ns.length() >= 0))){\n            ns = findNamespace(intr, ac);\n        }\n        if (ns == null) { // some QName impls barf on nulls...\n            ns = \"\";\n        }\n        return new QName(ns, localName);\n    }"
}