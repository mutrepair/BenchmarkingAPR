{
          "0": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(supertype){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "1": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(rawType){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "2": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(supertype.isEmpty()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "3": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(cls){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "4": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(prefix){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "5": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(supertype.getSuperclass()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "6": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nreturn true;            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "7": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!supertype){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "8": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(prefix.isEmpty()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "9": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!prefix){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "10": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(cls.getSuperclass()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "11": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(rawType.isEmpty()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "12": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nreturn false;            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "13": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!supertype.isEmpty()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "14": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "15": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!rawType){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "16": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype == null)){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "17": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(\"null\"){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "18": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!rawType.isEmpty()){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "19": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(-true){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "20": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(!cls){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "21": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype != null)){\ncontinue;\n}\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "22": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype == null)){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "23": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(supertype){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "24": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix != null)){\ncontinue;\n}\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "25": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix == null)){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "26": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nprefix = false;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "27": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(supertype){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "28": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nsupertype++;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "29": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "30": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nprefix = true;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "31": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix == null)){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "32": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype != null)){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "33": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nprefix = supertype.getSuperclass();\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "34": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype != null)){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "35": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nsupertype = false;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "36": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix != null)){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "37": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype == null)){\ncontinue;\n}\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "38": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((rawType == null)){\nreturn true;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "39": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nsupertype = true;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "40": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nbreak;\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "41": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix && prefix)){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "42": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nprefix = supertype;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "43": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nfor(Class<?> supertype = rawType.getSuperclass();(supertype != null);supertype = supertype.getSuperclass()) {            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "44": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix != null)){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "45": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((rawType == null)){\nreturn false;}            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "46": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nbreak;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "47": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nreturn;\n            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "48": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(hasInterfaceStartingWith(cls, prefix)){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "49": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "50": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(null){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "51": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix && (prefix != null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "52": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nfor(Class<?> cls = rawType;(cls != null);cls = cls.getSuperclass()) {            if (false) {                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "53": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(1){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "54": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(false){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "55": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix || (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "56": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix && (supertype == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "57": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix || (prefix != null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "58": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "59": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((supertype && (prefix != null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "60": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nreturn;\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "61": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(true){                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "62": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif((prefix && (prefix == prefix))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "63": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(((prefix == null) && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "64": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(((prefix != null) && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "65": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(((supertype == null) && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "66": "    private boolean hasSupertypeStartingWith(Class<?> rawType, String prefix)\n    {\n        // first, superclasses\n        for (Class<?> supertype = rawType.getSuperclass(); supertype != null; supertype = supertype.getSuperclass()) {\nif(((supertype != null) && (prefix == null))){\n                return true;\n            }\n        }\n        // then interfaces\n        for (Class<?> cls = rawType; cls != null; cls = cls.getSuperclass()) {\n            if (hasInterfaceStartingWith(cls, prefix)) {\n                return true;\n            }\n        }\n        return false;\n    }"
}