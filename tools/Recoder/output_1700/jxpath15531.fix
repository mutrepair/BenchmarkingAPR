{
          "0": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "1": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex--;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "2": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (position + startIndex);\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "3": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nprepareForIndividualProperty(name);\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "4": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex++;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "5": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nend = (length - 1);\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "6": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nprepareForIndividualProperty(name);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "7": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (end - position);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "8": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\npropertyNodePointer.setIndex((index - 1));\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "9": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - end) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "10": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = index;\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "11": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex++;\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "12": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex--;\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "13": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex += ((end - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "14": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreset();\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "15": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nbreak;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "16": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "17": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * 0);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "18": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (position + startIndex);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "19": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nthis.position = position;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "20": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nend = (length - 1);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "21": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreturn false;            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "22": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - includeStart) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "23": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - index) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "24": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - startIndex) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "25": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - startPropertyIndex) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "26": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((end - position)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "27": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((length - 1)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "28": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreturn;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "29": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - ) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "30": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex -= ((end - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "31": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreturn true;            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "32": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = position;\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "33": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - length) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "34": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\npropertyNodePointer.setIndex((index - 1));\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "35": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * 1);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "36": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nthis.position = position;\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "37": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((position + startIndex)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "38": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - ) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "39": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - -end) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "40": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex &= ((end - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "41": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif(((end - position) * 2)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "42": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end + position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "43": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * -1);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "44": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (length - 1);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "45": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end <= position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "46": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreturn false;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "47": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) + index);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "48": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) + position);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "49": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((index < 1)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "50": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) - 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "51": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif(getLength()){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "52": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((index - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "53": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nend = ((end - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "54": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\ncontinue;\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "55": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (((end - position) * 2) + index);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "56": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((end != null)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "57": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * index);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "58": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif(!includeStart){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "59": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (((end - position) * 2) * index);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "60": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((end == -1)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "61": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nif((index > length)){\n            index = (end - position) * 2;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n}\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "62": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end / position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "63": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end >= position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "64": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (((end - position) * 2) + end);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "65": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = (( - position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "66": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) * false);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "67": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end * position) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "68": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nreturn true;            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "69": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end - position) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "70": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((((end - position) * 2) * index) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "71": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((((end - position) * 2) * index) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "72": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((((end - position) * 2) * position) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "73": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((index * index) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "74": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((index * position) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "75": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end * index) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "76": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((index * index) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "77": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end * index) * 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }",
          "78": "    private boolean setPositionIndividualProperty(int position) {\n        this.position = position;\n        if (position < 1) {\n            return false;\n        }\n\n        if (!targetReady) {\n            prepareForIndividualProperty(name);\n        }\n\n        if (empty) {\n            return false;\n        }\n\n        int length = getLength();\n        int index;\n        if (!reverse) {\n            index = position + startIndex;\n            if (!includeStart) {\n                index++;\n            }\n            if (index > length) {\n                return false;\n            }\n        }\n        else {\n            int end = startIndex;\n            if (end == -1) {\n                end = length - 1;\n            }\nindex = ((end * end) + 2);\n            if (!includeStart) {\n                index--;\n            }\n            if (index < 1) {\n                return false;\n            }\n        }\n        propertyNodePointer.setIndex(index - 1);\n        return true;\n    }"
}