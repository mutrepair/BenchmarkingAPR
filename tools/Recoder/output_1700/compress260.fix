{
          "0": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, 0, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "1": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "2": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, 1, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "3": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, 2, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "4": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, 1000, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "5": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "6": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, \"null\", \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "7": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, true, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "8": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, false, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "9": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -1, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "10": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, null, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "11": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = write(n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "12": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -2, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "13": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\nfill(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "14": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset += write(n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "15": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -16, 0);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "16": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, archiveOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "17": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, entryOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "18": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "19": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -0, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "20": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, !1, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "21": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "22": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "23": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "24": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "25": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, archiveOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "26": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, entryOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "27": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(archiveOffset, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "28": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(entryOffset, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "29": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "30": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -\"null\", \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "31": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = write(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "32": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, archiveOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "33": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, entryOffset);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "34": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(m, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "35": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "36": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(archiveOffset, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "37": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(entryOffset, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "38": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "39": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = writeEntryHeader(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "40": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = e(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "41": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, n, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "42": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = debug(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "43": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, ~1, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "44": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, -16, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "45": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, archiveOffset, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "46": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, entryOffset, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "47": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, +1, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "48": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(archiveOffset, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "49": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(entryOffset, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "50": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "51": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -16, 1000);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "52": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "53": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = getLastModified(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "54": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset += fill(n, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "55": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16, n);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "56": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = add(offset, -16, \"null\");\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "57": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset += fill(-16, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "58": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = write(n, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "59": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, \"null\", -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "60": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset += write(n);\n        offset = fill(offset, -16, ' ');        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "61": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(offset, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "62": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset += fill(n, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "63": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, -16, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "64": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(-16, n, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "65": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = write(n, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "66": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(archiveOffset, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "67": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(entryOffset, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "68": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\noffset = fill(n, -16, -16, -16, -16);\n        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "69": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\nreturn;\n        offset = fill(offset, -16, ' ');        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }",
          "70": "    private long writeEntryHeader( final ArArchiveEntry pEntry ) throws IOException {\n\n        long offset = 0;\n\n        final String n = pEntry.getName();\n        if (n.length() > 16) {\n            throw new IOException(\"filename too long\");\n        }\n        offset += write(n);\n\n        offset = fill(offset, -16, ' ');        final String m = \"\" + (pEntry.getLastModified() / 1000);\n        if (m.length() > 12) {\n            throw new IOException(\"modified too long\");\n        }\n        offset += write(m);\n\n        offset = fill(offset, 28, ' ');\n        final String u = \"\" + pEntry.getUserId();\n        if (u.length() > 6) {\n            throw new IOException(\"userid too long\");\n        }\n        offset += write(u);\n\n        offset = fill(offset, 34, ' ');\n        final String g = \"\" + pEntry.getGroupId();\n        if (g.length() > 6) {\n            throw new IOException(\"groupid too long\");\n        }\n        offset += write(g);\n\n        offset = fill(offset, 40, ' ');\n        final String fm = \"\" + Integer.toString(pEntry.getMode(), 8);\n        if (fm.length() > 8) {\n            throw new IOException(\"filemode too long\");\n        }\n        offset += write(fm);\n\n        offset = fill(offset, 48, ' ');\n        final String s = \"\" + pEntry.getLength();\n        if (s.length() > 10) {\n            throw new IOException(\"size too long\");\n        }\n        offset += write(s);\n\n        offset = fill(offset, 58, ' ');\n\n        offset += write(\"`\\012\");\n\n        return offset;\n    }"
}