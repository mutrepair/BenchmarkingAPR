{
          "0": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line <= nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "1": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line >= nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "2": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "3": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line > nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "4": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "5": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((UNMAPPED < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "6": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((id < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "7": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((lastLine < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "8": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((lastId < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "9": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((col < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "10": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line == nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "11": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < nextCol)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "12": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "13": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nreset();\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "14": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nappendLineMappings();\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "15": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nopenLine();\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "16": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\ncloseLine();\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "17": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((v < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "18": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((m < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "19": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(( < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "20": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line != nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "21": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol != null)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "22": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine < (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "23": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line - nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "24": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol == null)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "25": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((endPosition < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "26": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol == 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "27": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine < line)){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "28": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(nextLine){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "29": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < v)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "30": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((UNMAPPED.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "31": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((id.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "32": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((lastLine.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "33": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((lastId.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "34": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "35": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((col.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "36": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((prepMappings().line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "37": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((-nextLine < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "38": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(nextCol){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "39": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < m)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "40": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < )){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "41": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "42": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "43": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine < line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "44": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol != 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "45": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nnextCol++;\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "46": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol == null)){\nreturn;\n}      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "47": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol < 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "48": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol > 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "49": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine > (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "50": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine < 0))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "51": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((-line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "52": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < nextLine)){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "53": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine != null)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "54": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line >> nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "55": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line >>> nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "56": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nnextCol = nextCol;\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "57": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(!nextCol){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "58": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol == 0)){\nreturn;\n}      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "59": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nreturn;\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "60": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line != null)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "61": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine > line)){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "62": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(v){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "63": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((nextLine < line) || (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "64": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine <= line)){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "65": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nvisit(v, m, nextLine, nextCol);\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "66": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line || nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "67": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((v.line < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "68": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((nextLine < 0) || (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "69": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol >= 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "70": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((line < line)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "71": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine < m))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "72": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) && (nextLine < line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "73": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine > line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "74": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine > 0))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "75": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(( < nextLine)){        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "76": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine <= line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "77": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) && (nextLine < 0))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "78": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((nextLine > line) || (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "79": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine <= 0))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "80": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((nextLine > 0) || (line < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "81": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextCol <= 0)){\n      if (line < nextLine) {        visit(v, m, nextLine, nextCol);\n      }\n}\n    }",
          "82": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) && (nextLine > 0))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "83": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine < nextLine))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "84": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) && (nextLine > line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "85": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif((nextLine < (line - line))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "86": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) && (nextLine < m))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }",
          "87": "    private void maybeVisit(MappingVisitor v, Mapping m) throws IOException {\n      int nextLine = getAdjustedLine(m.endPosition);\n      int nextCol = getAdjustedCol(m.endPosition);\n      // If this anything remaining in this mapping beyond the\n      // current line and column position, write it out now.\nif(((line < nextLine) || (nextLine < v))){\n        visit(v, m, nextLine, nextCol);\n      }\n    }"
}