{
          "0": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(false){            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "1": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(true){            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "2": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "3": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nreturn false;        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "4": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nbreak;\n        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "5": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nreturn;\n        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "6": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(obj){\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "7": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(alpha){\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "8": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(-false){            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "9": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif((obj == null)){\nreturn false;}        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "10": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif(this.alpha){\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "11": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nif((obj != null)){\nreturn false;}        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "12": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\ncontinue;\n        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "13": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nbreak;\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "14": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nthis.obj = false;\n        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "15": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nthis.obj = true;\n        if (true) {            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }",
          "16": "    public boolean equals(Object obj) {\n        if (obj == this) {\n            return true;\n        }\n        if (!(obj instanceof Marker)) {\n            return false;\n        }\n        Marker that = (Marker) obj;\n        if (!PaintUtilities.equal(this.paint, that.paint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.stroke, that.stroke)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.outlinePaint, that.outlinePaint)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.outlineStroke, that.outlineStroke)) {\n            return false;\n        }\n        if (this.alpha != that.alpha) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.label, that.label)) {\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelFont, that.labelFont)) {\n            return false;\n        }\n        if (!PaintUtilities.equal(this.labelPaint, that.labelPaint)) {\n            return false;\n        }\n        if (this.labelAnchor != that.labelAnchor) {\n            return false;\n        }\nreturn;\n            return false;\n        }\n        if (!ObjectUtilities.equal(this.labelOffset, that.labelOffset)) {\n            return false;\n        }\n        if (!this.labelOffsetType.equals(that.labelOffsetType)) {\n            return false;\n        }\n        return true;\n    }"
}