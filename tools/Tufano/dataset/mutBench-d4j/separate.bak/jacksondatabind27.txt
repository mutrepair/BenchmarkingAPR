protected TYPE_1 METHOD_1 ( TYPE_2 p , TYPE_3 VAR_1 ) throws TYPE_4 { final TYPE_5 VAR_2 = VAR_3 . start ( ) ; final TYPE_6 VAR_4 = VAR_5 ; TYPE_7 buffer = VAR_4 . METHOD_2 ( p , VAR_1 , VAR_6 ) ; TYPE_8 VAR_7 = new TYPE_8 ( p ) ; VAR_7 . METHOD_3 ( ) ; TYPE_9 t = p . METHOD_4 ( ) ; for ( ; t == VAR_8 ; t = p . METHOD_5 ( ) ) { String VAR_9 = p . METHOD_6 ( ) ; p . METHOD_5 ( ) ; TYPE_10 VAR_10 = VAR_4 . METHOD_7 ( VAR_9 ) ; if ( VAR_10 != null ) { if ( VAR_2 . METHOD_8 ( p , VAR_1 , VAR_9 , buffer ) ) { ; } else { if ( buffer . METHOD_9 ( VAR_10 , METHOD_10 ( p , VAR_1 , VAR_10 ) ) ) { t = p . METHOD_5 ( ) ; TYPE_1 VAR_11 ; try { VAR_11 = VAR_4 . build ( VAR_1 , buffer ) ; } catch ( TYPE_11 VAR_12 ) { METHOD_11 ( VAR_12 , VAR_13 . METHOD_12 ( ) , VAR_9 , VAR_1 ) ; continue ; } while ( t == VAR_8 ) { p . METHOD_5 ( ) ; VAR_7 . METHOD_13 ( p ) ; t = p . METHOD_5 ( ) ; } if ( VAR_11 . getClass ( ) != VAR_13 . METHOD_12 ( ) ) { throw VAR_1 . METHOD_14 ( STRING_1 ) ; } return VAR_2 . METHOD_15 ( p , VAR_1 , VAR_11 ) ; } } continue ; } if ( buffer . METHOD_16 ( VAR_9 ) ) { continue ; } TYPE_10 VAR_14 = VAR_15 . METHOD_17 ( VAR_9 ) ; if ( VAR_14 != null ) { buffer . METHOD_18 ( VAR_14 , VAR_14 . METHOD_19 ( p , VAR_1 ) ) ; continue ; } if ( VAR_2 . METHOD_8 ( p , VAR_1 , VAR_9 , null ) ) { continue ; } if ( VAR_16 != null && VAR_16 . contains ( VAR_9 ) ) { METHOD_20 ( p , VAR_1 , METHOD_21 ( ) , VAR_9 ) ; continue ; } if ( VAR_17 != null ) { buffer . METHOD_22 ( VAR_17 , VAR_9 , VAR_17 . METHOD_19 ( p , VAR_1 ) ) ; } } try { return VAR_2 . METHOD_15 ( p , VAR_1 , buffer , VAR_4 ) ; } catch ( TYPE_11 VAR_12 ) { METHOD_23 ( VAR_12 , VAR_1 ) ; return null ; } }