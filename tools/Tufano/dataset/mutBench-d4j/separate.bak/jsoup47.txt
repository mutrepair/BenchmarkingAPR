static void METHOD_1 ( TYPE_1 VAR_1 , String string , TYPE_2 out , boolean VAR_2 , boolean VAR_3 , boolean VAR_4 ) { boolean VAR_5 = false ; boolean VAR_6 = false ; final TYPE_3 VAR_7 = out . METHOD_2 ( ) ; final TYPE_4 VAR_8 = out . METHOD_3 ( ) ; final TYPE_5 VAR_9 = TYPE_5 . METHOD_4 ( VAR_8 . METHOD_5 ( ) . name ( ) ) ; final TYPE_6 < TYPE_7 , String > VAR_10 = VAR_7 . METHOD_6 ( ) ; final int length = string . length ( ) ; int VAR_11 ; for ( int offset = 0 ; offset < length ; offset += TYPE_7 . METHOD_7 ( VAR_11 ) ) { VAR_11 = string . METHOD_8 ( offset ) ; if ( VAR_3 ) { if ( TYPE_8 . METHOD_9 ( VAR_11 ) ) { if ( ( VAR_4 && ! VAR_6 ) || VAR_5 ) continue ; VAR_1 . append ( CHAR_1 ) ; VAR_5 = true ; continue ; } else { VAR_5 = false ; VAR_6 = true ; } } if ( VAR_11 < VAR_12 ) { final char c = ( char ) VAR_11 ; switch ( c ) { case CHAR_2 : VAR_1 . append ( STRING_1 ) ; break ; case INT_1 : if ( VAR_7 != VAR_13 ) VAR_1 . append ( STRING_2 ) ; else VAR_1 . append ( STRING_3 ) ; break ; case CHAR_3 : if ( ! VAR_2 ) VAR_1 . append ( STRING_4 ) ; else VAR_1 . append ( c ) ; break ; case CHAR_4 : if ( ! VAR_2 ) VAR_1 . append ( STRING_5 ) ; else VAR_1 . append ( c ) ; break ; case CHAR_5 : if ( VAR_2 ) VAR_1 . append ( STRING_6 ) ; else VAR_1 . append ( c ) ; break ; default : if ( METHOD_10 ( VAR_9 , c , VAR_8 ) ) VAR_1 . append ( c ) ; else if ( VAR_10 . METHOD_11 ( c ) ) VAR_1 . append ( CHAR_2 ) . append ( VAR_10 . get ( c ) ) . append ( CHAR_6 ) ; else VAR_1 . append ( STRING_7 ) . append ( TYPE_9 . METHOD_12 ( VAR_11 ) ) . append ( CHAR_6 ) ; } } else { final String c = new String ( TYPE_7 . METHOD_13 ( VAR_11 ) ) ; if ( VAR_8 . METHOD_10 ( c ) ) VAR_1 . append ( c ) ; else VAR_1 . append ( STRING_7 ) . append ( TYPE_9 . METHOD_12 ( VAR_11 ) ) . append ( CHAR_6 ) ; } } }