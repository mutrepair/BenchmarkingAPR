private int METHOD_1 ( ) throws TYPE_1 { char [ ] buffer = this . buffer ; int p = VAR_1 ; int VAR_2 = VAR_3 ; long value = 0 ; boolean VAR_4 = false ; boolean VAR_5 = true ; int VAR_6 = VAR_7 ; int i = 0 ; VAR_8 : for ( ; true ; i ++ ) { if ( p + i == VAR_2 ) { if ( i == buffer . length ) { return VAR_9 ; } if ( ! METHOD_2 ( i + 1 ) ) { break ; } p = VAR_1 ; VAR_2 = VAR_3 ; } char c = buffer [ p + i ] ; switch ( c ) { case CHAR_1 : if ( VAR_6 == VAR_7 ) { VAR_4 = true ; VAR_6 = VAR_10 ; continue ; } else if ( VAR_6 == VAR_11 ) { VAR_6 = VAR_12 ; continue ; } return VAR_9 ; case CHAR_2 : if ( VAR_6 == VAR_11 ) { VAR_6 = VAR_12 ; continue ; } return VAR_9 ; case CHAR_3 : case CHAR_4 : if ( VAR_6 == VAR_13 || VAR_6 == VAR_14 ) { VAR_6 = VAR_11 ; continue ; } return VAR_9 ; case CHAR_5 : if ( VAR_6 == VAR_13 ) { VAR_6 = VAR_15 ; continue ; } return VAR_9 ; default : if ( c < CHAR_6 || c > CHAR_7 ) { if ( ! METHOD_3 ( c ) ) { break VAR_8 ; } return VAR_9 ; } if ( VAR_6 == VAR_10 || VAR_6 == VAR_7 ) { value = - ( c - CHAR_6 ) ; VAR_6 = VAR_13 ; } else if ( VAR_6 == VAR_13 ) { if ( value == 0 ) { return VAR_9 ; } long VAR_16 = value * INT_1 - ( c - CHAR_6 ) ; VAR_5 &= value > VAR_17 || ( value == VAR_17 && VAR_16 < value ) ; value = VAR_16 ; } else if ( VAR_6 == VAR_15 ) { VAR_6 = VAR_14 ; } else if ( VAR_6 == VAR_11 || VAR_6 == VAR_12 ) { VAR_6 = VAR_18 ; } } } if ( VAR_6 == VAR_13 && VAR_5 && ( value != VAR_19 || VAR_4 ) ) { VAR_20 = VAR_4 ? value : - value ; VAR_1 += i ; return VAR_21 = VAR_22 ; } else if ( VAR_6 == VAR_13 || VAR_6 == VAR_14 || VAR_6 == VAR_18 ) { VAR_23 = i ; return VAR_21 = VAR_24 ; } else { return VAR_9 ; } }