void METHOD_1 ( byte [ ] VAR_1 , int VAR_2 , int VAR_3 ) { if ( VAR_4 ) { return ; } if ( VAR_3 < 0 ) { VAR_4 = true ; if ( buf == null || buf . length - VAR_5 < VAR_6 ) { METHOD_2 ( ) ; } switch ( VAR_7 ) { case 1 : buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_1 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ ( x < < INT_2 ) & VAR_9 ] ; if ( VAR_8 == VAR_10 ) { buf [ VAR_5 ++ ] = VAR_11 ; buf [ VAR_5 ++ ] = VAR_11 ; } break ; case INT_1 : buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_3 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_2 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ ( x < < INT_1 ) & VAR_9 ] ; if ( VAR_8 == VAR_10 ) { buf [ VAR_5 ++ ] = VAR_11 ; } break ; } if ( VAR_12 > 0 ) { TYPE_1 . METHOD_3 ( VAR_13 , 0 , buf , VAR_5 , VAR_13 . length ) ; VAR_5 += VAR_13 . length ; } } else { for ( int i = 0 ; i < VAR_3 ; i ++ ) { if ( buf == null || buf . length - VAR_5 < VAR_6 ) { METHOD_2 ( ) ; } VAR_7 = ( ++ VAR_7 ) % INT_4 ; int b = VAR_1 [ VAR_2 ++ ] ; if ( b < 0 ) { b += INT_5 ; } x = ( x < < INT_6 ) + b ; if ( 0 == VAR_7 ) { buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_7 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_8 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ ( x > > INT_9 ) & VAR_9 ] ; buf [ VAR_5 ++ ] = VAR_8 [ x & VAR_9 ] ; VAR_14 += INT_2 ; if ( VAR_12 > 0 && VAR_12 <= VAR_14 ) { TYPE_1 . METHOD_3 ( VAR_13 , 0 , buf , VAR_5 , VAR_13 . length ) ; VAR_5 += VAR_13 . length ; VAR_14 = 0 ; } } } } }