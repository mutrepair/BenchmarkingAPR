private final int METHOD_1 ( long VAR_1 , long VAR_2 ) { if ( ( ( VAR_2 &= VAR_1 ) ) == 0L ) return METHOD_2 ( INT_1 , VAR_1 , 0L ) ; try { VAR_3 = VAR_4 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_5 ) { METHOD_4 ( INT_2 , VAR_2 , 0L ) ; return INT_3 ; } switch ( VAR_3 ) { case INT_4 : if ( ( VAR_2 ^ INT_5 ) != 0L ) return METHOD_5 ( INT_3 , INT_6 ) ; return METHOD_6 ( VAR_2 , INT_7 ) ; case INT_8 : return METHOD_6 ( VAR_2 , INT_9 ) ; case INT_10 : return METHOD_6 ( VAR_2 , INT_11 ) ; default : break ; } return METHOD_2 ( INT_2 , VAR_2 , 0L ) ; }