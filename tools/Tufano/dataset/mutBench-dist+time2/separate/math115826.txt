private static void METHOD_1 ( double x , double result [ ] ) { long VAR_1 = TYPE_1 . METHOD_2 ( x ) ; int VAR_2 = ( int ) ( ( VAR_1 > > INT_1 ) & INT_2 ) - INT_3 ; VAR_1 &= INT_4 ; VAR_1 |= INT_5 ; VAR_2 ++ ; VAR_1 <<= INT_6 ; long VAR_3 ; long VAR_4 ; long VAR_5 ; int VAR_6 = VAR_2 > > INT_7 ; int VAR_7 = VAR_2 - ( VAR_6 < < INT_7 ) ; if ( VAR_7 != 0 ) { VAR_3 = ( VAR_6 == 0 ) ? 0 : ( VAR_8 [ VAR_6 - 1 ] < < VAR_7 ) ; VAR_3 |= VAR_8 [ VAR_6 ] > > > ( INT_8 - VAR_7 ) ; VAR_4 = ( VAR_8 [ VAR_6 ] < < VAR_7 ) | ( VAR_8 [ VAR_6 + 1 ] > > > ( INT_8 - VAR_7 ) ) ; VAR_5 = ( VAR_8 [ VAR_6 + 1 ] < < VAR_7 ) | ( VAR_8 [ VAR_6 + INT_9 ] > > > ( INT_8 - VAR_7 ) ) ; } else { VAR_3 = ( VAR_6 == 0 ) ? 0 : VAR_8 [ VAR_6 - 1 ] ; VAR_4 = VAR_8 [ VAR_6 ] ; VAR_5 = VAR_8 [ VAR_6 + 1 ] ; } long a = VAR_1 > > > INT_10 ; long b = VAR_1 & INT_11 ; long c = VAR_4 > > > INT_10 ; long VAR_9 = VAR_4 & INT_11 ; long VAR_10 = a * c ; long VAR_11 = b * VAR_9 ; long VAR_12 = b * c ; long VAR_13 = a * VAR_9 ; long VAR_14 = VAR_11 + ( VAR_13 < < INT_10 ) ; long VAR_15 = VAR_10 + ( VAR_13 > > > INT_10 ) ; boolean VAR_16 = ( VAR_11 & INT_12 ) != 0 ; boolean VAR_17 = ( VAR_13 & INT_13 ) != 0 ; boolean VAR_18 = ( VAR_14 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_15 ++ ; } VAR_16 = ( VAR_14 & INT_12 ) != 0 ; VAR_17 = ( VAR_12 & INT_13 ) != 0 ; VAR_14 = VAR_14 + ( VAR_12 < < INT_10 ) ; VAR_15 = VAR_15 + ( VAR_12 > > > INT_10 ) ; VAR_18 = ( VAR_14 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_15 ++ ; } c = VAR_5 > > > INT_10 ; VAR_9 = VAR_5 & INT_11 ; VAR_10 = a * c ; VAR_12 = b * c ; VAR_13 = a * VAR_9 ; VAR_10 = VAR_10 + ( ( VAR_12 + VAR_13 ) > > > INT_10 ) ; VAR_16 = ( VAR_14 & INT_12 ) != 0 ; VAR_17 = ( VAR_10 & INT_12 ) != 0 ; VAR_14 += VAR_10 ; VAR_18 = ( VAR_14 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_15 ++ ; } c = VAR_3 > > > INT_10 ; VAR_9 = VAR_3 & INT_11 ; VAR_11 = b * VAR_9 ; VAR_12 = b * c ; VAR_13 = a * VAR_9 ; VAR_15 += VAR_11 + ( ( VAR_12 + VAR_13 ) < < INT_10 ) ; int VAR_19 = ( int ) ( VAR_15 > > > INT_14 ) ; VAR_15 <<= INT_9 ; VAR_15 |= VAR_14 > > > INT_14 ; VAR_14 <<= INT_9 ; a = VAR_15 > > > INT_10 ; b = VAR_15 & INT_11 ; c = VAR_20 [ 0 ] > > > INT_10 ; VAR_9 = VAR_20 [ 0 ] & INT_11 ; VAR_10 = a * c ; VAR_11 = b * VAR_9 ; VAR_12 = b * c ; VAR_13 = a * VAR_9 ; long VAR_21 = VAR_11 + ( VAR_13 < < INT_10 ) ; long VAR_22 = VAR_10 + ( VAR_13 > > > INT_10 ) ; VAR_16 = ( VAR_11 & INT_12 ) != 0 ; VAR_17 = ( VAR_13 & INT_13 ) != 0 ; VAR_18 = ( VAR_21 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_22 ++ ; } VAR_16 = ( VAR_21 & INT_12 ) != 0 ; VAR_17 = ( VAR_12 & INT_13 ) != 0 ; VAR_21 = VAR_21 + ( VAR_12 < < INT_10 ) ; VAR_22 = VAR_22 + ( VAR_12 > > > INT_10 ) ; VAR_18 = ( VAR_21 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_22 ++ ; } c = VAR_20 [ 1 ] > > > INT_10 ; VAR_9 = VAR_20 [ 1 ] & INT_11 ; VAR_10 = a * c ; VAR_12 = b * c ; VAR_13 = a * VAR_9 ; VAR_10 = VAR_10 + ( ( VAR_12 + VAR_13 ) > > > INT_10 ) ; VAR_16 = ( VAR_21 & INT_12 ) != 0 ; VAR_17 = ( VAR_10 & INT_12 ) != 0 ; VAR_21 += VAR_10 ; VAR_18 = ( VAR_21 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_22 ++ ; } a = VAR_14 > > > INT_10 ; b = VAR_14 & INT_11 ; c = VAR_20 [ 0 ] > > > INT_10 ; VAR_9 = VAR_20 [ 0 ] & INT_11 ; VAR_10 = a * c ; VAR_12 = b * c ; VAR_13 = a * VAR_9 ; VAR_10 = VAR_10 + ( ( VAR_12 + VAR_13 ) > > > INT_10 ) ; VAR_16 = ( VAR_21 & INT_12 ) != 0 ; VAR_17 = ( VAR_10 & INT_12 ) != 0 ; VAR_21 += VAR_10 ; VAR_18 = ( VAR_21 & INT_12 ) != 0 ; if ( ( VAR_16 && VAR_17 ) || ( ( VAR_16 || VAR_17 ) && ! VAR_18 ) ) { VAR_22 ++ ; } double VAR_23 = ( VAR_22 < < INT_15 ) / VAR_24 ; double VAR_25 = ( ( ( VAR_22 & INT_16 ) < < INT_17 ) + ( VAR_21 > > > INT_18 ) ) / VAR_24 / VAR_24 ; double VAR_26 = VAR_23 + VAR_25 ; double VAR_27 = - ( VAR_26 - VAR_23 - VAR_25 ) ; result [ 0 ] = VAR_19 ; result [ 1 ] = VAR_26 * FLOAT_1 ; result [ INT_9 ] = VAR_27 * FLOAT_1 ; }