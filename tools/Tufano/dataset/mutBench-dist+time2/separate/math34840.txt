public TYPE_1 [ ] METHOD_1 ( final TYPE_2 VAR_1 ) throws TYPE_3 { if ( VAR_1 == VAR_2 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 0 , 1 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 1 , 0 , 0 ) ) ; if ( ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_3 . METHOD_5 ( ) ) , VAR_4 . METHOD_5 ( ) . METHOD_11 ( ) , VAR_4 . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_4 . METHOD_12 ( ) ) ) ; } else if ( VAR_1 == VAR_5 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 1 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 1 , 0 , 0 ) ) ; if ( ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_5 ( ) . METHOD_10 ( VAR_3 . METHOD_8 ( ) ) , VAR_4 . METHOD_8 ( ) . METHOD_11 ( ) . METHOD_9 ( ) , VAR_4 . METHOD_5 ( ) . METHOD_10 ( VAR_4 . METHOD_12 ( ) ) ) ; } else if ( VAR_1 == VAR_6 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 0 , 1 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 1 , 0 ) ) ; if ( ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_12 ( ) . METHOD_10 ( VAR_3 . METHOD_5 ( ) ) , VAR_4 . METHOD_5 ( ) . METHOD_11 ( ) . METHOD_9 ( ) , VAR_4 . METHOD_12 ( ) . METHOD_10 ( VAR_4 . METHOD_8 ( ) ) ) ; } else if ( VAR_1 == VAR_7 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 1 , 0 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 1 , 0 ) ) ; if ( ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_5 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_3 . METHOD_12 ( ) ) , VAR_4 . METHOD_12 ( ) . METHOD_11 ( ) , VAR_4 . METHOD_5 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_4 . METHOD_8 ( ) ) ) ; } else if ( VAR_1 == VAR_8 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 1 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 0 , 1 ) ) ; if ( ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_12 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_3 . METHOD_8 ( ) ) , VAR_4 . METHOD_8 ( ) . METHOD_11 ( ) , VAR_4 . METHOD_12 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_4 . METHOD_5 ( ) ) ) ; } else if ( VAR_1 == VAR_9 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 1 , 0 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 0 , 1 ) ) ; if ( ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) < + FLOAT_1 ) || ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( true ) ; } return METHOD_7 ( VAR_3 . METHOD_8 ( ) . METHOD_10 ( VAR_3 . METHOD_12 ( ) ) , VAR_4 . METHOD_12 ( ) . METHOD_11 ( ) . METHOD_9 ( ) , VAR_4 . METHOD_8 ( ) . METHOD_10 ( VAR_4 . METHOD_5 ( ) ) ) ; } else if ( VAR_1 == VAR_10 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 1 , 0 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 1 , 0 , 0 ) ) ; if ( ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_8 ( ) . METHOD_10 ( VAR_3 . METHOD_5 ( ) . METHOD_9 ( ) ) , VAR_4 . METHOD_12 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_8 ( ) . METHOD_10 ( VAR_4 . METHOD_5 ( ) ) ) ; } else if ( VAR_1 == VAR_11 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 1 , 0 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 1 , 0 , 0 ) ) ; if ( ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_12 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_5 ( ) . METHOD_10 ( VAR_3 . METHOD_8 ( ) ) , VAR_4 . METHOD_12 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_5 ( ) . METHOD_10 ( VAR_4 . METHOD_8 ( ) . METHOD_9 ( ) ) ) ; } else if ( VAR_1 == VAR_12 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 1 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 1 , 0 ) ) ; if ( ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_12 ( ) . METHOD_10 ( VAR_3 . METHOD_5 ( ) ) , VAR_4 . METHOD_8 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_12 ( ) . METHOD_10 ( VAR_4 . METHOD_5 ( ) . METHOD_9 ( ) ) ) ; } else if ( VAR_1 == VAR_13 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 1 , 0 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 1 , 0 ) ) ; if ( ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_8 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_5 ( ) . METHOD_10 ( VAR_3 . METHOD_12 ( ) . METHOD_9 ( ) ) , VAR_4 . METHOD_8 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_5 ( ) . METHOD_10 ( VAR_4 . METHOD_12 ( ) ) ) ; } else if ( VAR_1 == VAR_14 ) { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 0 , 1 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 0 , 1 ) ) ; if ( ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_12 ( ) . METHOD_10 ( VAR_3 . METHOD_8 ( ) . METHOD_9 ( ) ) , VAR_4 . METHOD_5 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_12 ( ) . METHOD_10 ( VAR_4 . METHOD_8 ( ) ) ) ; } else { final TYPE_4 < TYPE_1 > VAR_3 = METHOD_2 ( METHOD_3 ( 0 , 0 , 1 ) ) ; final TYPE_4 < TYPE_1 > VAR_4 = METHOD_4 ( METHOD_3 ( 0 , 0 , 1 ) ) ; if ( ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) < - FLOAT_1 ) || ( VAR_4 . METHOD_5 ( ) . METHOD_6 ( ) > FLOAT_1 ) ) { throw new TYPE_3 ( false ) ; } return METHOD_7 ( VAR_3 . METHOD_8 ( ) . METHOD_10 ( VAR_3 . METHOD_12 ( ) ) , VAR_4 . METHOD_5 ( ) . METHOD_13 ( ) , VAR_4 . METHOD_8 ( ) . METHOD_10 ( VAR_4 . METHOD_12 ( ) . METHOD_9 ( ) ) ) ; } }