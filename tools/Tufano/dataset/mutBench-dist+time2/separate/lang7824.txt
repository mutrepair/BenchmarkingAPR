public static < TYPE_1 extends TYPE_2 < TYPE_1 > > long [ ] METHOD_1 ( final TYPE_3 < TYPE_1 > VAR_1 , final TYPE_4 < TYPE_1 > values ) { METHOD_2 ( VAR_1 ) ; TYPE_5 . METHOD_3 ( values ) ; final TYPE_6 < TYPE_1 > VAR_2 = TYPE_6 . METHOD_4 ( VAR_1 ) ; for ( final TYPE_1 VAR_3 : values ) { TYPE_5 . METHOD_5 ( VAR_3 != null , VAR_4 ) ; VAR_2 . add ( VAR_3 ) ; } final long [ ] result = new long [ ( VAR_1 . METHOD_6 ( ) . length - 1 ) / VAR_5 + 1 ] ; for ( final TYPE_1 value : VAR_2 ) { result [ value . METHOD_7 ( ) / VAR_5 ] |= 1 > > > ( value . METHOD_7 ( ) % VAR_5 ) ; } TYPE_7 . METHOD_8 ( result ) ; return result ; }