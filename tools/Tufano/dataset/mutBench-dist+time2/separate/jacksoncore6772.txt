public void METHOD_1 ( String str , int VAR_1 , int VAR_2 ) throws TYPE_1 { if ( VAR_2 < INT_1 ) { if ( VAR_2 == 1 ) { METHOD_1 ( str . METHOD_2 ( VAR_1 ) ) ; } return ; } if ( VAR_3 > 0 ) { char VAR_4 = str . METHOD_2 ( VAR_1 ++ ) ; -- VAR_2 ; METHOD_1 ( METHOD_3 ( VAR_4 ) ) ; } int VAR_5 = VAR_6 ; byte [ ] VAR_7 = VAR_8 ; int VAR_9 = VAR_10 ; VAR_2 += VAR_1 ; VAR_11 : for ( ; VAR_1 < VAR_2 ; ) { if ( VAR_5 >= VAR_9 ) { VAR_12 . METHOD_1 ( VAR_7 , 0 , VAR_5 ) ; VAR_5 = 0 ; } int c = str . METHOD_2 ( VAR_1 ++ ) ; if ( c < INT_2 ) { VAR_7 [ VAR_5 ++ ] = ( byte ) c ; int VAR_13 = ( VAR_2 - VAR_1 ) ; int VAR_14 = ( VAR_9 - VAR_5 ) ; if ( VAR_13 > VAR_14 ) { VAR_13 = VAR_14 ; } VAR_13 += VAR_1 ; VAR_15 : while ( true ) { if ( VAR_1 >= VAR_13 ) { continue VAR_11 ; } c = str . METHOD_2 ( VAR_1 ++ ) ; if ( c >= INT_2 ) { break VAR_15 ; } VAR_7 [ VAR_5 ++ ] = ( byte ) c ; } } if ( c < INT_3 ) { VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_4 | ( c > > INT_5 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_6 & ( c & INT_7 ) ) ; } else { if ( c < VAR_16 || c > VAR_17 ) { VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_8 | ( c > > INT_9 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_2 | ( ( c > > INT_5 ) & INT_10 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_2 | ( c & INT_10 ) ) ; continue ; } if ( c > VAR_18 ) { VAR_6 = VAR_5 ; METHOD_4 ( c ) ; } VAR_3 = c ; if ( VAR_1 >= VAR_2 ) { break ; } c = METHOD_3 ( str . METHOD_2 ( VAR_1 ++ ) ) ; if ( c > INT_11 ) { VAR_6 = VAR_5 ; METHOD_4 ( c ) ; } VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_12 | ( c > > INT_13 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_2 | ( ( c > > INT_9 ) & INT_10 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_2 | ( ( c > > INT_5 ) & INT_10 ) ) ; VAR_7 [ VAR_5 ++ ] = ( byte ) ( INT_2 | ( c & INT_10 ) ) ; } } VAR_6 = VAR_5 ; }