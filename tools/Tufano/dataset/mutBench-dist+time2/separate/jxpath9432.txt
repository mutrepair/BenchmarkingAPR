private final int METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , long VAR_4 ) { if ( ( ( VAR_2 &= VAR_1 ) | ( VAR_4 &= VAR_3 ) ) == 0L ) return METHOD_2 ( 0 , VAR_1 , VAR_3 ) ; try { VAR_5 = VAR_6 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_7 ) { METHOD_4 ( 1 , VAR_2 , VAR_4 ) ; return INT_1 ; } switch ( VAR_5 ) { case INT_2 : return METHOD_5 ( VAR_2 , INT_3 , VAR_4 , INT_4 ) ; case INT_5 : return METHOD_5 ( VAR_2 , INT_6 , VAR_4 , 0L ) ; case INT_7 : return METHOD_5 ( VAR_2 , INT_8 , VAR_4 , 0L ) ; case INT_9 : if ( ( VAR_2 ^ INT_10 ) != 0L ) return METHOD_6 ( INT_1 , INT_11 , INT_12 ) ; else if ( ( VAR_2 & INT_13 ) != 0L ) return METHOD_6 ( INT_1 , INT_14 , INT_12 ) ; return METHOD_5 ( VAR_2 , INT_15 , VAR_4 , 0L ) ; case INT_16 : return METHOD_5 ( VAR_2 , INT_17 , VAR_4 , 0L ) ; case INT_18 : return METHOD_5 ( VAR_2 , INT_19 , VAR_4 , INT_20 ) ; case INT_21 : return METHOD_5 ( VAR_2 , INT_22 , VAR_4 , INT_23 ) ; case INT_24 : if ( ( VAR_4 & INT_25 ) != 0L ) return METHOD_6 ( INT_1 , INT_26 , INT_12 ) ; return METHOD_5 ( VAR_2 , INT_27 , VAR_4 , INT_28 ) ; case INT_29 : return METHOD_5 ( VAR_2 , INT_30 , VAR_4 , INT_31 ) ; case INT_32 : return METHOD_5 ( VAR_2 , INT_33 , VAR_4 , INT_34 ) ; case INT_35 : return METHOD_5 ( VAR_2 , INT_36 , VAR_4 , INT_37 ) ; case INT_38 : return METHOD_5 ( VAR_2 , INT_39 , VAR_4 , 0L ) ; case INT_40 : if ( ( VAR_4 & INT_41 ) != 0L ) return METHOD_6 ( INT_1 , INT_42 , INT_12 ) ; return METHOD_5 ( VAR_2 , INT_43 , VAR_4 , 0L ) ; case INT_44 : return METHOD_5 ( VAR_2 , INT_45 , VAR_4 , INT_46 ) ; case INT_47 : if ( ( VAR_2 & INT_48 ) != 0L ) return METHOD_6 ( INT_1 , INT_49 , INT_12 ) ; break ; case INT_50 : return METHOD_5 ( VAR_2 , INT_51 , VAR_4 , 0L ) ; case INT_52 : if ( ( VAR_2 & INT_53 ) != 0L ) return METHOD_6 ( INT_1 , INT_54 , INT_12 ) ; break ; default : break ; } return METHOD_2 ( 1 , VAR_2 , VAR_4 ) ; }