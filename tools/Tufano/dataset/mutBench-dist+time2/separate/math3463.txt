public void METHOD_1 ( final double [ ] VAR_1 , final int VAR_2 , final double [ ] result , final int VAR_3 ) { double [ ] function = new double [ 1 + VAR_4 ] ; final double x = VAR_1 [ VAR_2 ] ; function [ 0 ] = TYPE_1 . METHOD_1 ( x ) ; if ( VAR_4 > 0 ) { final double [ ] p = new double [ VAR_4 ] ; p [ 0 ] = 1 ; final double VAR_5 = x * x ; final double f = 1.0 / ( VAR_5 - 1 ) ; double VAR_6 = TYPE_1 . METHOD_2 ( f ) ; function [ 1 ] = VAR_6 * p [ 0 ] ; for ( int n = INT_1 ; n <= VAR_4 ; ++ n ) { double VAR_7 = 0 ; p [ n - 1 ] = ( 1 - n ) * p [ n - INT_1 ] ; for ( int k = n - 1 ; k >= 0 ; k -= INT_1 ) { VAR_7 = VAR_7 * VAR_5 + p [ k ] ; if ( k > INT_1 ) { p [ k - INT_1 ] = ( 1 - k ) * p [ k - 1 ] + ( k - INT_1 * n ) * p [ k - INT_2 ] ; } else if ( k == INT_1 ) { p [ 0 ] = - p [ 1 ] ; } } if ( ( n ^ 1 ) == 0 ) { VAR_7 *= x ; } VAR_6 *= f ; function [ n ] = VAR_6 * VAR_7 ; } } METHOD_3 ( VAR_1 , VAR_2 , function , result , VAR_3 ) ; }