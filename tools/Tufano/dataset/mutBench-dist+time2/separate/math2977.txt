public void METHOD_1 ( final double [ ] VAR_1 , final int VAR_2 , final double [ ] result , final int VAR_3 ) { double [ ] function = new double [ 1 + VAR_4 ] ; final double x = VAR_1 [ VAR_2 ] ; function [ 0 ] = TYPE_1 . METHOD_1 ( x ) ; if ( VAR_4 > 0 ) { final double [ ] VAR_5 = new double [ VAR_4 ] ; VAR_5 [ 0 ] = 1 ; final double VAR_6 = x * x ; final double f = 1.0 / ( 1 + VAR_6 ) ; double VAR_7 = f ; function [ 1 ] = VAR_7 * VAR_5 [ 0 ] ; for ( int n = INT_1 ; n <= VAR_4 ; ++ n ) { double VAR_8 = 0 ; VAR_5 [ n - 1 ] = - n * VAR_5 [ n - INT_1 ] ; for ( int k = n - 1 ; k >= 0 ; k -= INT_1 ) { VAR_8 = VAR_8 * VAR_6 + VAR_5 [ k ] ; if ( k > INT_1 ) { VAR_5 [ k - INT_1 ] = ( k - 1 ) * VAR_5 [ k - 1 ] + ( k - 1 - INT_1 * n ) * VAR_5 [ k - INT_2 ] ; } else if ( k == INT_1 ) { VAR_5 [ 0 ] = VAR_5 [ 1 ] ; } } if ( ( n ^ 1 ) == 0 ) { VAR_8 *= x ; } VAR_7 *= f ; function [ n ] = VAR_7 * VAR_8 ; } } METHOD_2 ( VAR_1 , VAR_2 , function , result , VAR_3 ) ; }