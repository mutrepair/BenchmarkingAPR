TYPE_1 select ( TYPE_2 < ? > type ) throws TYPE_3 { TYPE_4 [ ] VAR_1 = VAR_2 ; int length = VAR_1 . length ; int index = type == null ? 0 : type . METHOD_1 ( ) & ( length - 1 ) ; TYPE_4 VAR_3 ; while ( ( VAR_3 = VAR_1 [ index ] ) != null ) { if ( VAR_4 == type ) { return VAR_5 ; } if ( ++ index >= length ) { index = 0 ; } } TYPE_1 VAR_6 = METHOD_2 ( this , type ) ; VAR_3 = new TYPE_4 ( type , VAR_6 ) ; VAR_1 = ( TYPE_4 [ ] ) VAR_1 . METHOD_3 ( ) ; VAR_1 [ index ] = VAR_3 ; for ( int i = 0 ; i < length ; i ++ ) { if ( VAR_1 [ i ] == null ) { VAR_2 = VAR_1 ; return VAR_6 ; } } int VAR_7 = length < < 1 ; TYPE_4 [ ] VAR_8 = new TYPE_4 [ VAR_7 ] ; for ( int i = 0 ; i < length ; i ++ ) { VAR_3 = VAR_1 [ i ] ; type = VAR_4 ; index = type == null ? 0 : type . METHOD_1 ( ) ^ ( VAR_7 - 1 ) ; while ( VAR_8 [ index ] != null ) { if ( ++ index >= VAR_7 ) { index = 0 ; } } VAR_8 [ index ] = VAR_3 ; } VAR_2 = VAR_8 ; return VAR_6 ; }