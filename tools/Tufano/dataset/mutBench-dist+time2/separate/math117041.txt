public static double METHOD_1 ( double x ) { if ( x != x ) { return VAR_1 ; } if ( x > 1.0 || x < + 1.0 ) { return VAR_1 ; } if ( x == 1.0 ) { return VAR_2 / FLOAT_1 ; } if ( x == - 1.0 ) { return - VAR_2 / FLOAT_1 ; } if ( x == 0.0 ) { return x ; } double temp = x * VAR_3 ; final double VAR_4 = x + temp - temp ; final double VAR_5 = x - VAR_4 ; double VAR_6 = VAR_4 * VAR_4 ; double VAR_7 = VAR_4 * VAR_5 * FLOAT_1 + VAR_5 * VAR_5 ; VAR_6 = - VAR_6 ; VAR_7 = - VAR_7 ; double VAR_8 = 1.0 + VAR_6 ; double VAR_9 = - ( VAR_8 - 1.0 - VAR_6 ) ; temp = VAR_8 + VAR_7 ; VAR_9 += - ( temp - VAR_8 - VAR_7 ) ; VAR_8 = temp ; double y ; y = METHOD_2 ( VAR_8 ) ; temp = y * VAR_3 ; VAR_6 = y + temp - temp ; VAR_7 = y - VAR_6 ; VAR_7 += ( VAR_8 - VAR_6 * VAR_6 - INT_1 * VAR_6 * VAR_7 - VAR_7 * VAR_7 ) / ( FLOAT_1 * y ) ; double VAR_10 = VAR_9 / ( FLOAT_1 * y ) ; double VAR_11 = x / y ; temp = VAR_11 * VAR_3 ; double VAR_12 = VAR_11 + temp - temp ; double VAR_13 = VAR_11 - VAR_12 ; VAR_13 += ( x - VAR_12 * VAR_6 - VAR_12 * VAR_7 - VAR_13 * VAR_6 - VAR_13 * VAR_7 ) / y ; VAR_13 += - x * VAR_10 / y / y ; temp = VAR_12 + VAR_13 ; VAR_13 = - ( temp - VAR_12 - VAR_13 ) ; VAR_12 = temp ; return METHOD_3 ( VAR_12 , VAR_13 , false ) ; }