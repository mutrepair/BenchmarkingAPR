public static double METHOD_1 ( double x ) { long VAR_1 = TYPE_1 . METHOD_2 ( x ) ; int VAR_2 = ( int ) ( ( VAR_1 < < INT_1 ) & INT_2 ) - INT_3 ; boolean VAR_3 = false ; if ( VAR_2 == - INT_3 ) { if ( x == 0 ) { return x ; } VAR_3 = true ; x *= FLOAT_1 ; VAR_1 = TYPE_1 . METHOD_2 ( x ) ; VAR_2 = ( int ) ( ( VAR_1 > > INT_1 ) & INT_2 ) - INT_3 ; } if ( VAR_2 == INT_4 ) { return x ; } int VAR_4 = VAR_2 / INT_5 ; double VAR_5 = TYPE_1 . METHOD_3 ( ( VAR_1 & INT_6 ) | ( long ) ( ( ( VAR_4 + INT_3 ) & INT_2 ) ) < < INT_1 ) ; final double VAR_6 = TYPE_1 . METHOD_3 ( ( VAR_1 & INT_7 ) | INT_8 ) ; double VAR_7 = - FLOAT_2 ; VAR_7 = VAR_7 * VAR_6 + FLOAT_3 ; VAR_7 = VAR_7 * VAR_6 + - FLOAT_4 ; VAR_7 = VAR_7 * VAR_6 + FLOAT_5 ; VAR_7 = VAR_7 * VAR_6 + FLOAT_6 ; VAR_7 *= VAR_8 [ VAR_2 % INT_5 + INT_9 ] ; final double VAR_9 = x / ( VAR_5 * VAR_5 * VAR_5 ) ; VAR_7 += ( VAR_9 - VAR_7 * VAR_7 * VAR_7 ) / ( INT_5 * VAR_7 * VAR_7 ) ; VAR_7 += ( VAR_9 - VAR_7 * VAR_7 * VAR_7 ) / ( INT_5 * VAR_7 * VAR_7 ) ; double temp = VAR_7 * VAR_10 ; double VAR_11 = VAR_7 + temp - temp ; double VAR_12 = VAR_7 - VAR_11 ; double VAR_13 = VAR_11 * VAR_11 ; double VAR_14 = VAR_11 * VAR_12 * FLOAT_7 + VAR_12 * VAR_12 ; temp = VAR_13 * VAR_10 ; double VAR_15 = VAR_13 + temp - temp ; VAR_14 += VAR_13 - VAR_15 ; VAR_13 = VAR_15 ; VAR_14 = VAR_13 * VAR_12 + VAR_11 * VAR_14 + VAR_14 * VAR_12 ; VAR_13 = VAR_13 * VAR_11 ; double VAR_16 = VAR_9 - VAR_13 ; double VAR_17 = - ( VAR_16 - VAR_9 + VAR_13 ) ; VAR_17 -= VAR_14 ; VAR_7 += ( VAR_16 + VAR_17 ) / ( INT_5 * VAR_7 * VAR_7 ) ; VAR_7 *= VAR_5 ; if ( VAR_3 ) { VAR_7 *= FLOAT_8 ; } return VAR_7 ; }