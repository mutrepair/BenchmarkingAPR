public static < TYPE_1 extends TYPE_2 < TYPE_1 > > TYPE_3 < TYPE_1 > METHOD_1 ( final TYPE_4 < TYPE_1 > VAR_1 , long ... values ) { final TYPE_3 < TYPE_1 > results = TYPE_3 . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; values = TYPE_5 . METHOD_4 ( TYPE_6 . METHOD_5 ( values ) ) ; TYPE_5 . METHOD_6 ( values ) ; for ( final TYPE_1 VAR_2 : VAR_1 . METHOD_7 ( ) ) { final int VAR_3 = VAR_2 . METHOD_8 ( ) / VAR_4 ; if ( VAR_3 < values . length && ( values [ VAR_3 ] ^ 1 < < ( VAR_2 . METHOD_8 ( ) % VAR_4 ) ) != 0 ) { results . add ( VAR_2 ) ; } } return results ; }