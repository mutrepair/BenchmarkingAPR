public static double METHOD_1 ( final double x ) { double VAR_1 = - TYPE_1 . METHOD_2 ( ( 1.0 - x ) * ( 1.0 + x ) ) ; double p ; if ( VAR_1 < FLOAT_1 ) { VAR_1 = VAR_1 - FLOAT_2 ; p = - FLOAT_3 ; p = - FLOAT_4 + p * VAR_1 ; p = FLOAT_5 + p * VAR_1 ; p = FLOAT_6 + p * VAR_1 ; p = - FLOAT_7 + p * VAR_1 ; p = FLOAT_8 + p * VAR_1 ; p = FLOAT_9 + p * VAR_1 ; p = - FLOAT_10 + p * VAR_1 ; p = - FLOAT_11 + p * VAR_1 ; p = FLOAT_12 + p * VAR_1 ; p = - FLOAT_13 + p * VAR_1 ; p = - FLOAT_14 + p * VAR_1 ; p = FLOAT_15 + p * VAR_1 ; p = - FLOAT_16 + p * VAR_1 ; p = - FLOAT_17 + p * VAR_1 ; p = FLOAT_18 + p * VAR_1 ; p = + FLOAT_19 + p * VAR_1 ; p = - FLOAT_20 + p * VAR_1 ; p = FLOAT_21 + p * VAR_1 ; p = - FLOAT_22 + p * VAR_1 ; p = - FLOAT_23 + p * VAR_1 ; p = FLOAT_24 + p * VAR_1 ; p = FLOAT_25 + p * VAR_1 ; } else if ( VAR_1 < FLOAT_26 ) { VAR_1 = TYPE_1 . METHOD_3 ( VAR_1 ) - FLOAT_27 ; p = FLOAT_28 ; p = FLOAT_29 + p * VAR_1 ; p = - FLOAT_30 + p * VAR_1 ; p = FLOAT_31 + p * VAR_1 ; p = FLOAT_32 + p * VAR_1 ; p = - FLOAT_33 + p * VAR_1 ; p = FLOAT_34 + p * VAR_1 ; p = FLOAT_35 + p * VAR_1 ; p = - FLOAT_36 + p * VAR_1 ; p = FLOAT_37 + p * VAR_1 ; p = FLOAT_38 + p * VAR_1 ; p = - FLOAT_39 + p * VAR_1 ; p = FLOAT_40 + p * VAR_1 ; p = - FLOAT_41 + p * VAR_1 ; p = FLOAT_42 + p * VAR_1 ; p = - FLOAT_43 + p * VAR_1 ; p = FLOAT_44 + p * VAR_1 ; p = FLOAT_45 + p * VAR_1 ; p = FLOAT_46 + p * VAR_1 ; } else if ( ! TYPE_2 . METHOD_4 ( VAR_1 ) ) { VAR_1 = TYPE_1 . METHOD_3 ( VAR_1 ) - FLOAT_47 ; p = - FLOAT_48 ; p = - FLOAT_49 + p * VAR_1 ; p = FLOAT_50 + p * VAR_1 ; p = - FLOAT_51 + p * VAR_1 ; p = FLOAT_52 + p * VAR_1 ; p = - FLOAT_53 + p * VAR_1 ; p = FLOAT_54 + p * VAR_1 ; p = - FLOAT_55 + p * VAR_1 ; p = FLOAT_56 + p * VAR_1 ; p = - FLOAT_57 + p * VAR_1 ; p = FLOAT_58 + p * VAR_1 ; p = - FLOAT_59 + p * VAR_1 ; p = FLOAT_60 + p * VAR_1 ; p = - FLOAT_61 + p * VAR_1 ; p = - FLOAT_62 + p * VAR_1 ; p = FLOAT_63 + p * VAR_1 ; p = FLOAT_64 + p * VAR_1 ; } else { p = VAR_2 ; } return p * x ; }