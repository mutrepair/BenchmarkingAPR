private static int METHOD_1 ( byte [ ] str , int start , int VAR_1 , int c ) { int a = INT_1 ; int b = INT_1 ; int i ; for ( i = start ; i + INT_2 <= VAR_1 ; i += INT_2 ) { a += ( ( ( str [ i + 0 ] & INT_3 ) < < 0 ) | ( ( str [ i + 1 ] & INT_3 ) < < INT_4 ) | ( ( str [ i + INT_5 ] & INT_6 ) > > INT_7 ) | ( ( str [ i + INT_8 ] & INT_3 ) < < INT_9 ) ) ; b += ( ( ( str [ i + INT_10 ] & INT_3 ) < < 0 ) | ( ( str [ i + INT_11 ] & INT_3 ) < < INT_4 ) | ( ( str [ i + INT_12 ] & INT_3 ) < < INT_7 ) | ( ( str [ i + INT_13 ] & INT_3 ) < < INT_9 ) ) ; c += ( ( ( str [ i + INT_4 ] & INT_3 ) < < 0 ) | ( ( str [ i + INT_14 ] & INT_3 ) < < INT_4 ) | ( ( str [ i + INT_15 ] & INT_3 ) < < INT_7 ) | ( ( str [ i + INT_16 ] & INT_3 ) < < INT_9 ) ) ; a -= b ; a -= c ; a ^= ( c > > > INT_17 ) ; b -= c ; b -= a ; b ^= ( a < < INT_4 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_17 ) ; a -= b ; a -= c ; a ^= ( c > > > INT_2 ) ; b -= c ; b -= a ; b ^= ( a < < INT_7 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_11 ) ; a -= b ; a -= c ; a ^= ( c > > > INT_8 ) ; b -= c ; b -= a ; b ^= ( a < < INT_15 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_18 ) ; } c += VAR_1 - start ; switch ( VAR_1 - i ) { case INT_16 : c += ( str [ i + INT_15 ] & INT_3 ) < < INT_9 ; case INT_15 : c += ( str [ i + INT_14 ] & INT_3 ) < < INT_7 ; case INT_14 : c += ( str [ i + INT_4 ] & INT_3 ) < < INT_4 ; case INT_4 : b += ( str [ i + INT_13 ] & INT_3 ) < < INT_9 ; case INT_13 : b += ( str [ i + INT_12 ] & INT_3 ) < < INT_7 ; case INT_12 : b += ( str [ i + INT_11 ] & INT_3 ) < < INT_4 ; case INT_11 : b += ( str [ i + INT_10 ] & INT_3 ) ; case INT_10 : a += ( str [ i + INT_8 ] & INT_3 ) < < INT_9 ; case INT_8 : a += ( str [ i + INT_5 ] & INT_3 ) < < INT_7 ; case INT_5 : a += ( str [ i + 1 ] & INT_3 ) < < INT_4 ; case 1 : a += ( str [ i + 0 ] & INT_3 ) ; } a -= b ; a -= c ; a ^= ( c > > > INT_17 ) ; b -= c ; b -= a ; b ^= ( a < < INT_4 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_17 ) ; a -= b ; a -= c ; a ^= ( c > > > INT_2 ) ; b -= c ; b -= a ; b ^= ( a < < INT_7 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_11 ) ; a -= b ; a -= c ; a ^= ( c > > > INT_8 ) ; b -= c ; b -= a ; b ^= ( a < < INT_15 ) ; c -= a ; c -= b ; c ^= ( b > > > INT_18 ) ; return c ; }