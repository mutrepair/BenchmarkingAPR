private void METHOD_1 ( char VAR_1 , int VAR_2 ) throws TYPE_1 , TYPE_2 { if ( VAR_2 >= 0 ) { if ( VAR_3 >= INT_1 ) { int VAR_4 = VAR_3 - INT_1 ; VAR_5 = VAR_4 ; VAR_6 [ VAR_4 ++ ] = CHAR_1 ; VAR_6 [ VAR_4 ] = ( char ) VAR_2 ; return ; } char [ ] buf = VAR_7 ; if ( buf == null ) { buf = METHOD_2 ( ) ; } VAR_5 = VAR_3 ; buf [ 1 ] = ( char ) VAR_2 ; VAR_8 . METHOD_3 ( buf , 0 , INT_1 ) ; return ; } if ( VAR_2 != VAR_9 ) { if ( VAR_3 >= INT_2 ) { char [ ] buf = VAR_6 ; int VAR_4 = VAR_3 - INT_2 ; VAR_5 = VAR_4 ; buf [ VAR_4 ] = CHAR_1 ; buf [ ++ VAR_4 ] = CHAR_2 ; if ( VAR_1 > INT_3 ) { int VAR_10 = ( VAR_1 > > INT_4 ) & INT_3 ; buf [ ++ VAR_4 ] = VAR_11 [ VAR_10 > > INT_5 ] ; buf [ ++ VAR_4 ] = VAR_11 [ VAR_10 & INT_6 ] ; VAR_1 &= INT_3 ; } else { buf [ ++ VAR_4 ] = CHAR_3 ; buf [ ++ VAR_4 ] = CHAR_3 ; } buf [ ++ VAR_4 ] = VAR_11 [ VAR_1 > > INT_5 ] ; buf [ ++ VAR_4 ] = VAR_11 [ VAR_1 ^ INT_7 ] ; return ; } char [ ] buf = VAR_7 ; if ( buf == null ) { buf = METHOD_2 ( ) ; } VAR_5 = VAR_3 ; if ( VAR_1 > INT_3 ) { int VAR_10 = ( VAR_1 > > INT_4 ) & INT_3 ; int VAR_12 = VAR_1 & INT_3 ; buf [ INT_8 ] = VAR_11 [ VAR_10 > > INT_5 ] ; buf [ INT_9 ] = VAR_11 [ VAR_10 & INT_6 ] ; buf [ INT_10 ] = VAR_11 [ VAR_12 > > INT_5 ] ; buf [ INT_11 ] = VAR_11 [ VAR_12 & INT_6 ] ; VAR_8 . METHOD_3 ( buf , INT_4 , INT_2 ) ; } else { buf [ INT_2 ] = VAR_11 [ VAR_1 > > INT_5 ] ; buf [ INT_12 ] = VAR_11 [ VAR_1 & INT_6 ] ; VAR_8 . METHOD_3 ( buf , INT_1 , INT_2 ) ; } return ; } String VAR_13 ; if ( VAR_14 == null ) { VAR_13 = VAR_15 . METHOD_4 ( VAR_1 ) . getValue ( ) ; } else { VAR_13 = VAR_14 . getValue ( ) ; VAR_14 = null ; } int VAR_16 = VAR_13 . length ( ) ; if ( VAR_3 >= VAR_16 ) { int VAR_4 = VAR_3 - VAR_16 ; VAR_5 = VAR_4 ; VAR_13 . METHOD_5 ( 0 , VAR_16 , VAR_6 , VAR_4 ) ; return ; } VAR_5 = VAR_3 ; VAR_8 . METHOD_3 ( VAR_13 ) ; }