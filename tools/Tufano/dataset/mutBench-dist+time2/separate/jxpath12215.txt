public TYPE_1 METHOD_1 ( ) { int VAR_1 ; TYPE_1 VAR_2 = null ; TYPE_1 VAR_3 ; int VAR_4 = 0 ; VAR_5 : for ( ; ; ) { try { VAR_6 = VAR_7 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_8 ) { VAR_9 = 0 ; VAR_3 = METHOD_3 ( ) ; return VAR_3 ; } try { VAR_7 . METHOD_4 ( 0 ) ; while ( VAR_6 <= INT_1 && ( INT_2 & ( 1L < < VAR_6 ) ) != 0L ) VAR_6 = VAR_7 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_10 ) { continue VAR_5 ; } VAR_9 = INT_3 ; VAR_11 = 0 ; VAR_4 = METHOD_5 ( ) ; if ( VAR_9 != INT_3 ) { if ( VAR_11 + 1 < VAR_4 ) VAR_7 . METHOD_4 ( VAR_4 - VAR_11 - 1 ) ; if ( ( VAR_12 [ VAR_9 < < INT_4 ] & ( 1L < < ( VAR_9 & INT_5 ) ) ) != 0L ) { VAR_3 = METHOD_3 ( ) ; return VAR_3 ; } else { continue VAR_5 ; } } int VAR_13 = VAR_7 . METHOD_6 ( ) ; int VAR_14 = VAR_7 . METHOD_7 ( ) ; String VAR_15 = null ; boolean VAR_16 = false ; try { VAR_7 . METHOD_8 ( ) ; VAR_7 . METHOD_4 ( 1 ) ; } catch ( java.io.IOException VAR_10 ) { VAR_16 = true ; VAR_15 = VAR_4 <= 1 ? STRING_1 : VAR_7 . METHOD_9 ( ) ; if ( VAR_6 == CHAR_1 || VAR_6 == CHAR_2 ) { VAR_13 ++ ; VAR_14 = 0 ; } else VAR_14 ++ ; } if ( ! VAR_16 ) { VAR_7 . METHOD_4 ( 1 ) ; VAR_15 = VAR_4 <= 1 ? STRING_1 : VAR_7 . METHOD_9 ( ) ; } throw new TYPE_2 ( VAR_16 , VAR_17 , VAR_13 , VAR_14 , VAR_15 , VAR_6 , VAR_18 ) ; } }