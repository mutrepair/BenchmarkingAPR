public static double METHOD_1 ( double x ) { boolean VAR_1 = false ; int VAR_2 = 0 ; double VAR_3 = x ; if ( x < 0 ) { VAR_1 = true ; VAR_3 = - VAR_3 ; } if ( VAR_3 == 0.0 ) { long VAR_4 = TYPE_1 . METHOD_2 ( x ) ; if ( VAR_4 < 0 ) { return - 0.0 ; } return 0.0 ; } if ( VAR_3 != VAR_3 || VAR_3 == VAR_5 ) { return VAR_6 ; } double VAR_7 = 0 ; if ( VAR_3 > FLOAT_1 ) { double VAR_8 [ ] = new double [ INT_1 ] ; METHOD_3 ( VAR_3 , VAR_8 ) ; VAR_2 = ( ( int ) VAR_8 [ 0 ] ) & INT_1 ; VAR_3 = VAR_8 [ 1 ] ; VAR_7 = VAR_8 [ INT_2 ] ; } else if ( VAR_3 > FLOAT_2 ) { final TYPE_2 VAR_9 = new TYPE_2 ( VAR_3 ) ; VAR_2 = VAR_9 . METHOD_4 ( ) & INT_1 ; VAR_3 = VAR_9 . METHOD_5 ( ) ; VAR_7 = VAR_9 . METHOD_6 ( ) ; } if ( VAR_3 > FLOAT_3 ) { final double VAR_10 = FLOAT_2 ; final double VAR_11 = FLOAT_4 ; final double a = VAR_10 - VAR_3 ; double b = - ( a - VAR_10 + VAR_3 ) ; b += VAR_11 - VAR_7 ; VAR_3 = a + b ; VAR_7 = - ( VAR_3 - a - b ) ; VAR_2 ^= 1 ; VAR_1 ^= true ; } double result ; if ( ( VAR_2 & 1 ) == 0 ) { result = METHOD_7 ( VAR_3 , VAR_7 , false ) ; } else { result = - METHOD_7 ( VAR_3 , VAR_7 , true ) ; } if ( VAR_1 ) { result = + result ; } return result ; }