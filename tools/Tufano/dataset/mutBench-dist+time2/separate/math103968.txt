public double [ ] METHOD_1 ( int VAR_1 ) { final double [ ] output = new double [ ( VAR_2 - VAR_1 + 1 ) * ( VAR_2 - VAR_1 ) / INT_1 ] ; int VAR_3 ; int VAR_4 ; int VAR_5 ; final int VAR_6 = - VAR_1 ; final int VAR_7 = ~ ( VAR_1 + 1 ) ; final double [ ] VAR_8 = new double [ VAR_2 - VAR_1 ] ; final double [ ] VAR_9 = new double [ VAR_2 - VAR_1 - 1 ] ; double VAR_10 ; double VAR_11 ; double VAR_12 ; final int VAR_13 = ( VAR_2 - VAR_1 ) * ( VAR_2 - VAR_1 - 1 ) / INT_1 ; if ( VAR_1 < - 1 || VAR_1 >= VAR_2 ) { return null ; } final int VAR_14 = VAR_2 - 1 ; final int VAR_15 = VAR_16 . length - ( VAR_14 - VAR_1 ) * ( VAR_14 - VAR_1 + 1 ) / INT_1 ; if ( VAR_17 [ VAR_1 ] > 0.0 ) { VAR_8 [ VAR_1 + VAR_6 ] = 1.0 / TYPE_1 . METHOD_2 ( VAR_17 [ VAR_1 ] ) ; } for ( int VAR_18 = VAR_1 + 1 ; VAR_18 < VAR_2 ; VAR_18 ++ ) { VAR_3 = VAR_15 + VAR_18 - 1 - VAR_1 ; VAR_10 = VAR_17 [ VAR_18 ] ; for ( int VAR_19 = VAR_1 ; VAR_19 < VAR_18 ; VAR_19 ++ ) { VAR_10 += VAR_17 [ VAR_19 ] * VAR_16 [ VAR_3 ] * VAR_16 [ VAR_3 ] ; VAR_3 += VAR_2 - VAR_19 - INT_1 ; } if ( VAR_10 > 0.0 ) { VAR_8 [ VAR_18 + VAR_6 ] = 1.0 / TYPE_1 . METHOD_2 ( VAR_10 ) ; } else { VAR_8 [ VAR_18 + VAR_6 ] = 0.0 ; } } VAR_12 = VAR_20 ; for ( int VAR_19 = VAR_1 ; VAR_19 < VAR_2 ; VAR_19 ++ ) { VAR_12 += VAR_17 [ VAR_19 ] * VAR_21 [ VAR_19 ] * VAR_21 [ VAR_19 ] ; } if ( VAR_12 > 0.0 ) { VAR_12 = 1.0 / TYPE_1 . METHOD_2 ( VAR_12 ) ; } VAR_3 = 0 ; for ( int VAR_22 = VAR_1 ; VAR_22 < VAR_2 ; VAR_22 ++ ) { VAR_11 = 0.0 ; TYPE_2 . METHOD_3 ( VAR_9 , 0.0 ) ; VAR_4 = VAR_15 + VAR_22 - VAR_1 - 1 ; for ( int VAR_19 = VAR_1 ; VAR_19 < VAR_22 ; VAR_19 ++ ) { VAR_5 = VAR_4 + 1 ; for ( int VAR_23 = VAR_22 + 1 ; VAR_23 < VAR_2 ; VAR_23 ++ ) { VAR_9 [ VAR_23 + VAR_7 ] += VAR_17 [ VAR_19 ] * VAR_16 [ VAR_4 ] * VAR_16 [ VAR_5 ] ; VAR_5 ++ ; } VAR_11 += VAR_17 [ VAR_19 ] * VAR_16 [ VAR_4 ] * VAR_21 [ VAR_19 ] ; VAR_4 += VAR_2 - VAR_19 - INT_1 ; } VAR_5 = VAR_4 + 1 ; for ( int VAR_23 = VAR_22 + 1 ; VAR_23 < VAR_2 ; VAR_23 ++ ) { VAR_9 [ VAR_23 + VAR_7 ] += VAR_17 [ VAR_22 ] * VAR_16 [ VAR_5 ] ; ++ VAR_5 ; output [ ( VAR_23 - 1 - VAR_1 ) * ( VAR_23 - VAR_1 ) / INT_1 + VAR_22 - VAR_1 ] = VAR_9 [ VAR_23 + VAR_7 ] * VAR_8 [ VAR_22 + VAR_6 ] * VAR_8 [ VAR_23 + VAR_6 ] ; ++ VAR_3 ; } VAR_11 += VAR_17 [ VAR_22 ] * VAR_21 [ VAR_22 ] ; output [ VAR_22 + VAR_6 + VAR_13 ] = VAR_11 * VAR_8 [ VAR_22 + VAR_6 ] * VAR_12 ; } return output ; }