protected double METHOD_1 ( final TYPE_1 VAR_1 , final double [ ] y , final double [ ] VAR_2 , final double VAR_3 ) throws TYPE_2 , TYPE_3 , TYPE_4 { double VAR_4 = VAR_1 . METHOD_2 ( ) ; final double VAR_5 = VAR_1 . METHOD_3 ( ) ; if ( ! VAR_6 ) { for ( TYPE_5 state : VAR_7 ) { state . METHOD_4 ( VAR_1 ) ; } VAR_6 = true ; } final int VAR_8 = VAR_1 . METHOD_5 ( ) ? ~ 1 : - 1 ; TYPE_6 < TYPE_5 > VAR_9 = new TYPE_7 < TYPE_5 > ( new TYPE_8 < TYPE_5 > ( ) { public int METHOD_6 ( TYPE_5 VAR_10 , TYPE_5 VAR_11 ) { return VAR_8 * TYPE_9 . METHOD_6 ( VAR_10 . METHOD_7 ( ) , VAR_11 . METHOD_7 ( ) ) ; } } ) ; for ( final TYPE_5 state : VAR_7 ) { if ( state . METHOD_8 ( VAR_1 ) ) { VAR_9 . add ( state ) ; } } while ( ! VAR_9 . isEmpty ( ) ) { final TYPE_10 < TYPE_5 > iterator = VAR_9 . iterator ( ) ; final TYPE_5 VAR_12 = iterator . METHOD_9 ( ) ; iterator . remove ( ) ; final double VAR_13 = VAR_12 . METHOD_7 ( ) ; VAR_1 . METHOD_10 ( VAR_4 ) ; VAR_1 . METHOD_11 ( VAR_13 ) ; VAR_1 . METHOD_12 ( VAR_13 ) ; final double [ ] VAR_14 = new double [ y . length ] ; VAR_15 . METHOD_13 ( ) . METHOD_14 ( VAR_1 . METHOD_15 ( ) , VAR_14 ) ; int index = 0 ; for ( TYPE_11 VAR_16 : VAR_15 . METHOD_16 ( ) ) { VAR_16 . METHOD_14 ( VAR_1 . METHOD_17 ( index ++ ) , VAR_14 ) ; } for ( final TYPE_5 state : VAR_7 ) { state . METHOD_18 ( VAR_13 , VAR_14 ) ; VAR_17 = VAR_17 || state . METHOD_19 ( ) ; } for ( final TYPE_12 VAR_18 : VAR_19 ) { VAR_18 . METHOD_20 ( VAR_1 , VAR_17 ) ; } if ( VAR_17 ) { TYPE_13 . METHOD_21 ( VAR_14 , 0 , y , 0 , y . length ) ; return VAR_13 ; } boolean VAR_20 = false ; for ( final TYPE_5 state : VAR_7 ) { VAR_20 = VAR_20 || state . METHOD_22 ( VAR_13 , VAR_14 ) ; } if ( VAR_20 ) { VAR_1 . METHOD_12 ( VAR_13 ) ; TYPE_13 . METHOD_21 ( VAR_14 , 0 , y , 0 , y . length ) ; METHOD_23 ( VAR_13 , y , VAR_2 ) ; VAR_21 = true ; return VAR_13 ; } VAR_4 = VAR_13 ; VAR_1 . METHOD_10 ( VAR_13 ) ; VAR_1 . METHOD_11 ( VAR_5 ) ; if ( VAR_12 . METHOD_8 ( VAR_1 ) ) { VAR_9 . add ( VAR_12 ) ; } } VAR_1 . METHOD_12 ( VAR_5 ) ; final double [ ] VAR_22 = new double [ y . length ] ; VAR_15 . METHOD_13 ( ) . METHOD_14 ( VAR_1 . METHOD_15 ( ) , VAR_22 ) ; int index = 0 ; for ( TYPE_11 VAR_16 : VAR_15 . METHOD_16 ( ) ) { VAR_16 . METHOD_14 ( VAR_1 . METHOD_17 ( index ++ ) , VAR_22 ) ; } for ( final TYPE_5 state : VAR_7 ) { state . METHOD_18 ( VAR_5 , VAR_22 ) ; VAR_17 = VAR_17 || state . METHOD_19 ( ) ; } VAR_17 = VAR_17 || TYPE_14 . equals ( VAR_5 , VAR_3 , 1 ) ; for ( TYPE_12 VAR_18 : VAR_19 ) { VAR_18 . METHOD_20 ( VAR_1 , VAR_17 ) ; } return VAR_5 ; }