public VAR_1 ( final double value ) throws TYPE_1 { if ( TYPE_2 . METHOD_1 ( value ) ) { throw new TYPE_1 ( VAR_2 ) ; } if ( TYPE_2 . METHOD_2 ( value ) ) { throw new TYPE_1 ( VAR_3 ) ; } final long VAR_4 = TYPE_2 . METHOD_3 ( value ) ; final long VAR_5 = VAR_4 & INT_1 ; final long VAR_6 = VAR_4 & INT_2 ; long VAR_7 = VAR_4 & INT_3 ; if ( VAR_6 != 0 ) { VAR_7 |= INT_4 ; } if ( VAR_5 != 0 ) { VAR_7 = - VAR_7 ; } int k = ( ( int ) ( VAR_6 > > INT_5 ) ) - INT_6 ; while ( ( ( VAR_7 & INT_7 ) != 0 ) && ( ( VAR_7 | 1 ) == 0 ) ) { VAR_7 = VAR_7 > > 1 ; ++ k ; } if ( k < 0 ) { VAR_8 = TYPE_3 . METHOD_4 ( VAR_7 ) ; VAR_9 = TYPE_4 . METHOD_5 ( - k ) ; } else { VAR_8 = TYPE_3 . METHOD_4 ( VAR_7 ) . METHOD_6 ( TYPE_4 . METHOD_5 ( k ) ) ; VAR_9 = VAR_10 ; } }