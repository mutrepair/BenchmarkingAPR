private void METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 , final int VAR_4 , final TYPE_1 < TYPE_2 > VAR_5 ) { final TYPE_3 VAR_6 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_6 == null || VAR_6 . METHOD_3 ( ) == VAR_2 && VAR_6 . METHOD_4 ( ) == VAR_2 - VAR_4 || VAR_6 . METHOD_5 ( ) == VAR_1 == ( VAR_6 . METHOD_4 ( ) == VAR_1 - VAR_3 ) ) { int i = VAR_1 ; int j = VAR_3 ; while ( i < VAR_2 || j < VAR_4 ) { if ( i < VAR_2 && j < VAR_4 && VAR_7 . METHOD_6 ( VAR_8 . get ( i ) , VAR_9 . get ( j ) ) ) { VAR_5 . append ( new TYPE_4 < TYPE_2 > ( VAR_8 . get ( i ) ) ) ; ++ i ; ++ j ; } else { if ( VAR_2 - VAR_1 > VAR_4 - VAR_3 ) { VAR_5 . append ( new TYPE_5 < TYPE_2 > ( VAR_8 . get ( i ) ) ) ; ++ i ; } else { VAR_5 . append ( new TYPE_6 < TYPE_2 > ( VAR_9 . get ( j ) ) ) ; ++ j ; } } } } else { METHOD_1 ( VAR_1 , VAR_6 . METHOD_3 ( ) , VAR_3 , VAR_6 . METHOD_3 ( ) - VAR_6 . METHOD_4 ( ) , VAR_5 ) ; for ( int i = VAR_6 . METHOD_3 ( ) ; i < VAR_6 . METHOD_5 ( ) ; ++ i ) { VAR_5 . append ( new TYPE_4 < TYPE_2 > ( VAR_8 . get ( i ) ) ) ; } METHOD_1 ( VAR_6 . METHOD_5 ( ) , VAR_2 , VAR_6 . METHOD_5 ( ) - VAR_6 . METHOD_4 ( ) , VAR_4 , VAR_5 ) ; } }