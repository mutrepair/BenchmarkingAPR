public double METHOD_1 ( final TYPE_1 VAR_1 , final int VAR_2 , final int VAR_3 , final int VAR_4 , final int VAR_5 ) throws TYPE_2 , TYPE_3 { TYPE_4 . METHOD_2 ( this , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_1 . start ( rows , VAR_6 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; for ( int VAR_7 = VAR_2 / VAR_8 ; VAR_7 < 1 + VAR_3 / VAR_8 ; ++ VAR_7 ) { final int VAR_9 = VAR_7 * VAR_8 ; final int VAR_10 = TYPE_5 . METHOD_3 ( VAR_2 , VAR_9 ) ; final int VAR_11 = TYPE_5 . min ( ( VAR_7 + 1 ) * VAR_8 , 1 + VAR_3 ) ; for ( int VAR_12 = VAR_4 / VAR_8 ; VAR_12 < 1 + VAR_5 / VAR_8 ; ++ VAR_12 ) { final int VAR_13 = METHOD_4 ( VAR_12 ) ; final int VAR_14 = VAR_12 + VAR_8 ; final int VAR_15 = TYPE_5 . METHOD_3 ( VAR_4 , VAR_14 ) ; final int VAR_16 = TYPE_5 . min ( ( VAR_12 + 1 ) * VAR_8 , 1 + VAR_5 ) ; final double [ ] VAR_17 = VAR_18 [ VAR_7 * VAR_19 + VAR_12 ] ; for ( int p = VAR_10 ; p < VAR_11 ; ++ p ) { int k = ( p - VAR_9 ) * VAR_13 + VAR_15 - VAR_14 ; for ( int VAR_20 = VAR_15 ; VAR_20 < VAR_16 ; ++ VAR_20 ) { VAR_1 . METHOD_5 ( p , VAR_20 , VAR_17 [ k ] ) ; ++ k ; } } } } return VAR_1 . end ( ) ; }