private final int METHOD_1 ( long VAR_1 , long VAR_2 ) { try { VAR_3 = VAR_4 . METHOD_2 ( ) ; } catch ( java.io.IOException VAR_5 ) { METHOD_3 ( 0 , VAR_1 , VAR_2 ) ; return 1 ; } switch ( VAR_3 ) { case INT_1 : if ( ( VAR_2 & INT_2 ) != 0L ) return METHOD_4 ( 1 , INT_3 ) ; break ; case INT_4 : if ( ( VAR_1 & INT_5 ) != 0L ) return METHOD_4 ( 1 , INT_6 ) ; break ; case INT_7 : if ( ( VAR_1 & INT_8 ) != 0L ) return METHOD_4 ( 1 , INT_9 ) ; else if ( ( VAR_1 & INT_10 ) != 0L ) return METHOD_4 ( 1 , 0 ) ; else if ( ( VAR_1 & INT_11 ) != 0L ) return METHOD_4 ( 1 , INT_12 ) ; break ; case INT_13 : return METHOD_5 ( VAR_1 , INT_14 , VAR_2 , INT_15 ) ; case INT_16 : if ( ( VAR_1 & INT_17 ) != 0L ) return METHOD_6 ( 1 , INT_18 , INT_9 ) ; break ; case INT_19 : return METHOD_5 ( VAR_1 , INT_20 , VAR_2 , INT_21 ) ; case INT_22 : return METHOD_5 ( VAR_1 , INT_23 , VAR_2 , 0L ) ; case INT_24 : return METHOD_5 ( VAR_1 , INT_25 , VAR_2 , 0L ) ; case INT_26 : return METHOD_5 ( VAR_1 , 0L , VAR_2 , INT_27 ) ; case INT_28 : return METHOD_5 ( VAR_1 , INT_29 , VAR_2 , 0L ) ; case INT_30 : return METHOD_5 ( VAR_1 , INT_31 , VAR_2 , INT_32 ) ; case INT_33 : if ( ( VAR_1 & INT_34 ) != 0L ) return METHOD_6 ( 1 , INT_35 , INT_9 ) ; return METHOD_5 ( VAR_1 , INT_36 , VAR_2 , INT_37 ) ; case INT_38 : return METHOD_5 ( VAR_1 , INT_39 , VAR_2 , 0L ) ; case INT_40 : return METHOD_5 ( VAR_1 , INT_41 , VAR_2 , INT_42 ) ; default : break ; } return METHOD_7 ( 0 , VAR_1 , VAR_2 ) ; }