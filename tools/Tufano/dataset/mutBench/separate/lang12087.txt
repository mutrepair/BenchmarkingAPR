private static String [ ] METHOD_1 ( final String str , final String VAR_1 , final int VAR_2 , final boolean VAR_3 ) { if ( str == null ) { return null ; } final int VAR_4 = str . length ( ) ; if ( VAR_4 == 0 ) { return VAR_5 ; } if ( TYPE_1 . equals ( VAR_1 ) ) { return METHOD_2 ( str , null , VAR_2 , VAR_3 ) ; } final int VAR_6 = VAR_1 . length ( ) ; final TYPE_2 < String > VAR_7 = new TYPE_2 < String > ( ) ; int VAR_8 = 0 ; int VAR_9 = 0 ; int end = 0 ; while ( end < VAR_4 ) { end = str . METHOD_3 ( VAR_1 , VAR_9 ) ; if ( end > - 1 ) { if ( end > VAR_9 ) { VAR_8 += 1 ; if ( VAR_8 == VAR_2 ) { end = VAR_4 ; VAR_7 . add ( str . substring ( VAR_9 ) ) ; } else { VAR_7 . add ( str . substring ( VAR_9 , end ) ) ; VAR_9 = end + VAR_6 ; } } else { if ( VAR_3 ) { VAR_8 += 1 ; if ( VAR_8 == VAR_2 ) { end = VAR_4 ; VAR_7 . add ( str . substring ( VAR_9 ) ) ; } else { VAR_7 . add ( TYPE_1 ) ; } } VAR_9 = end + VAR_6 ; } } else { VAR_7 . add ( str . substring ( VAR_9 ) ) ; end = VAR_4 ; } } return VAR_7 . METHOD_4 ( new String [ VAR_7 . size ( ) ] ) ; }