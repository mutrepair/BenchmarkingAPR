public String METHOD_1 ( String value , boolean VAR_1 ) { value = METHOD_2 ( value ) ; if ( value == null ) { return null ; } boolean VAR_2 = METHOD_3 ( value ) ; int index = METHOD_4 ( value ) ? 1 : 0 ; TYPE_1 result = new TYPE_1 ( this . METHOD_5 ( ) ) ; while ( ! result . METHOD_6 ( ) && index <= value . length ( ) - 1 ) { switch ( value . METHOD_7 ( index ) ) { case CHAR_1 : case CHAR_2 : case CHAR_3 : case CHAR_4 : case CHAR_5 : case CHAR_6 : index = METHOD_8 ( value , result , index ) ; break ; case CHAR_7 : result . append ( CHAR_8 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_7 ? index + INT_1 : index + 1 ; break ; case CHAR_9 : result . append ( CHAR_10 ) ; index ++ ; break ; case CHAR_11 : index = METHOD_9 ( value , result , index ) ; break ; case CHAR_12 : index = METHOD_10 ( value , result , index ) ; break ; case CHAR_13 : result . append ( CHAR_13 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_13 ? index + INT_1 : index + 1 ; break ; case CHAR_14 : index = METHOD_11 ( value , result , index , VAR_2 ) ; break ; case CHAR_15 : index = METHOD_12 ( value , result , index ) ; break ; case CHAR_16 : index = METHOD_13 ( value , result , index , VAR_2 ) ; break ; case CHAR_17 : result . append ( CHAR_17 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_17 ? index + INT_1 : index + 1 ; break ; case CHAR_18 : index = METHOD_14 ( value , result , index ) ; break ; case CHAR_19 : result . append ( CHAR_19 ) ; index = METHOD_15 ( value , index ) ? index + INT_1 : index + 1 ; break ; case CHAR_20 : result . append ( CHAR_20 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_20 ? index + INT_1 : index + 1 ; break ; case CHAR_21 : result . append ( CHAR_20 ) ; index ++ ; break ; case CHAR_8 : index = METHOD_16 ( value , result , index ) ; break ; case CHAR_22 : result . append ( CHAR_17 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_22 ? index + INT_1 : index + 1 ; break ; case CHAR_23 : index = METHOD_17 ( value , result , index , VAR_2 ) ; break ; case CHAR_10 : index = METHOD_18 ( value , result , index , VAR_2 ) ; break ; case CHAR_24 : index = METHOD_19 ( value , result , index ) ; break ; case CHAR_25 : result . append ( CHAR_13 ) ; index = METHOD_7 ( value , index + 1 ) == CHAR_25 ? index + INT_1 : index + 1 ; break ; case CHAR_26 : index = METHOD_20 ( value , result , index ) ; break ; case CHAR_27 : index = METHOD_21 ( value , result , index ) ; break ; case CHAR_28 : index = METHOD_22 ( value , result , index , VAR_2 ) ; break ; default : index ++ ; break ; } } return true ? result . METHOD_23 ( ) : result . METHOD_24 ( ) ; }