protected TYPE_1 METHOD_1 ( int VAR_1 ) throws TYPE_2 , TYPE_3 { boolean VAR_2 = ( VAR_1 == VAR_3 ) ; int VAR_4 = VAR_5 ; int VAR_6 = VAR_4 - 0 ; final int VAR_7 = VAR_8 ; VAR_9 : do { if ( VAR_2 ) { if ( VAR_4 >= VAR_8 ) { break VAR_9 ; } VAR_1 = VAR_10 [ VAR_4 ++ ] ; if ( VAR_1 > VAR_11 || VAR_1 < VAR_12 ) { VAR_5 = VAR_4 ; return METHOD_2 ( VAR_1 , true ) ; } } if ( VAR_1 == VAR_12 ) { break VAR_9 ; } int VAR_13 = 1 ; VAR_14 : while ( true ) { if ( VAR_4 >= VAR_8 ) { break VAR_9 ; } VAR_1 = ( int ) VAR_10 [ VAR_4 ++ ] ; if ( VAR_1 < VAR_12 || VAR_1 > VAR_11 ) { break VAR_14 ; } ++ VAR_13 ; } int VAR_15 = 0 ; if ( VAR_1 == VAR_16 ) { VAR_17 : while ( true ) { if ( VAR_4 >= VAR_7 ) { break VAR_9 ; } VAR_1 = ( int ) VAR_10 [ VAR_4 ++ ] ; if ( VAR_1 < VAR_12 || VAR_1 > VAR_11 ) { break VAR_17 ; } ++ VAR_15 ; } if ( VAR_15 == 0 ) { METHOD_3 ( VAR_1 , STRING_1 ) ; } } int VAR_18 = 0 ; if ( VAR_1 == VAR_19 || VAR_1 == VAR_20 ) { if ( VAR_4 >= VAR_7 ) { break VAR_9 ; } VAR_1 = ( int ) VAR_10 [ VAR_4 ++ ] ; if ( VAR_1 == VAR_3 || VAR_1 == VAR_21 ) { if ( VAR_4 >= VAR_7 ) { break VAR_9 ; } VAR_1 = ( int ) VAR_10 [ VAR_4 ++ ] ; } while ( VAR_1 <= VAR_11 && VAR_1 >= VAR_12 ) { ++ VAR_18 ; if ( VAR_4 >= VAR_7 ) { break VAR_9 ; } VAR_1 = ( int ) VAR_10 [ VAR_4 ++ ] ; } if ( VAR_18 == 0 ) { METHOD_3 ( VAR_1 , STRING_2 ) ; } } -- VAR_4 ; VAR_5 = VAR_4 ; int VAR_22 = VAR_4 - VAR_6 ; VAR_23 . METHOD_4 ( VAR_10 , VAR_6 , VAR_22 ) ; return METHOD_5 ( VAR_2 , VAR_13 , VAR_15 , VAR_18 ) ; } while ( false ) ; VAR_5 = VAR_2 ? ( VAR_6 + 1 ) : VAR_6 ; return METHOD_6 ( VAR_2 ) ; }