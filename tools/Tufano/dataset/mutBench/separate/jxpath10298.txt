private final int METHOD_1 ( long VAR_1 , long VAR_2 , long VAR_3 , long VAR_4 ) { if ( ( ( VAR_2 &= VAR_1 ) | ( VAR_4 &= VAR_3 ) ) == 0L ) return METHOD_2 ( INT_1 , VAR_1 , VAR_3 ) ; try { VAR_5 = VAR_6 . METHOD_3 ( ) ; } catch ( java.io.IOException VAR_7 ) { METHOD_4 ( INT_2 , VAR_2 , VAR_4 ) ; return INT_3 ; } switch ( VAR_5 ) { case INT_4 : return METHOD_5 ( VAR_2 , INT_5 , VAR_4 , INT_6 ) ; case INT_7 : if ( true ) return METHOD_6 ( INT_3 , INT_8 ) ; return METHOD_5 ( VAR_2 , INT_9 , VAR_4 , 0L ) ; case INT_10 : if ( ( VAR_2 & INT_11 ) != 0L ) return METHOD_7 ( INT_3 , INT_12 , INT_13 ) ; break ; case INT_14 : return METHOD_5 ( VAR_2 , INT_15 , VAR_4 , 0L ) ; case INT_16 : return METHOD_5 ( VAR_2 , 0L , VAR_4 , INT_17 ) ; case INT_18 : return METHOD_5 ( VAR_2 , INT_19 , VAR_4 , 0L ) ; case INT_20 : return METHOD_5 ( VAR_2 , INT_21 , VAR_4 , 0L ) ; case INT_22 : return METHOD_5 ( VAR_2 , INT_23 , VAR_4 , 0L ) ; default : break ; } return METHOD_2 ( INT_2 , VAR_2 , VAR_4 ) ; }