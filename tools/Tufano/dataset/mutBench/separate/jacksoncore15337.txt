private void METHOD_1 ( char [ ] text , int offset , int VAR_1 ) throws TYPE_1 , TYPE_2 { if ( VAR_2 != null ) { METHOD_2 ( text , offset , VAR_1 ) ; return ; } if ( VAR_3 != 0 ) { METHOD_3 ( text , offset , VAR_1 , VAR_3 ) ; return ; } VAR_1 += offset ; final int [ ] VAR_4 = VAR_5 ; final int VAR_6 = VAR_4 . length ; while ( offset <= VAR_1 ) { int start = offset ; while ( true ) { char c = text [ offset ] ; if ( c < VAR_6 && VAR_4 [ c ] != 0 ) { break ; } if ( ++ offset >= VAR_1 ) { break ; } } int VAR_7 = offset - start ; if ( VAR_7 < VAR_8 ) { if ( ( VAR_9 + VAR_7 ) > VAR_10 ) { METHOD_4 ( ) ; } if ( VAR_7 > 0 ) { TYPE_3 . METHOD_5 ( text , start , VAR_11 , VAR_9 , VAR_7 ) ; VAR_9 += VAR_7 ; } } else { METHOD_4 ( ) ; VAR_12 . METHOD_6 ( text , start , VAR_7 ) ; } if ( offset >= VAR_1 ) { break ; } char c = text [ offset ++ ] ; METHOD_7 ( c , VAR_4 [ c ] ) ; } }