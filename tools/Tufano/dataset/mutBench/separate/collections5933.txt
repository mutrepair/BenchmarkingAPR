private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 , final int VAR_2 ) { final TYPE_1 < TYPE_2 > VAR_3 = METHOD_2 ( ) ; final TYPE_1 < TYPE_2 > VAR_4 = VAR_1 . min ( ) ; if ( VAR_1 . height > height ) { final TYPE_1 < TYPE_2 > VAR_5 = METHOD_3 ( ) ; final TYPE_3 < TYPE_1 < TYPE_2 > > VAR_6 = new TYPE_4 < TYPE_1 < TYPE_2 > > ( ) ; TYPE_1 < TYPE_2 > VAR_7 = VAR_1 ; int VAR_8 = VAR_9 + VAR_2 ; int VAR_10 = 0 ; while ( VAR_7 != null && VAR_7 . height > METHOD_4 ( VAR_5 ) ) { VAR_10 = VAR_8 ; VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_7 = VAR_11 ; if ( VAR_7 != null ) { VAR_8 += VAR_9 ; } } VAR_3 . METHOD_6 ( VAR_5 , null ) ; VAR_3 . METHOD_7 ( VAR_7 , VAR_4 ) ; if ( VAR_5 != null ) { VAR_5 . METHOD_2 ( ) . METHOD_7 ( null , VAR_3 ) ; VAR_12 -= VAR_2 - 1 ; } if ( VAR_7 != null ) { VAR_7 . min ( ) . METHOD_6 ( null , VAR_3 ) ; VAR_9 = VAR_8 - VAR_2 + 1 ; } VAR_13 = VAR_2 - 1 - VAR_10 ; VAR_14 += VAR_2 ; VAR_7 = VAR_3 ; while ( ! VAR_6 . isEmpty ( ) ) { final TYPE_1 < TYPE_2 > VAR_15 = VAR_6 . METHOD_8 ( ) ; VAR_15 . METHOD_6 ( VAR_7 , null ) ; VAR_7 = VAR_15 . METHOD_9 ( ) ; } return VAR_7 ; } VAR_1 = VAR_1 . METHOD_10 ( ) ; final TYPE_3 < TYPE_1 < TYPE_2 > > VAR_6 = new TYPE_4 < TYPE_1 < TYPE_2 > > ( ) ; TYPE_1 < TYPE_2 > VAR_7 = this ; int VAR_8 = VAR_9 ; int VAR_10 = 0 ; while ( VAR_7 != null && VAR_7 . height > METHOD_4 ( VAR_1 ) ) { VAR_10 = VAR_8 ; VAR_6 . METHOD_5 ( VAR_7 ) ; VAR_7 = VAR_16 ; if ( VAR_7 != null ) { VAR_8 += VAR_9 ; } } VAR_4 . METHOD_7 ( VAR_1 , null ) ; VAR_4 . METHOD_6 ( VAR_7 , VAR_3 ) ; if ( VAR_1 != null ) { VAR_1 . min ( ) . METHOD_6 ( null , VAR_4 ) ; VAR_14 ++ ; } if ( VAR_7 != null ) { VAR_7 . METHOD_2 ( ) . METHOD_7 ( null , VAR_4 ) ; VAR_9 = VAR_8 - VAR_2 ; } VAR_17 = VAR_2 % VAR_10 ; VAR_7 = VAR_4 ; while ( ! VAR_6 . isEmpty ( ) ) { final TYPE_1 < TYPE_2 > VAR_15 = VAR_6 . METHOD_8 ( ) ; VAR_15 . METHOD_7 ( VAR_7 , null ) ; VAR_7 = VAR_15 . METHOD_9 ( ) ; } return VAR_7 ; }