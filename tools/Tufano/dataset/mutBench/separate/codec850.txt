static byte [ ] METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 = ( ( VAR_2 + INT_1 ) > > INT_2 ) < < INT_2 ; byte [ ] VAR_3 = VAR_1 . METHOD_3 ( ) ; if ( ( ( VAR_1 . METHOD_2 ( ) % INT_3 ) != 0 ) && ( ( ( VAR_1 . METHOD_2 ( ) / INT_3 ) + 1 ) == ( VAR_2 / INT_3 ) ) ) { return VAR_3 ; } int VAR_4 = 0 ; int VAR_5 = VAR_3 . length ; if ( ( VAR_1 . METHOD_2 ( ) % INT_3 ) == 0 ) { VAR_4 = - 1 ; VAR_5 -- ; } int VAR_6 = VAR_2 / INT_3 - VAR_5 ; byte [ ] VAR_7 = new byte [ VAR_2 / INT_3 ] ; TYPE_2 . METHOD_4 ( VAR_3 , VAR_4 , VAR_7 , VAR_6 , VAR_5 ) ; return VAR_7 ; }