private final void METHOD_1 ( final char [ ] VAR_1 , int offset , final int end ) throws TYPE_1 , TYPE_2 { if ( ( VAR_2 + INT_1 * ( end - offset ) ) > VAR_3 ) { METHOD_2 ( ) ; } int VAR_4 = VAR_2 ; final byte [ ] VAR_5 = VAR_6 ; final int [ ] VAR_7 = VAR_8 ; while ( offset < end ) { int VAR_9 = VAR_1 [ offset ++ ] ; if ( VAR_9 <= INT_2 ) { if ( VAR_7 [ VAR_9 ] == 0 ) { VAR_5 [ VAR_4 ++ ] = ( byte ) VAR_9 ; continue ; } int VAR_10 = VAR_7 [ VAR_9 ] ; if ( VAR_10 != 0 ) { VAR_5 [ VAR_4 ++ ] = VAR_11 ; VAR_5 [ VAR_4 ++ ] = ( byte ) VAR_10 ; } else { VAR_4 = METHOD_3 ( VAR_9 , VAR_4 ) ; } continue ; } if ( VAR_9 <= INT_3 ) { VAR_5 [ VAR_4 ++ ] = ( byte ) ( INT_4 | ( VAR_9 > > INT_1 ) ) ; VAR_5 [ VAR_4 ++ ] = ( byte ) ( INT_5 | ( VAR_9 & INT_6 ) ) ; } else { VAR_4 = METHOD_4 ( VAR_9 , VAR_4 ) ; } } VAR_2 = VAR_4 ; }