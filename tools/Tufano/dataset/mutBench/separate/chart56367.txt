public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 state , TYPE_3 VAR_2 , TYPE_4 VAR_3 , TYPE_5 VAR_4 , TYPE_5 VAR_5 , TYPE_6 VAR_6 , int VAR_7 , int item , boolean VAR_8 , int VAR_9 ) { TYPE_7 VAR_10 = VAR_3 . METHOD_2 ( ) ; TYPE_8 VAR_11 = ( TYPE_8 ) state ; TYPE_9 VAR_12 = ( TYPE_9 ) VAR_6 ; int VAR_13 = VAR_12 . METHOD_3 ( ) ; double VAR_14 = VAR_6 . METHOD_4 ( VAR_7 , item ) ; double VAR_15 = VAR_6 . METHOD_5 ( VAR_7 , item ) ; boolean VAR_16 = false ; if ( TYPE_10 . METHOD_6 ( VAR_15 ) ) { VAR_15 = 0.0 ; VAR_16 = true ; } double VAR_17 = METHOD_7 ( VAR_12 , VAR_7 , item ) ; double VAR_18 = VAR_4 . METHOD_8 ( VAR_14 , VAR_2 , VAR_3 . METHOD_9 ( ) ) ; double VAR_19 = VAR_5 . METHOD_8 ( VAR_15 + VAR_17 , VAR_2 , VAR_3 . METHOD_10 ( ) ) ; TYPE_11 VAR_20 = METHOD_11 ( VAR_7 , item , VAR_8 ) ; TYPE_12 VAR_21 = METHOD_12 ( VAR_7 , item , VAR_8 ) ; if ( VAR_9 == 0 ) { if ( item == 0 ) { VAR_11 . METHOD_13 ( new TYPE_13 ( ) ) ; VAR_11 . METHOD_14 ( VAR_11 . METHOD_15 ( ) ) ; VAR_11 . METHOD_16 ( new TYPE_14 ( ) ) ; double VAR_22 = VAR_5 . METHOD_8 ( VAR_17 , VAR_2 , VAR_3 . METHOD_10 ( ) ) ; if ( VAR_10 == VAR_23 ) { VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_18 , ( int ) VAR_22 ) ; } else if ( VAR_10 == VAR_24 ) { VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_22 , ( int ) VAR_18 ) ; } } if ( VAR_10 == VAR_23 ) { TYPE_15 VAR_25 = new TYPE_15 ( ( int ) VAR_18 , ( int ) VAR_19 ) ; VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_25 . METHOD_19 ( ) , ( int ) VAR_25 . METHOD_20 ( ) ) ; VAR_11 . METHOD_15 ( ) . METHOD_21 ( VAR_25 ) ; } else if ( VAR_10 == VAR_24 ) { VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_19 , ( int ) VAR_18 ) ; } if ( METHOD_22 ( ) ) { if ( item > 0 ) { double VAR_26 = VAR_6 . METHOD_4 ( VAR_7 , item - 1 ) ; double VAR_27 = VAR_6 . METHOD_5 ( VAR_7 , item - - 1 ) ; double VAR_28 = METHOD_7 ( VAR_12 , VAR_7 , item - 1 ) ; double VAR_29 = VAR_4 . METHOD_8 ( VAR_26 , VAR_2 , VAR_3 . METHOD_9 ( ) ) ; double VAR_30 = VAR_5 . METHOD_8 ( VAR_27 + VAR_28 , VAR_2 , VAR_3 . METHOD_10 ( ) ) ; if ( VAR_10 == VAR_23 ) { VAR_11 . METHOD_23 ( ) . METHOD_24 ( VAR_29 , VAR_30 , VAR_18 , VAR_19 ) ; } else if ( VAR_10 == VAR_24 ) { VAR_11 . METHOD_23 ( ) . METHOD_24 ( VAR_30 , VAR_29 , VAR_19 , VAR_18 ) ; } VAR_1 . METHOD_25 ( VAR_11 . METHOD_23 ( ) ) ; } } if ( METHOD_26 ( ) && item > 0 && item == ( VAR_13 - 1 ) ) { double VAR_22 = VAR_5 . METHOD_8 ( VAR_17 , VAR_2 , VAR_3 . METHOD_10 ( ) ) ; if ( VAR_10 == VAR_23 ) { VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_18 , ( int ) VAR_22 ) ; } else if ( VAR_10 == VAR_24 ) { VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_22 , ( int ) VAR_18 ) ; } if ( VAR_7 != 0 ) { TYPE_14 VAR_31 = VAR_11 . METHOD_27 ( ) ; while ( ! VAR_31 . METHOD_28 ( ) ) { TYPE_15 VAR_25 = ( TYPE_15 ) VAR_31 . METHOD_29 ( ) ; VAR_11 . METHOD_17 ( ) . METHOD_18 ( ( int ) VAR_25 . METHOD_19 ( ) , ( int ) VAR_25 . METHOD_20 ( ) ) ; } } VAR_1 . METHOD_30 ( VAR_20 ) ; VAR_1 . METHOD_31 ( VAR_21 ) ; VAR_1 . METHOD_32 ( VAR_11 . METHOD_17 ( ) ) ; if ( METHOD_33 ( ) ) { VAR_1 . METHOD_31 ( METHOD_34 ( VAR_7 ) ) ; VAR_1 . METHOD_30 ( METHOD_35 ( VAR_7 ) ) ; VAR_1 . METHOD_25 ( VAR_11 . METHOD_17 ( ) ) ; } } int VAR_32 = VAR_3 . METHOD_36 ( VAR_4 ) ; int VAR_33 = VAR_3 . METHOD_37 ( VAR_5 ) ; TYPE_16 VAR_34 = state . METHOD_38 ( ) ; METHOD_39 ( VAR_34 , VAR_14 , VAR_17 + VAR_15 , VAR_32 , VAR_33 , VAR_18 , VAR_19 , VAR_10 ) ; } else if ( VAR_9 == 1 ) { TYPE_17 VAR_35 = null ; if ( METHOD_40 ( ) ) { VAR_35 = METHOD_41 ( VAR_7 , item , VAR_8 ) ; if ( VAR_3 . METHOD_2 ( ) == VAR_23 ) { VAR_35 = TYPE_18 . METHOD_42 ( VAR_35 , VAR_18 , VAR_19 ) ; } else if ( VAR_3 . METHOD_2 ( ) == VAR_24 ) { VAR_35 = TYPE_18 . METHOD_42 ( VAR_35 , VAR_19 , VAR_18 ) ; } if ( ! VAR_16 ) { if ( METHOD_43 ( ) != null ) { VAR_1 . METHOD_30 ( METHOD_43 ( ) ) ; } else { VAR_1 . METHOD_30 ( VAR_20 ) ; } if ( METHOD_44 ( ) != null ) { VAR_1 . METHOD_31 ( METHOD_44 ( ) ) ; } else { VAR_1 . METHOD_31 ( VAR_21 ) ; } VAR_1 . METHOD_25 ( VAR_35 ) ; } } else { if ( VAR_3 . METHOD_2 ( ) == VAR_23 ) { VAR_35 = new TYPE_19 ( VAR_18 - INT_1 , VAR_19 - INT_1 , FLOAT_1 , FLOAT_1 ) ; } else if ( VAR_3 . METHOD_2 ( ) == VAR_24 ) { VAR_35 = new TYPE_19 ( VAR_19 - INT_1 , VAR_18 - INT_1 , FLOAT_1 , FLOAT_1 ) ; } } TYPE_20 VAR_36 = state . METHOD_45 ( ) ; if ( VAR_36 != null ) { METHOD_46 ( VAR_36 , VAR_35 , VAR_6 , VAR_7 , item , VAR_8 , 0.0 , 0.0 ) ; } } }