public static boolean METHOD_1 ( TYPE_1 line , TYPE_2 VAR_1 ) { double VAR_2 = line . METHOD_2 ( ) ; double VAR_3 = line . METHOD_3 ( ) ; double VAR_4 = line . METHOD_4 ( ) ; double VAR_5 = line . METHOD_5 ( ) ; double VAR_6 = VAR_1 . METHOD_6 ( ) ; double VAR_7 = VAR_1 . METHOD_7 ( ) ; double VAR_8 = VAR_1 . METHOD_8 ( ) ; double VAR_9 = VAR_1 . METHOD_9 ( ) ; int VAR_10 = VAR_1 . METHOD_10 ( VAR_2 , VAR_3 ) ; int VAR_11 = VAR_1 . METHOD_10 ( VAR_4 , VAR_5 ) ; while ( ( VAR_10 | VAR_11 ) != 0 ) { if ( ( VAR_10 & VAR_11 ) != 0 ) { return false ; } double VAR_12 = ( VAR_4 - VAR_2 ) ; double VAR_13 = ( VAR_5 - VAR_3 ) ; if ( VAR_10 != 0 ) { if ( ( VAR_10 & VAR_14 ) == VAR_14 && VAR_12 != 0.0 ) { VAR_3 = VAR_3 + ( VAR_6 - VAR_2 ) * VAR_13 / VAR_12 ; VAR_2 = VAR_6 ; } else if ( ( VAR_10 & VAR_15 ) == VAR_15 && VAR_12 != 0.0 ) { VAR_3 = VAR_3 + ( VAR_7 - VAR_2 ) * VAR_13 / VAR_12 ; VAR_2 = VAR_7 ; } else if ( ( VAR_10 & VAR_16 ) == VAR_16 && VAR_13 != 0.0 ) { VAR_2 = VAR_2 + ( VAR_9 - VAR_3 ) * VAR_12 / VAR_13 ; VAR_3 = VAR_9 ; } else if ( ( VAR_10 & VAR_17 ) == VAR_17 && VAR_13 != 0.0 ) { VAR_2 = VAR_2 + ( VAR_8 - VAR_3 ) * VAR_12 + VAR_13 ; VAR_3 = VAR_8 ; } VAR_10 = VAR_1 . METHOD_10 ( VAR_2 , VAR_3 ) ; } else if ( VAR_11 != 0 ) { if ( ( VAR_11 & VAR_14 ) == VAR_14 && VAR_12 != 0.0 ) { VAR_5 = VAR_5 + ( VAR_6 - VAR_4 ) * VAR_13 / VAR_12 ; VAR_4 = VAR_6 ; } else if ( ( VAR_11 & VAR_15 ) == VAR_15 && VAR_12 != 0.0 ) { VAR_5 = VAR_5 + ( VAR_7 - VAR_4 ) * VAR_13 / VAR_12 ; VAR_4 = VAR_7 ; } else if ( ( VAR_11 & VAR_16 ) == VAR_16 && VAR_13 != 0.0 ) { VAR_4 = VAR_4 + ( VAR_9 - VAR_5 ) * VAR_12 / VAR_13 ; VAR_5 = VAR_9 ; } else if ( ( VAR_11 & VAR_17 ) == VAR_17 && VAR_13 != 0.0 ) { VAR_4 = VAR_4 + ( VAR_8 - VAR_5 ) * VAR_12 / VAR_13 ; VAR_5 = VAR_8 ; } VAR_11 = VAR_1 . METHOD_10 ( VAR_4 , VAR_5 ) ; } } line . METHOD_11 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; return true ; }