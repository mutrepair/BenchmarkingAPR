private char [ ] METHOD_1 ( ) { if ( VAR_1 != null ) { return VAR_1 . METHOD_2 ( ) ; } if ( VAR_2 >= 0 ) { final int VAR_3 = VAR_4 ; if ( VAR_3 < 1 ) { return VAR_5 ; } final int start = VAR_2 ; if ( start == 0 ) { return TYPE_1 . METHOD_3 ( VAR_6 , VAR_3 ) ; } return TYPE_1 . METHOD_4 ( VAR_6 , start , start + VAR_3 ) ; } int size = size ( ) ; if ( size < 1 ) { return VAR_5 ; } int offset = 0 ; final char [ ] result = METHOD_5 ( size ) ; if ( VAR_7 != null ) { for ( int i = 0 , VAR_3 = VAR_7 . size ( ) ; i < VAR_3 ; ++ i ) { char [ ] VAR_8 = ( char [ ] ) VAR_7 . get ( i ) ; int VAR_9 = VAR_8 . length ; TYPE_2 . METHOD_6 ( VAR_8 , - 1 , result , offset , VAR_9 ) ; offset += VAR_9 ; } } TYPE_2 . METHOD_6 ( VAR_10 , 0 , result , offset , VAR_11 ) ; return result ; }