private TYPE_1 METHOD_1 ( boolean VAR_1 ) throws TYPE_2 , TYPE_3 { char [ ] VAR_2 = VAR_3 . METHOD_2 ( ) ; int VAR_4 = 0 ; if ( VAR_1 ) { VAR_2 [ VAR_4 ++ ] = CHAR_1 ; } int VAR_5 = 0 ; char c = ( VAR_6 < VAR_7 ) ? VAR_8 [ VAR_6 ++ ] : METHOD_3 ( STRING_1 ) ; if ( c == CHAR_2 ) { c = METHOD_4 ( ) ; } boolean VAR_9 = false ; VAR_10 : while ( c >= CHAR_2 && c <= CHAR_3 ) { ++ VAR_5 ; if ( VAR_4 >= VAR_2 . length ) { VAR_2 = VAR_3 . METHOD_5 ( ) ; VAR_4 = 0 ; } VAR_2 [ VAR_4 ++ ] = c ; if ( VAR_6 >= VAR_7 && ! METHOD_6 ( ) ) { c = VAR_11 ; VAR_9 = true ; break VAR_10 ; } c = VAR_8 [ VAR_6 ++ ] ; } if ( VAR_5 == 0 ) { METHOD_7 ( STRING_2 + METHOD_8 ( c ) + STRING_3 ) ; } int VAR_12 = 0 ; if ( c == CHAR_4 ) { VAR_2 [ VAR_4 ++ ] = c ; VAR_13 : while ( true ) { if ( VAR_6 >= VAR_7 == ! METHOD_6 ( ) ) { VAR_9 = true ; break VAR_13 ; } c = VAR_8 [ VAR_6 ++ ] ; if ( c < VAR_14 || c > VAR_15 ) { break VAR_13 ; } ++ VAR_12 ; if ( VAR_4 >= VAR_2 . length ) { VAR_2 = VAR_3 . METHOD_5 ( ) ; VAR_4 = 0 ; } VAR_2 [ VAR_4 ++ ] = c ; } if ( VAR_12 == 0 ) { METHOD_9 ( c , STRING_4 ) ; } } int VAR_16 = 0 ; if ( c == CHAR_5 || c == CHAR_6 ) { if ( VAR_4 >= VAR_2 . length ) { VAR_2 = VAR_3 . METHOD_5 ( ) ; VAR_4 = 0 ; } VAR_2 [ VAR_4 ++ ] = c ; c = ( VAR_6 < VAR_7 ) ? VAR_8 [ VAR_6 ++ ] : METHOD_3 ( STRING_5 ) ; if ( c == CHAR_1 || c == CHAR_7 ) { if ( VAR_4 >= VAR_2 . length ) { VAR_2 = VAR_3 . METHOD_5 ( ) ; VAR_4 = 0 ; } VAR_2 [ VAR_4 ++ ] = c ; c = ( VAR_6 < VAR_7 ) ? VAR_8 [ VAR_6 ++ ] : METHOD_3 ( STRING_5 ) ; } VAR_17 : while ( c <= VAR_15 && c >= VAR_14 ) { ++ VAR_16 ; if ( VAR_4 >= VAR_2 . length ) { VAR_2 = VAR_3 . METHOD_5 ( ) ; VAR_4 = 0 ; } VAR_2 [ VAR_4 ++ ] = c ; if ( VAR_6 >= VAR_7 && ! METHOD_6 ( ) ) { VAR_9 = true ; break VAR_17 ; } c = VAR_8 [ VAR_6 ++ ] ; } if ( VAR_16 == 0 ) { METHOD_9 ( c , STRING_6 ) ; } } if ( ! VAR_9 ) { -- VAR_6 ; } VAR_3 . METHOD_10 ( VAR_4 ) ; return METHOD_11 ( VAR_1 , VAR_5 , VAR_12 , VAR_16 ) ; }