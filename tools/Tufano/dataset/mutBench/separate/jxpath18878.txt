public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String name , TYPE_3 [ ] parameters ) { boolean VAR_2 = true ; int count = parameters == null ? 0 : parameters . length ; TYPE_2 VAR_3 [ ] = new TYPE_2 [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { TYPE_3 param = parameters [ i ] ; if ( param != null ) { VAR_3 [ i ] = param . getClass ( ) ; } else { VAR_3 [ i ] = null ; VAR_2 = false ; } } TYPE_1 method = null ; if ( VAR_2 ) { try { method = VAR_1 . METHOD_2 ( name , VAR_3 ) ; if ( method != null && TYPE_4 . METHOD_3 ( method . METHOD_4 ( ) ) ) { return method ; } } catch ( TYPE_5 VAR_4 ) { } } int VAR_5 = 1 ; boolean VAR_6 = false ; TYPE_1 [ ] VAR_7 = VAR_1 . METHOD_5 ( ) ; for ( int i = 0 ; i < VAR_7 . length ; i ++ ) { if ( TYPE_4 . METHOD_3 ( VAR_7 [ i ] . METHOD_4 ( ) ) && VAR_7 [ i ] . getName ( ) . equals ( name ) ) { int VAR_8 = METHOD_6 ( VAR_7 [ i ] . METHOD_7 ( ) , parameters ) ; if ( VAR_8 != VAR_9 ) { if ( VAR_8 > VAR_5 ) { method = VAR_7 [ i ] ; VAR_5 = VAR_8 ; VAR_6 = false ; } else if ( VAR_8 == VAR_5 ) { VAR_6 = true ; } } } } if ( VAR_6 ) { throw new TYPE_6 ( STRING_1 + name ) ; } return method ; }