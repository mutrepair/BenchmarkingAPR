public double METHOD_1 ( final long [ ] VAR_1 , final long [ ] VAR_2 ) throws TYPE_1 , TYPE_2 , TYPE_3 { if ( VAR_1 . length < INT_1 ) { throw new TYPE_1 ( VAR_1 . length , INT_1 ) ; } if ( VAR_1 . length != VAR_2 . length ) { throw new TYPE_1 ( VAR_1 . length , VAR_2 . length ) ; } TYPE_4 . METHOD_2 ( VAR_1 ) ; TYPE_4 . METHOD_2 ( VAR_2 ) ; long VAR_3 = 0 ; long VAR_4 = 0 ; final long [ ] VAR_5 = new long [ VAR_1 . length ] ; final long [ ] [ ] k = new long [ INT_1 ] [ VAR_1 . length ] ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { if ( VAR_2 [ i ] == 0 ) { throw new TYPE_3 ( VAR_6 , i ) ; } else { VAR_3 += VAR_1 [ i ] ; VAR_4 += VAR_2 [ i ] ; VAR_5 [ i ] = VAR_1 [ i ] + VAR_2 [ i ] ; k [ 0 ] [ i ] = VAR_1 [ i ] ; k [ 1 ] [ i ] = VAR_2 [ i ] ; } } if ( VAR_3 == 0 || VAR_4 == 0 ) { throw new TYPE_3 ( ) ; } final long [ ] VAR_7 = { VAR_3 , VAR_4 } ; final double sum = ( double ) VAR_3 + ( double ) VAR_4 ; return INT_1 * sum * ( METHOD_3 ( VAR_7 ) + METHOD_3 ( VAR_5 ) - METHOD_3 ( k ) ) ; }