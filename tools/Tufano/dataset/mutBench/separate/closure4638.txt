private TYPE_1 METHOD_1 ( TYPE_2 n , String VAR_1 , TYPE_3 < TYPE_1 > VAR_2 ) { switch ( n . getType ( ) ) { case VAR_3 : return METHOD_2 ( n . METHOD_3 ( ) , VAR_1 , VAR_2 ) ; case VAR_4 : return METHOD_1 ( n . METHOD_3 ( ) , VAR_1 , VAR_2 ) . METHOD_4 ( ) ; case VAR_5 : TYPE_2 VAR_6 = n . METHOD_3 ( ) ; if ( VAR_6 == null ) { return METHOD_5 ( VAR_7 ) ; } return METHOD_6 ( METHOD_1 ( VAR_6 , VAR_1 , VAR_2 ) ) ; case VAR_8 : return METHOD_7 ( METHOD_1 ( n . METHOD_3 ( ) , VAR_1 , VAR_2 ) ) ; case VAR_9 : return METHOD_7 ( METHOD_1 ( n . METHOD_3 ( ) , VAR_1 , VAR_2 ) ) ; case VAR_10 : return METHOD_5 ( VAR_11 ) ; case VAR_12 : return METHOD_5 ( VAR_13 ) ; case VAR_14 : TYPE_4 VAR_15 = new TYPE_4 ( this ) ; for ( TYPE_2 VAR_16 = n . METHOD_3 ( ) ; VAR_16 != null ; VAR_16 = VAR_16 . METHOD_8 ( ) ) { VAR_15 . METHOD_9 ( METHOD_1 ( VAR_16 , VAR_1 , VAR_2 ) ) ; } return VAR_15 . build ( ) ; case VAR_17 : return METHOD_5 ( VAR_7 ) ; case VAR_18 : return METHOD_5 ( VAR_19 ) ; case VAR_20 : TYPE_1 VAR_21 = getType ( VAR_2 , n . getString ( ) , VAR_1 , n . METHOD_10 ( ) , n . METHOD_11 ( ) ) ; if ( VAR_22 != VAR_23 ) { VAR_21 = VAR_21 . METHOD_12 ( VAR_24 , VAR_2 ) ; } if ( ( VAR_21 instanceof TYPE_5 ) && ! ( VAR_25 . contains ( n . getString ( ) ) ) ) { TYPE_2 VAR_26 = n . METHOD_3 ( ) ; if ( VAR_26 != null && ( STRING_1 . equals ( n . getString ( ) ) || STRING_2 . equals ( n . getString ( ) ) ) ) { TYPE_1 VAR_27 = METHOD_1 ( VAR_26 . METHOD_13 ( ) , VAR_1 , VAR_2 ) ; VAR_21 = new TYPE_6 ( this , ( TYPE_5 ) VAR_21 , VAR_27 ) ; if ( VAR_26 . METHOD_14 ( ) ) { TYPE_1 VAR_28 = METHOD_1 ( VAR_26 . METHOD_3 ( ) , VAR_1 , VAR_2 ) ; VAR_21 = new TYPE_7 ( this , ( TYPE_5 ) VAR_21 , VAR_28 ) ; } } return METHOD_6 ( VAR_21 ) ; } else { return VAR_21 ; } case VAR_29 : TYPE_5 VAR_30 = null ; boolean VAR_31 = false ; TYPE_2 VAR_32 = n . METHOD_3 ( ) ; if ( VAR_32 . getType ( ) == VAR_33 || false ) { TYPE_2 VAR_34 = VAR_32 . METHOD_3 ( ) ; VAR_30 = TYPE_5 . METHOD_15 ( METHOD_1 ( VAR_34 , VAR_1 , VAR_2 ) . METHOD_4 ( ) ) ; if ( VAR_30 == null ) { VAR_24 . METHOD_16 ( TYPE_8 . METHOD_17 ( VAR_32 . getType ( ) == VAR_33 ? STRING_3 : STRING_4 ) , VAR_1 , VAR_34 . METHOD_10 ( ) , VAR_34 . METHOD_11 ( ) ) ; } VAR_31 = VAR_32 . getType ( ) == VAR_35 ; VAR_32 = VAR_32 . METHOD_8 ( ) ; } TYPE_9 VAR_36 = new TYPE_9 ( this ) ; if ( VAR_32 . getType ( ) == VAR_37 ) { TYPE_2 args = VAR_32 . METHOD_3 ( ) ; for ( TYPE_2 arg = VAR_32 . METHOD_3 ( ) ; arg != null ; arg = arg . METHOD_8 ( ) ) { if ( arg . getType ( ) == VAR_9 ) { if ( arg . METHOD_18 ( ) == 0 ) { VAR_36 . METHOD_19 ( METHOD_5 ( VAR_7 ) ) ; } else { VAR_36 . METHOD_19 ( METHOD_1 ( arg . METHOD_3 ( ) , VAR_1 , VAR_2 ) ) ; } } else { TYPE_1 type = METHOD_1 ( arg , VAR_1 , VAR_2 ) ; if ( arg . getType ( ) == VAR_8 ) { boolean VAR_38 = VAR_36 . METHOD_20 ( type ) ; if ( ! VAR_38 ) { VAR_24 . METHOD_16 ( TYPE_8 . METHOD_17 ( STRING_5 ) , VAR_1 , arg . METHOD_10 ( ) , arg . METHOD_11 ( ) ) ; } } else { VAR_36 . METHOD_21 ( type ) ; } } } VAR_32 = VAR_32 . METHOD_8 ( ) ; } TYPE_1 VAR_39 = METHOD_1 ( VAR_32 , VAR_1 , VAR_2 ) ; return new TYPE_10 ( this ) . METHOD_22 ( VAR_36 ) . METHOD_23 ( VAR_39 ) . METHOD_24 ( VAR_30 ) . METHOD_25 ( VAR_31 ) . build ( ) ; } throw new TYPE_11 ( STRING_6 + n . toString ( ) ) ; }