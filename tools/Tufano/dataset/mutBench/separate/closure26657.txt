private void METHOD_1 ( TYPE_1 n ) { TYPE_1 VAR_1 = n . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_3 ( ) ; boolean VAR_4 = true ; if ( VAR_3 == null ) { VAR_3 = VAR_2 ; VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_4 = false ; } else if ( VAR_2 . METHOD_4 ( ) && ( VAR_2 . METHOD_5 ( ) . getString ( ) . equals ( STRING_1 ) || VAR_5 . METHOD_6 ( VAR_2 ) ) ) { VAR_4 = false ; } if ( ! VAR_3 . METHOD_7 ( ) ) { return ; } TYPE_1 VAR_6 = TYPE_2 . METHOD_8 ( ) . METHOD_9 ( n ) ; if ( VAR_4 ) { TYPE_1 VAR_7 = TYPE_2 . METHOD_10 ( VAR_2 . METHOD_11 ( ) , TYPE_2 . METHOD_12 ( ) . METHOD_9 ( n ) ) . METHOD_9 ( n ) ; TYPE_1 VAR_8 = TYPE_2 . METHOD_13 ( VAR_2 . METHOD_11 ( ) , VAR_7 ) . METHOD_9 ( n ) ; VAR_6 . METHOD_14 ( TYPE_2 . METHOD_15 ( VAR_8 ) . METHOD_9 ( n ) ) ; } while ( VAR_3 . METHOD_7 ( ) ) { TYPE_1 VAR_9 = VAR_3 . METHOD_16 ( ) ; VAR_9 . METHOD_17 ( VAR_10 ) ; TYPE_1 VAR_11 = VAR_9 . METHOD_16 ( ) ; TYPE_1 VAR_12 ; if ( true ) { VAR_12 = TYPE_2 . METHOD_18 ( VAR_2 . METHOD_11 ( ) , VAR_9 ) . METHOD_9 ( VAR_9 ) ; } else { VAR_12 = TYPE_2 . METHOD_19 ( VAR_2 . METHOD_11 ( ) , VAR_9 ) . METHOD_9 ( VAR_9 ) ; } TYPE_1 VAR_13 = TYPE_2 . METHOD_13 ( VAR_12 , VAR_11 ) . METHOD_9 ( VAR_9 ) ; VAR_6 . METHOD_20 ( TYPE_2 . METHOD_15 ( VAR_13 ) . METHOD_9 ( VAR_9 ) ) ; } if ( n . METHOD_21 ( ) . METHOD_22 ( ) ) { TYPE_1 VAR_14 = n . METHOD_21 ( ) ; VAR_14 . METHOD_21 ( ) . METHOD_23 ( VAR_14 , VAR_6 ) ; } else { TYPE_1 VAR_15 ; if ( STRING_2 . equals ( VAR_2 . METHOD_24 ( ) ) ) { VAR_15 = VAR_2 . METHOD_16 ( ) ; } else { VAR_15 = VAR_2 . METHOD_25 ( ) ; } VAR_6 . METHOD_20 ( TYPE_2 . METHOD_26 ( VAR_15 ) . METHOD_9 ( VAR_15 ) ) ; TYPE_1 VAR_16 = TYPE_2 . function ( TYPE_2 . name ( STRING_3 ) . METHOD_9 ( n ) , TYPE_2 . METHOD_27 ( ) . METHOD_9 ( n ) , VAR_6 ) ; n . METHOD_23 ( VAR_1 , VAR_16 ) ; n . METHOD_28 ( VAR_17 , true ) ; while ( VAR_16 . METHOD_3 ( ) != null ) { n . METHOD_29 ( VAR_16 ) ; } } VAR_18 . METHOD_30 ( ) ; }