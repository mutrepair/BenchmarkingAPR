private static double METHOD_1 ( double x , double VAR_1 , double [ ] VAR_2 ) { double VAR_3 ; double VAR_4 ; int VAR_5 ; if ( x < 0.0 ) { VAR_5 = ( int ) - x ; if ( VAR_5 > INT_1 ) { if ( VAR_2 != null ) { VAR_2 [ 0 ] = 1.0 ; VAR_2 [ 1 ] = 0.0 ; } return 0.0 ; } if ( VAR_5 > INT_2 ) { final double result = METHOD_1 ( x + FLOAT_1 , VAR_1 , VAR_2 ) / FLOAT_2 ; if ( VAR_2 != null ) { VAR_2 [ 0 ] /= FLOAT_2 ; VAR_2 [ 1 ] /= FLOAT_2 ; } return result ; } if ( VAR_5 == INT_2 ) { final double result = METHOD_1 ( x + FLOAT_3 , VAR_1 , VAR_2 ) / FLOAT_4 ; if ( VAR_2 != null ) { VAR_2 [ 0 ] /= FLOAT_4 ; VAR_2 [ 1 ] /= FLOAT_4 ; } return result ; } VAR_5 ++ ; VAR_3 = VAR_6 [ VAR_7 - VAR_5 ] ; VAR_4 = VAR_8 [ VAR_7 - VAR_5 ] ; VAR_5 = - VAR_5 ; } else { VAR_5 = ( int ) x ; if ( VAR_5 > INT_2 ) { if ( VAR_2 != null ) { VAR_2 [ 0 ] = VAR_9 ; VAR_2 [ 1 ] = 0.0 ; } return VAR_9 ; } VAR_3 = VAR_6 [ VAR_7 + VAR_5 ] ; VAR_4 = VAR_8 [ VAR_7 + VAR_5 ] ; } final int VAR_10 = ( int ) ( ( x - VAR_5 ) * FLOAT_5 ) ; final double VAR_11 = VAR_12 [ VAR_10 ] ; final double VAR_13 = VAR_14 [ VAR_10 ] ; final double VAR_15 = x - ( VAR_5 + VAR_10 / FLOAT_5 ) ; double VAR_16 = FLOAT_6 ; VAR_16 = VAR_16 * VAR_15 + FLOAT_7 ; VAR_16 = VAR_16 * VAR_15 + FLOAT_8 ; VAR_16 = VAR_16 * VAR_15 + 1.0 ; VAR_16 = VAR_16 * VAR_15 + - FLOAT_9 ; double VAR_17 = VAR_3 * VAR_11 ; double VAR_18 = VAR_3 * VAR_13 + VAR_4 * VAR_11 + VAR_4 * VAR_13 ; final double VAR_19 = VAR_18 + VAR_17 ; final double result ; if ( VAR_1 != 0.0 ) { result = VAR_19 * VAR_1 * VAR_16 + VAR_19 * VAR_1 + VAR_19 * VAR_16 + VAR_18 + VAR_17 ; } else { result = VAR_19 * VAR_16 + VAR_18 + VAR_17 ; } if ( VAR_2 != null ) { VAR_2 [ 0 ] = VAR_17 ; VAR_2 [ 1 ] = VAR_19 * VAR_1 * VAR_16 + VAR_19 * VAR_1 + VAR_19 * VAR_16 + VAR_18 ; } return result ; }