private TYPE_1 METHOD_1 ( final boolean VAR_1 ) throws TYPE_2 { TYPE_1 VAR_2 ; if ( VAR_1 ) { VAR_2 = new TYPE_1 ( VAR_3 ) ; } else { VAR_2 = new TYPE_1 ( VAR_4 ) ; } VAR_2 . METHOD_2 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_4 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_5 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_6 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_7 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_8 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_9 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_10 ( METHOD_3 ( INT_1 , - INT_2 ) ) ; VAR_2 . METHOD_11 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_12 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_13 ( METHOD_3 ( INT_1 , INT_2 ) ) ; long VAR_5 = METHOD_3 ( INT_1 , INT_2 ) ; VAR_2 . METHOD_14 ( METHOD_3 ( INT_1 , INT_2 ) ) ; VAR_2 . METHOD_15 ( METHOD_16 ( ( int ) VAR_5 ) ) ; METHOD_17 ( VAR_2 . METHOD_18 ( ) + VAR_5 , INT_3 ) ; return VAR_2 ; }