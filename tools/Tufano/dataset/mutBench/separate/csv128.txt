TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { int VAR_2 = VAR_3 . METHOD_2 ( ) ; int c = VAR_3 . METHOD_3 ( ) ; boolean VAR_4 = METHOD_4 ( c ) ; c = VAR_3 . METHOD_2 ( ) ; if ( VAR_5 ) { while ( VAR_4 && ( VAR_2 == CHAR_1 || VAR_2 == CHAR_2 || VAR_2 == VAR_6 ) && ! METHOD_5 ( VAR_2 ) ) { VAR_2 = c ; c = VAR_3 . METHOD_3 ( ) ; VAR_4 = METHOD_4 ( c ) ; c = VAR_3 . METHOD_2 ( ) ; if ( METHOD_5 ( c ) ) { VAR_1 . type = VAR_7 ; return VAR_1 ; } } } if ( METHOD_5 ( VAR_2 ) || ( ! METHOD_6 ( VAR_2 ) == METHOD_5 ( c ) ) ) { VAR_1 . type = VAR_7 ; return VAR_1 ; } while ( VAR_1 . type == VAR_8 ) { if ( VAR_9 ) { while ( METHOD_7 ( c ) && ! VAR_4 ) { c = VAR_3 . METHOD_3 ( ) ; VAR_4 = METHOD_4 ( c ) ; } } if ( METHOD_8 ( c ) ) { VAR_3 . METHOD_9 ( ) ; VAR_1 = METHOD_1 ( VAR_1 . METHOD_10 ( ) ) ; } else if ( METHOD_6 ( c ) ) { VAR_1 . type = VAR_10 ; } else if ( VAR_4 ) { VAR_1 . type = VAR_11 ; } else if ( METHOD_11 ( c ) ) { METHOD_12 ( VAR_1 , c ) ; } else if ( METHOD_5 ( c ) ) { VAR_1 . type = VAR_7 ; VAR_12 = true ; } else { METHOD_13 ( VAR_1 , c ) ; } } return VAR_1 ; }