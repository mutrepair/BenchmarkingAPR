private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; int [ ] VAR_3 = VAR_4 ; int VAR_5 = VAR_3 . length ; int VAR_6 = VAR_5 + VAR_5 ; if ( VAR_6 > VAR_7 ) { METHOD_2 ( ) ; return ; } VAR_4 = new int [ VAR_6 ] ; VAR_8 = ( VAR_6 + 1 ) ; TYPE_1 [ ] VAR_9 = VAR_10 ; VAR_10 = new TYPE_1 [ VAR_6 ] ; int VAR_11 = 0 ; for ( int i = 0 ; i < VAR_5 ; ++ i ) { TYPE_1 VAR_12 = VAR_9 [ i ] ; if ( VAR_12 != null ) { ++ VAR_11 ; int VAR_13 = VAR_12 . METHOD_3 ( ) ; int VAR_14 = ( VAR_13 & VAR_8 ) ; VAR_10 [ VAR_14 ] = VAR_12 ; VAR_4 [ VAR_14 ] = VAR_13 < < INT_1 ; } } int VAR_15 = VAR_16 ; if ( VAR_15 == 0 ) { VAR_17 = 0 ; return ; } VAR_18 = 0 ; VAR_16 = 0 ; VAR_19 = false ; int VAR_20 = 0 ; TYPE_2 [ ] VAR_21 = VAR_22 ; VAR_22 = new TYPE_2 [ VAR_21 . length ] ; for ( int i = 0 ; i < VAR_15 ; ++ i ) { for ( TYPE_2 VAR_23 = VAR_21 [ i ] ; VAR_23 != null ; VAR_23 = VAR_24 ) { ++ VAR_11 ; TYPE_1 VAR_12 = VAR_25 ; int VAR_13 = VAR_12 . METHOD_3 ( ) ; int VAR_14 = ( VAR_13 & VAR_8 ) ; int VAR_26 = VAR_4 [ VAR_14 ] ; if ( VAR_10 [ VAR_14 ] == null ) { VAR_4 [ VAR_14 ] = ( VAR_13 < < INT_1 ) ; VAR_10 [ VAR_14 ] = VAR_12 ; } else { ++ VAR_18 ; int VAR_27 = VAR_26 & INT_2 ; if ( VAR_27 == 0 ) { if ( VAR_16 <= VAR_28 ) { VAR_27 = VAR_16 ; ++ VAR_16 ; if ( VAR_27 >= VAR_22 . length ) { METHOD_4 ( ) ; } } else { VAR_27 = METHOD_5 ( ) ; } VAR_4 [ VAR_14 ] = ( VAR_26 & ~ INT_2 ) | ( VAR_27 + 1 ) ; } else { -- VAR_27 ; } TYPE_2 VAR_29 = new TYPE_2 ( VAR_12 , VAR_22 [ VAR_27 ] ) ; VAR_22 [ VAR_27 ] = VAR_29 ; VAR_20 = TYPE_3 . METHOD_6 ( VAR_20 , VAR_29 . length ( ) ) ; } } } VAR_17 = VAR_20 ; if ( VAR_11 != VAR_30 ) { throw new TYPE_4 ( STRING_1 + VAR_11 + STRING_2 + VAR_30 ) ; } }