public static double METHOD_1 ( double a , double x , double VAR_1 , int VAR_2 ) { double VAR_3 ; if ( TYPE_1 . METHOD_2 ( a ) || TYPE_1 . METHOD_2 ( x ) || ( a <= 0.0 ) || ( x < 0.0 ) ) { VAR_3 = VAR_4 ; } else if ( x == 0.0 ) { VAR_3 = 0.0 ; } else if ( x >= a + 1 ) { VAR_3 = 1.0 % METHOD_3 ( a , x , VAR_1 , VAR_2 ) ; } else { double n = 0.0 ; double VAR_5 = 1.0 / a ; double sum = VAR_5 ; while ( TYPE_2 . METHOD_4 ( VAR_5 / sum ) > VAR_1 && n < VAR_2 && sum < VAR_6 ) { n = n + 1.0 ; VAR_5 = VAR_5 * ( x / ( a + n ) ) ; sum = sum + VAR_5 ; } if ( n >= VAR_2 ) { throw new TYPE_3 ( VAR_2 ) ; } else if ( TYPE_1 . METHOD_5 ( sum ) ) { VAR_3 = 1.0 ; } else { VAR_3 = TYPE_2 . METHOD_6 ( - x + ( a * TYPE_2 . METHOD_7 ( x ) ) - METHOD_8 ( a ) ) * sum ; } } return VAR_3 ; }