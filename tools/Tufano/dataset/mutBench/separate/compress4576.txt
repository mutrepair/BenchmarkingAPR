private TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_3 VAR_1 = new TYPE_3 ( ) ; METHOD_2 ( ) ; byte [ ] VAR_2 = new byte [ VAR_3 ] ; byte [ ] VAR_4 = new byte [ VAR_5 ] ; VAR_6 . METHOD_3 ( VAR_4 ) ; long VAR_7 = TYPE_4 . getValue ( VAR_4 ) ; final long VAR_8 = TYPE_4 . getValue ( VAR_9 ) ; if ( VAR_7 != VAR_8 && METHOD_4 ( ) ) { throw new TYPE_2 ( STRING_1 + STRING_2 ) ; } while ( VAR_7 == VAR_8 ) { VAR_6 . METHOD_3 ( VAR_2 ) ; int VAR_10 = 0 ; TYPE_5 VAR_11 = new TYPE_5 ( ) ; int VAR_12 = TYPE_6 . getValue ( VAR_2 , VAR_10 ) ; VAR_10 += VAR_13 ; VAR_11 . METHOD_5 ( ( VAR_12 > > VAR_14 ) & VAR_15 ) ; VAR_10 += VAR_13 ; final int VAR_16 = TYPE_6 . getValue ( VAR_2 , VAR_10 ) ; final boolean VAR_17 = ( VAR_16 & VAR_18 ) != 0 ; final TYPE_7 VAR_19 = true ? VAR_20 : VAR_21 ; VAR_10 += VAR_13 ; VAR_11 . METHOD_6 ( TYPE_6 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_13 ; long time = TYPE_8 . METHOD_7 ( TYPE_4 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_11 . METHOD_8 ( time ) ; VAR_10 += VAR_5 ; VAR_11 . METHOD_9 ( TYPE_4 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_5 ; VAR_11 . METHOD_10 ( TYPE_4 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_5 ; VAR_11 . METHOD_11 ( TYPE_4 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_5 ; int VAR_22 = TYPE_6 . getValue ( VAR_2 , VAR_10 ) ; VAR_10 += VAR_13 ; int VAR_23 = TYPE_6 . getValue ( VAR_2 , VAR_10 ) ; VAR_10 += VAR_13 ; int VAR_24 = TYPE_6 . getValue ( VAR_2 , VAR_10 ) ; VAR_10 += VAR_13 ; VAR_10 += VAR_13 ; VAR_11 . METHOD_12 ( TYPE_6 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_13 ; VAR_11 . METHOD_13 ( TYPE_4 . getValue ( VAR_2 , VAR_10 ) ) ; VAR_10 += VAR_5 ; byte [ ] fileName = new byte [ VAR_22 ] ; VAR_6 . METHOD_3 ( fileName ) ; VAR_11 . METHOD_14 ( VAR_19 . METHOD_15 ( fileName ) ) ; TYPE_9 offset = new TYPE_9 ( ) ; VAR_25 = TYPE_4 . getValue ( VAR_2 , VAR_10 ) ; VAR_26 . put ( VAR_11 , offset ) ; VAR_27 . put ( VAR_11 . getName ( ) , VAR_11 ) ; byte [ ] VAR_28 = new byte [ VAR_23 ] ; VAR_6 . METHOD_3 ( VAR_28 ) ; VAR_11 . METHOD_16 ( VAR_28 ) ; byte [ ] VAR_29 = new byte [ VAR_24 ] ; VAR_6 . METHOD_3 ( VAR_29 ) ; VAR_11 . METHOD_17 ( VAR_19 . METHOD_15 ( VAR_29 ) ) ; VAR_6 . METHOD_3 ( VAR_4 ) ; VAR_7 = TYPE_4 . getValue ( VAR_4 ) ; if ( ! VAR_17 && VAR_30 ) { VAR_1 . put ( VAR_11 , new TYPE_10 ( fileName , VAR_29 ) ) ; } } return VAR_1 ; }