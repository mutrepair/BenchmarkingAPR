private int METHOD_1 ( char [ ] buffer , int VAR_1 , int end , char VAR_2 , int VAR_3 ) throws TYPE_1 , TYPE_2 { if ( VAR_3 >= 0 ) { if ( VAR_1 > 1 && VAR_1 < end ) { VAR_1 -= INT_1 ; buffer [ VAR_1 ] = CHAR_1 ; buffer [ VAR_1 + 1 ] = ( char ) VAR_3 ; } else { char [ ] VAR_4 = VAR_5 ; if ( VAR_4 == null ) { VAR_4 = METHOD_2 ( ) ; } VAR_4 [ 1 ] = ( char ) VAR_3 ; VAR_6 . METHOD_3 ( VAR_4 , 0 , INT_1 ) ; } return VAR_1 ; } if ( VAR_3 != VAR_7 ) { if ( VAR_1 >= INT_2 && VAR_1 < end ) { VAR_1 -= INT_3 ; buffer [ VAR_1 ++ ] = CHAR_1 ; buffer [ VAR_1 ++ ] = CHAR_2 ; if ( VAR_2 > INT_4 ) { int VAR_8 = ( VAR_2 > > INT_5 ) & INT_4 ; buffer [ VAR_1 ++ ] = VAR_9 [ VAR_8 > > INT_6 ] ; buffer [ VAR_1 ++ ] = VAR_9 [ VAR_8 & INT_7 ] ; VAR_2 &= INT_4 ; } else { buffer [ VAR_1 ++ ] = CHAR_3 ; buffer [ VAR_1 ++ ] = CHAR_3 ; } buffer [ VAR_1 ++ ] = VAR_9 [ VAR_2 > > INT_6 ] ; buffer [ VAR_1 ] = VAR_9 [ VAR_2 & INT_7 ] ; VAR_1 -= INT_2 ; } else { char [ ] VAR_4 = VAR_5 ; if ( VAR_4 == null ) { VAR_4 = METHOD_2 ( ) ; } VAR_10 = VAR_11 ; if ( VAR_2 > INT_4 ) { int VAR_8 = ( VAR_2 > > INT_5 ) & INT_4 ; int VAR_12 = VAR_2 & INT_4 ; VAR_4 [ INT_8 ] = VAR_9 [ VAR_8 > > INT_6 ] ; VAR_4 [ INT_9 ] = VAR_9 [ VAR_8 & INT_7 ] ; VAR_4 [ INT_10 ] = VAR_9 [ VAR_12 > > INT_6 ] ; VAR_4 [ INT_11 ] = VAR_9 [ VAR_12 & INT_7 ] ; VAR_6 . METHOD_3 ( VAR_4 , INT_5 , INT_3 ) ; } else { VAR_4 [ INT_3 ] = VAR_9 [ VAR_2 > > INT_6 ] ; VAR_4 [ INT_12 ] = VAR_9 [ VAR_2 & INT_7 ] ; VAR_6 . METHOD_3 ( VAR_4 , INT_1 , INT_3 ) ; } } return VAR_1 ; } String VAR_13 ; if ( VAR_14 == null ) { VAR_13 = VAR_15 . METHOD_4 ( VAR_2 ) . getValue ( ) ; } else { VAR_13 = VAR_14 . getValue ( ) ; VAR_14 = null ; } int VAR_16 = VAR_13 . length ( ) ; if ( VAR_1 >= VAR_16 && VAR_1 < end ) { VAR_1 -= VAR_16 ; VAR_13 . METHOD_5 ( 0 , VAR_16 , buffer , VAR_1 ) ; } else { VAR_6 . METHOD_3 ( VAR_13 ) ; } return VAR_1 ; }