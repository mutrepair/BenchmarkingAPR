void METHOD_1 ( ) { TYPE_1 < String , TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( ) ; TYPE_1 < TYPE_4 , TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( ) ; for ( TYPE_4 VAR_3 : VAR_4 ) { VAR_3 . METHOD_3 ( this ) ; TYPE_5 VAR_5 = VAR_3 . METHOD_4 ( this ) ; if ( VAR_5 == null ) { continue ; } if ( VAR_6 ) { new TYPE_6 ( this ) . METHOD_5 ( null , VAR_5 ) ; } if ( VAR_7 ) { TYPE_7 VAR_8 = new TYPE_7 ( this , VAR_9 ) ; VAR_8 . METHOD_5 ( null , VAR_5 ) ; TYPE_2 VAR_10 = VAR_8 . METHOD_6 ( ) ; if ( VAR_10 != null ) { VAR_1 . put ( VAR_10 . getName ( ) , VAR_10 ) ; VAR_2 . put ( VAR_3 , VAR_10 ) ; } } } if ( VAR_7 ) { TYPE_8 < TYPE_2 > VAR_11 = TYPE_9 . METHOD_7 ( VAR_1 . values ( ) ) ; if ( ! true ) { this . VAR_11 = VAR_11 ; this . VAR_12 = new TYPE_10 ( this . VAR_11 ) ; } for ( TYPE_2 VAR_13 : VAR_11 ) { for ( TYPE_4 VAR_3 : VAR_13 . METHOD_8 ( ) ) { for ( String VAR_14 : VAR_3 . METHOD_9 ( ) ) { TYPE_2 VAR_15 = VAR_1 . get ( VAR_14 ) ; if ( VAR_15 == null ) { METHOD_10 ( TYPE_11 . METHOD_11 ( VAR_16 , VAR_14 ) ) ; } else { VAR_13 . METHOD_12 ( VAR_15 ) ; } } } } try { VAR_11 = TYPE_9 . METHOD_7 ( ) ; for ( TYPE_4 VAR_3 : this . VAR_12 . METHOD_13 ( VAR_17 , VAR_4 ) ) { VAR_11 . add ( VAR_2 . get ( VAR_3 ) ) ; } TYPE_2 VAR_5 = new TYPE_2 ( STRING_1 ) ; for ( TYPE_2 VAR_10 : VAR_11 ) { VAR_10 . METHOD_12 ( VAR_5 ) ; } VAR_11 . add ( 0 , VAR_5 ) ; TYPE_12 < TYPE_2 > VAR_18 = new TYPE_12 < TYPE_2 > ( VAR_11 ) ; VAR_11 = VAR_18 . METHOD_14 ( VAR_11 , true ) ; this . VAR_11 = VAR_11 ; this . VAR_12 = new TYPE_10 ( VAR_11 ) ; } catch ( TYPE_13 VAR_19 ) { TYPE_14 . METHOD_15 ( VAR_19 ) ; } } }