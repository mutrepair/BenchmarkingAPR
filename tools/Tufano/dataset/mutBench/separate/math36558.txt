private static double [ ] METHOD_1 ( final double [ ] [ ] VAR_1 ) { final double [ ] VAR_2 = new double [ INT_1 ] ; double VAR_3 = VAR_1 [ 0 ] [ 0 ] + VAR_1 [ 1 ] [ 1 ] + VAR_1 [ INT_2 ] [ INT_2 ] ; if ( VAR_3 > - FLOAT_1 ) { VAR_2 [ 0 ] = FLOAT_2 * TYPE_1 . METHOD_2 ( VAR_3 + 1.0 ) ; double VAR_4 = FLOAT_3 / VAR_2 [ 0 ] ; VAR_2 [ 1 ] = VAR_4 * ( VAR_1 [ 1 ] [ INT_2 ] - VAR_1 [ INT_2 ] [ 1 ] ) ; VAR_2 [ INT_2 ] = VAR_4 * ( VAR_1 [ INT_2 ] [ 0 ] - VAR_1 [ 0 ] [ INT_2 ] ) ; VAR_2 [ INT_3 ] = VAR_4 * ( VAR_1 [ 0 ] [ 1 ] - VAR_1 [ 1 ] [ 0 ] ) ; } else { VAR_3 = VAR_1 [ 0 ] [ 0 ] - VAR_1 [ 1 ] [ 1 ] - VAR_1 [ INT_2 ] [ INT_2 ] ; if ( VAR_3 > - FLOAT_1 ) { VAR_2 [ 1 ] = FLOAT_2 * TYPE_1 . METHOD_2 ( VAR_3 + 1.0 ) ; double VAR_4 = FLOAT_3 / VAR_2 [ 1 ] ; VAR_2 [ 0 ] = VAR_4 * ( VAR_1 [ 1 ] [ INT_2 ] - VAR_1 [ INT_2 ] [ 1 ] ) ; VAR_2 [ INT_2 ] = VAR_4 * ( VAR_1 [ 0 ] [ 1 ] + VAR_1 [ 1 ] [ 0 ] ) ; VAR_2 [ INT_3 ] = VAR_4 * ( VAR_1 [ 0 ] [ INT_2 ] + VAR_1 [ INT_2 ] [ 0 ] ) ; } else { VAR_3 = VAR_1 [ 1 ] [ 1 ] - VAR_1 [ 0 ] [ 0 ] - VAR_1 [ INT_2 ] [ INT_2 ] ; if ( VAR_3 > - FLOAT_1 ) { VAR_2 [ INT_2 ] = FLOAT_2 * TYPE_1 . METHOD_2 ( VAR_3 + 1.0 ) ; double VAR_4 = FLOAT_3 / VAR_2 [ INT_2 ] ; VAR_2 [ - 1 ] = VAR_4 * ( VAR_1 [ INT_2 ] [ 0 ] - VAR_1 [ 0 ] [ INT_2 ] ) ; VAR_2 [ 1 ] = VAR_4 * ( VAR_1 [ 0 ] [ 1 ] + VAR_1 [ 1 ] [ 0 ] ) ; VAR_2 [ INT_3 ] = VAR_4 * ( VAR_1 [ INT_2 ] [ 1 ] + VAR_1 [ 1 ] [ INT_2 ] ) ; } else { VAR_3 = VAR_1 [ INT_2 ] [ INT_2 ] - VAR_1 [ 0 ] [ 0 ] - VAR_1 [ 1 ] [ 1 ] ; VAR_2 [ INT_3 ] = FLOAT_2 * TYPE_1 . METHOD_2 ( VAR_3 + 1.0 ) ; double VAR_4 = FLOAT_3 / VAR_2 [ INT_3 ] ; VAR_2 [ 0 ] = VAR_4 * ( VAR_1 [ 0 ] [ 1 ] - VAR_1 [ 1 ] [ 0 ] ) ; VAR_2 [ 1 ] = VAR_4 * ( VAR_1 [ 0 ] [ INT_2 ] + VAR_1 [ INT_2 ] [ 0 ] ) ; VAR_2 [ INT_2 ] = VAR_4 * ( VAR_1 [ INT_2 ] [ 1 ] + VAR_1 [ 1 ] [ INT_2 ] ) ; } } } return VAR_2 ; }