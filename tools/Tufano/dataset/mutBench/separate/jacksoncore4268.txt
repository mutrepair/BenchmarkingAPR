public char [ ] METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 ; if ( VAR_2 == null ) { VAR_3 = VAR_2 = new TYPE_1 ( null ) ; } char [ ] VAR_4 = VAR_2 . METHOD_2 ( ) ; final int [ ] VAR_5 = TYPE_2 . METHOD_3 ( ) ; final int VAR_6 = VAR_5 . length ; int VAR_7 = 0 ; final int VAR_8 = VAR_1 . length ( ) ; int VAR_9 = 0 ; VAR_10 : while ( VAR_7 < VAR_8 ) { VAR_11 : while ( true ) { char c = VAR_1 . METHOD_4 ( VAR_7 ) ; if ( c < VAR_6 && VAR_5 [ c ] != 1 ) { break VAR_11 ; } if ( VAR_9 >= VAR_4 . length ) { VAR_4 = VAR_2 . METHOD_5 ( ) ; VAR_9 = 0 ; } VAR_4 [ VAR_9 ++ ] = c ; if ( ++ VAR_7 >= VAR_8 ) { break VAR_10 ; } } char VAR_12 = VAR_1 . METHOD_4 ( VAR_7 ++ ) ; int VAR_13 = VAR_5 [ VAR_12 ] ; int length = ( VAR_13 < 0 ) ? METHOD_6 ( VAR_12 , VAR_14 ) : METHOD_7 ( VAR_13 , VAR_14 ) ; ; if ( ( VAR_9 + length ) > VAR_4 . length ) { int first = VAR_4 . length - VAR_9 ; if ( first > 0 ) { TYPE_3 . METHOD_8 ( VAR_14 , 0 , VAR_4 , VAR_9 , first ) ; } VAR_4 = VAR_2 . METHOD_5 ( ) ; int VAR_15 = length - first ; TYPE_3 . METHOD_8 ( VAR_14 , first , VAR_4 , 0 , VAR_15 ) ; VAR_9 = VAR_15 ; } else { TYPE_3 . METHOD_8 ( VAR_14 , 0 , VAR_4 , VAR_9 , length ) ; VAR_9 += length ; } } VAR_2 . METHOD_9 ( VAR_9 ) ; return VAR_2 . METHOD_10 ( ) ; }