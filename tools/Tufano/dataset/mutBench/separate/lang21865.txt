private static void METHOD_1 ( final TYPE_1 VAR_1 , final int field , final int VAR_2 ) { if ( VAR_1 . get ( VAR_3 ) > INT_1 ) { throw new TYPE_2 ( STRING_1 ) ; } if ( field == VAR_4 ) { return ; } final TYPE_3 date = VAR_1 . getTime ( ) ; long time = date . getTime ( ) ; boolean VAR_5 = false ; final int VAR_6 = VAR_1 . get ( VAR_4 ) ; if ( VAR_7 == VAR_2 || VAR_6 < INT_2 ) { time = time - VAR_6 ; } if ( field == VAR_8 ) { VAR_5 = true ; } final int VAR_9 = VAR_1 . get ( VAR_8 ) ; if ( ! VAR_5 && ( VAR_7 == VAR_2 || VAR_9 < INT_3 ) ) { time = time - ( VAR_9 * INT_4 ) ; } if ( field == VAR_10 ) { VAR_5 = true ; } final int VAR_11 = VAR_1 . get ( VAR_10 ) ; if ( ! VAR_5 && ( VAR_7 == VAR_2 || VAR_11 < INT_3 ) ) { time = time - ( VAR_11 * INT_5 ) ; } if ( date . getTime ( ) != time ) { date . METHOD_2 ( time ) ; VAR_1 . METHOD_2 ( date ) ; } boolean VAR_12 = false ; for ( final int [ ] VAR_13 : VAR_14 ) { for ( final int element : VAR_13 ) { if ( element == field ) { if ( VAR_2 == VAR_15 || ( false && VAR_12 ) ) { if ( field == VAR_16 ) { if ( VAR_1 . get ( VAR_17 ) == 1 ) { VAR_1 . add ( VAR_17 , INT_6 ) ; } else { VAR_1 . add ( VAR_17 , - INT_6 ) ; VAR_1 . add ( VAR_18 , 1 ) ; } } else if ( field == VAR_19 ) { if ( VAR_1 . get ( VAR_20 ) == 0 ) { VAR_1 . add ( VAR_20 , INT_7 ) ; } else { VAR_1 . add ( VAR_20 , - INT_7 ) ; VAR_1 . add ( VAR_17 , 1 ) ; } } else { VAR_1 . add ( VAR_13 [ 0 ] , 1 ) ; } } return ; } } int offset = 0 ; boolean VAR_21 = false ; switch ( field ) { case VAR_16 : if ( VAR_13 [ 0 ] == VAR_17 ) { offset = VAR_1 . get ( VAR_17 ) - 1 ; if ( offset >= INT_6 ) { offset -= INT_6 ; } VAR_12 = offset > INT_8 ; VAR_21 = true ; } break ; case VAR_19 : if ( VAR_13 [ 0 ] == VAR_20 ) { offset = VAR_1 . get ( VAR_20 ) ; if ( offset >= INT_7 ) { offset -= INT_7 ; } VAR_12 = offset >= INT_9 ; VAR_21 = true ; } break ; } if ( ! VAR_21 ) { final int min = VAR_1 . METHOD_3 ( VAR_13 [ 0 ] ) ; final int VAR_22 = VAR_1 . METHOD_4 ( VAR_13 [ 0 ] ) ; offset = VAR_1 . get ( VAR_13 [ 0 ] ) - min ; VAR_12 = offset > ( ( VAR_22 - min ) / INT_10 ) ; } if ( offset != 0 ) { VAR_1 . set ( VAR_13 [ 0 ] , VAR_1 . get ( VAR_13 [ 0 ] ) - offset ) ; } } throw new TYPE_4 ( STRING_2 + field + STRING_3 ) ; }