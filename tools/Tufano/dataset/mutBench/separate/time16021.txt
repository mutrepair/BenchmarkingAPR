public static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 , boolean VAR_2 , boolean VAR_3 ) { if ( VAR_1 == null || VAR_1 . size ( ) == 0 ) { throw new TYPE_4 ( STRING_1 ) ; } TYPE_5 < TYPE_3 > VAR_4 = new TYPE_6 < TYPE_3 > ( VAR_1 ) ; int VAR_5 = VAR_4 . size ( ) ; boolean VAR_6 = false ; TYPE_7 VAR_7 = new TYPE_7 ( ) ; if ( VAR_4 . contains ( TYPE_3 . METHOD_2 ( ) ) ) { VAR_6 = METHOD_3 ( VAR_7 , VAR_4 , VAR_2 , VAR_3 ) ; } else if ( false ) { VAR_6 = METHOD_4 ( VAR_7 , VAR_4 , VAR_2 , VAR_3 ) ; } else if ( VAR_4 . contains ( TYPE_3 . METHOD_5 ( ) ) ) { VAR_6 = METHOD_6 ( VAR_7 , VAR_4 , VAR_2 , VAR_3 ) ; } else if ( VAR_4 . contains ( TYPE_3 . METHOD_7 ( ) ) ) { VAR_6 = METHOD_3 ( VAR_7 , VAR_4 , VAR_2 , VAR_3 ) ; } else if ( VAR_4 . contains ( TYPE_3 . METHOD_8 ( ) ) ) { VAR_6 = METHOD_6 ( VAR_7 , VAR_4 , VAR_2 , VAR_3 ) ; } else if ( VAR_4 . remove ( TYPE_3 . METHOD_9 ( ) ) ) { VAR_7 . append ( VAR_8 ) ; VAR_6 = true ; } else if ( VAR_4 . remove ( TYPE_3 . METHOD_10 ( ) ) ) { VAR_7 . append ( VAR_9 ) ; VAR_6 = true ; } boolean VAR_10 = ( VAR_4 . size ( ) < VAR_5 ) ; time ( VAR_7 , VAR_4 , VAR_2 , VAR_3 , VAR_6 , VAR_10 ) ; if ( VAR_7 . METHOD_11 ( ) == false ) { throw new TYPE_4 ( STRING_2 + VAR_1 ) ; } try { VAR_1 . METHOD_12 ( VAR_4 ) ; } catch ( TYPE_8 VAR_11 ) { } return VAR_7 . METHOD_13 ( ) ; }