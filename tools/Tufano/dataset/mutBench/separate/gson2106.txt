static void METHOD_1 ( TYPE_1 element , boolean VAR_1 , TYPE_2 writer ) throws TYPE_3 { if ( element . METHOD_2 ( ) ) { if ( VAR_1 ) { writer . METHOD_3 ( ) ; } } else if ( element . METHOD_4 ( ) ) { TYPE_4 VAR_2 = element . METHOD_5 ( ) ; if ( VAR_2 . METHOD_6 ( ) ) { writer . value ( VAR_2 . METHOD_7 ( ) ) ; } else if ( VAR_2 . METHOD_8 ( ) ) { writer . value ( VAR_2 . METHOD_9 ( ) ) ; } else { writer . value ( VAR_2 . METHOD_10 ( ) ) ; } } else if ( element . METHOD_11 ( ) ) { writer . METHOD_12 ( ) ; for ( TYPE_1 VAR_3 : element . METHOD_13 ( ) ) { if ( VAR_3 . METHOD_2 ( ) ) { writer . METHOD_3 ( ) ; continue ; } METHOD_1 ( VAR_3 , VAR_1 , writer ) ; } writer . METHOD_14 ( ) ; } else if ( element . METHOD_15 ( ) ) { writer . METHOD_16 ( ) ; for ( TYPE_5 < String , TYPE_1 > VAR_3 : element . METHOD_17 ( ) . METHOD_18 ( ) ) { TYPE_1 value = VAR_3 . getValue ( ) ; if ( ! VAR_1 && value . METHOD_2 ( ) ) { continue ; } writer . name ( VAR_3 . METHOD_19 ( ) ) ; METHOD_1 ( value , VAR_1 , writer ) ; } writer . METHOD_20 ( ) ; } else { throw new TYPE_6 ( STRING_1 + element . getClass ( ) ) ; } }