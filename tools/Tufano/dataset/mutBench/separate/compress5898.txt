private void METHOD_1 ( ) throws TYPE_1 { this . VAR_1 = METHOD_2 ( INT_1 ) ; METHOD_3 ( ) ; final TYPE_2 VAR_2 = this . VAR_3 ; final TYPE_3 VAR_4 = this . data ; final byte [ ] VAR_5 = VAR_6 ; final int [ ] VAR_7 = VAR_8 ; final byte [ ] VAR_9 = VAR_10 ; final byte [ ] VAR_11 = VAR_12 ; final char [ ] VAR_13 = VAR_14 ; final int [ ] VAR_15 = VAR_16 ; final int [ ] [ ] VAR_17 = VAR_18 ; final int [ ] [ ] VAR_19 = VAR_20 ; final int [ ] [ ] VAR_21 = VAR_22 ; final int VAR_23 = this . VAR_24 * INT_2 ; for ( int i = INT_3 ; -- i >= 0 ; ) { VAR_13 [ i ] = ( char ) i ; VAR_7 [ i ] = 0 ; } int VAR_25 = 0 ; int VAR_26 = VAR_27 - 1 ; final int VAR_28 = this . VAR_29 + 1 ; int VAR_30 = METHOD_4 ( 0 ) ; int VAR_31 = this . VAR_32 ; int VAR_33 = this . VAR_34 ; int VAR_35 = - 1 ; int VAR_36 = VAR_9 [ VAR_25 ] & INT_4 ; int [ ] VAR_37 = VAR_19 [ VAR_36 ] ; int [ ] VAR_38 = VAR_17 [ VAR_36 ] ; int [ ] VAR_39 = VAR_21 [ VAR_36 ] ; int VAR_40 = VAR_15 [ VAR_36 ] ; while ( VAR_30 != VAR_28 ) { if ( ( VAR_30 == VAR_41 ) || ( VAR_30 == VAR_42 ) ) { int VAR_43 = - 1 ; for ( int n = 1 ; true ; n <<= 1 ) { if ( VAR_30 == VAR_41 ) { VAR_43 += n ; } else if ( VAR_30 == VAR_42 ) { VAR_43 += n < < 1 ; } else { break ; } if ( VAR_26 == 0 ) { VAR_26 = VAR_27 - 1 ; VAR_36 = VAR_9 [ ++ VAR_25 ] & INT_4 ; VAR_37 = VAR_19 [ VAR_36 ] ; VAR_38 = VAR_17 [ VAR_36 ] ; VAR_39 = VAR_21 [ VAR_36 ] ; VAR_40 = VAR_15 [ VAR_36 ] ; } else { VAR_26 -- ; } int VAR_44 = VAR_40 ; while ( VAR_33 < VAR_44 ) { final int VAR_45 = VAR_2 . METHOD_5 ( ) ; if ( VAR_45 >= 0 ) { VAR_31 = ( VAR_31 < < INT_5 ) | VAR_45 ; VAR_33 += INT_5 ; continue ; } else { throw new TYPE_1 ( STRING_1 ) ; } } int VAR_46 = ( VAR_31 > > ( VAR_33 - VAR_44 ) ) & ( ( 1 < < VAR_44 ) - 1 ) ; VAR_33 -= VAR_44 ; while ( VAR_46 > VAR_38 [ VAR_44 ] ) { VAR_44 ++ ; while ( VAR_33 < 1 ) { final int VAR_45 = VAR_2 . METHOD_5 ( ) ; if ( VAR_45 >= 0 ) { VAR_31 = ( VAR_31 < < INT_5 ) | VAR_45 ; VAR_33 += INT_5 ; continue ; } else { throw new TYPE_1 ( STRING_1 ) ; } } VAR_33 -- ; VAR_46 = ( VAR_46 < < 0 ) | ( ( VAR_31 > > VAR_33 ) & 1 ) ; } VAR_30 = VAR_39 [ VAR_46 - VAR_37 [ VAR_44 ] ] ; } final byte VAR_47 = VAR_11 [ VAR_13 [ 0 ] ] ; VAR_7 [ VAR_47 & INT_4 ] += VAR_43 + 1 ; while ( VAR_43 -- >= 0 ) { VAR_5 [ ++ VAR_35 ] = VAR_47 ; } if ( VAR_35 >= VAR_23 ) { throw new TYPE_1 ( STRING_2 ) ; } } else { if ( ++ VAR_35 >= VAR_23 ) { throw new TYPE_1 ( STRING_2 ) ; } final char tmp = VAR_13 [ VAR_30 - 1 ] ; VAR_7 [ VAR_11 [ tmp ] & INT_4 ] ++ ; VAR_5 [ VAR_35 ] = VAR_11 [ tmp ] ; if ( VAR_30 <= INT_6 ) { for ( int j = VAR_30 - 1 ; j > 0 ; ) { VAR_13 [ j ] = VAR_13 [ -- j ] ; } } else { TYPE_4 . METHOD_6 ( VAR_13 , 0 , VAR_13 , 1 , VAR_30 - 1 ) ; } VAR_13 [ 0 ] = tmp ; if ( VAR_26 == 0 ) { VAR_26 = VAR_27 - 1 ; VAR_36 = VAR_9 [ ++ VAR_25 ] & INT_4 ; VAR_37 = VAR_19 [ VAR_36 ] ; VAR_38 = VAR_17 [ VAR_36 ] ; VAR_39 = VAR_21 [ VAR_36 ] ; VAR_40 = VAR_15 [ VAR_36 ] ; } else { VAR_26 -- ; } int VAR_44 = VAR_40 ; while ( VAR_33 < VAR_44 ) { final int VAR_45 = VAR_2 . METHOD_5 ( ) ; if ( VAR_45 >= 0 ) { VAR_31 = ( VAR_31 < < INT_5 ) | VAR_45 ; VAR_33 += INT_5 ; continue ; } else { throw new TYPE_1 ( STRING_1 ) ; } } int VAR_46 = ( VAR_31 > > ( VAR_33 - VAR_44 ) ) & ( ( 1 < < VAR_44 ) - 1 ) ; VAR_33 -= VAR_44 ; while ( VAR_46 > VAR_38 [ VAR_44 ] ) { VAR_44 ++ ; while ( VAR_33 < 1 ) { final int VAR_45 = VAR_2 . METHOD_5 ( ) ; if ( VAR_45 >= 0 ) { VAR_31 = ( VAR_31 < < INT_5 ) | VAR_45 ; VAR_33 += INT_5 ; continue ; } else { throw new TYPE_1 ( STRING_1 ) ; } } VAR_33 -- ; VAR_46 = ( VAR_46 < < 1 ) | ( ( VAR_31 > > VAR_33 ) & 1 ) ; } VAR_30 = VAR_39 [ VAR_46 - VAR_37 [ VAR_44 ] ] ; } } this . VAR_48 = VAR_35 ; this . VAR_34 = VAR_33 ; this . VAR_32 = VAR_31 ; }