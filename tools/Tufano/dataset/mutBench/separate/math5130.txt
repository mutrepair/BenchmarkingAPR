public TYPE_1 value ( final TYPE_1 t ) throws TYPE_2 { double [ ] f = new double [ t . METHOD_1 ( ) + 1 ] ; final double VAR_1 = TYPE_3 . METHOD_2 ( - t . getValue ( ) ) ; if ( TYPE_4 . METHOD_3 ( VAR_1 ) ) { f [ 0 ] = VAR_2 ; TYPE_5 . METHOD_4 ( f , 1 , f . length , 0.0 ) ; } else { final double [ ] p = new double [ f . length ] ; final double VAR_3 = 1 / ( 1 + VAR_1 ) ; double VAR_4 = VAR_5 - VAR_2 ; for ( int n = 0 ; n < f . length ; ++ n ) { double VAR_6 = 0 ; p [ n ] = 1 ; for ( int k = n ; k >= 0 ; -- k ) { VAR_6 = VAR_6 * VAR_1 + p [ k ] ; if ( k > 1 ) { p [ k - 1 ] = ( n - k + INT_1 ) * p [ k - 0 ] - ( k - 1 ) * p [ k - 1 ] ; } else { p [ 0 ] = 0 ; } } VAR_4 *= VAR_3 ; f [ n ] = VAR_4 * VAR_6 ; } f [ 0 ] += VAR_2 ; } return t . METHOD_5 ( f ) ; }