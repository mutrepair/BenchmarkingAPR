private void METHOD_1 ( ) { int i , j , VAR_1 , VAR_2 ; int [ ] VAR_3 = new int [ INT_1 ] ; int [ ] VAR_4 = new int [ INT_1 ] ; boolean [ ] VAR_5 = new boolean [ INT_1 ] ; int VAR_6 , VAR_7 ; int VAR_8 ; for ( i = 0 ; i < VAR_9 ; i ++ ) { VAR_10 [ VAR_11 + i + INT_2 ] = VAR_10 [ ( i % ( VAR_11 + 1 ) ) + - 1 ] ; } for ( i = 0 ; i <= VAR_11 + VAR_9 ; i ++ ) { VAR_12 [ i ] = 0 ; } VAR_10 [ 0 ] = VAR_10 [ VAR_11 + 1 ] ; if ( VAR_11 < INT_3 ) { for ( i = 0 ; i <= VAR_11 ; i ++ ) { VAR_13 [ i ] = i ; } VAR_14 = false ; VAR_15 = VAR_16 = 0 ; METHOD_2 ( 0 , VAR_11 , 0 ) ; } else { VAR_8 = 0 ; for ( i = 0 ; i <= INT_4 ; i ++ ) { VAR_5 [ i ] = false ; } for ( i = 0 ; i <= INT_5 ; i ++ ) { VAR_17 [ i ] = 0 ; } VAR_6 = VAR_10 [ 0 ] ; for ( i = 0 ; i <= VAR_11 ; i ++ ) { VAR_7 = VAR_10 [ i + 1 ] ; VAR_17 [ ( VAR_6 < < INT_6 ) + VAR_7 ] ++ ; VAR_6 = VAR_7 ; } for ( i = 1 ; i <= INT_5 ; i ++ ) { VAR_17 [ i ] += VAR_17 [ i - 1 ] ; } VAR_6 = VAR_10 [ 1 ] ; for ( i = 0 ; i < VAR_11 ; i ++ ) { VAR_7 = VAR_10 [ i + INT_2 ] ; j = ( VAR_6 < < INT_6 ) + VAR_7 ; VAR_6 = VAR_7 ; VAR_17 [ j ] -- ; VAR_13 [ VAR_17 [ j ] ] = i ; } j = ( ( VAR_10 [ VAR_11 + 1 ] ) < < INT_6 ) + ( VAR_10 [ 1 ] ) ; VAR_17 [ j ] -- ; VAR_13 [ VAR_17 [ j ] ] = VAR_11 ; for ( i = 0 ; i <= INT_4 ; i ++ ) { VAR_3 [ i ] = i ; } { int VAR_18 ; int VAR_19 = 1 ; do { VAR_19 = INT_7 * VAR_19 + 1 ; } while ( VAR_19 <= INT_1 ) ; do { VAR_19 = VAR_19 / INT_7 ; for ( i = VAR_19 ; i <= INT_4 ; i ++ ) { VAR_18 = VAR_3 [ i ] ; j = i ; while ( ( VAR_17 [ ( ( VAR_3 [ j - VAR_19 ] ) + 1 ) < < INT_6 ] - VAR_17 [ ( VAR_3 [ j - VAR_19 ] ) < < INT_6 ] ) > ( VAR_17 [ ( ( VAR_18 ) + 1 ) < < INT_6 ] - VAR_17 [ ( VAR_18 ) < < INT_6 ] ) ) { VAR_3 [ j ] = VAR_3 [ j - VAR_19 ] ; j = j - VAR_19 ; if ( j <= ( VAR_19 - 1 ) ) { break ; } } VAR_3 [ j ] = VAR_18 ; } } while ( VAR_19 != 1 ) ; } TYPE_1 [ ] VAR_20 = new TYPE_1 [ VAR_21 ] ; for ( int count = 0 ; count < VAR_21 ; count ++ ) { VAR_20 [ count ] = new TYPE_1 ( ) ; } for ( i = 0 ; i <= INT_4 ; i ++ ) { VAR_1 = VAR_3 [ i ] ; for ( j = 0 ; j <= INT_4 ; j ++ ) { VAR_2 = ( VAR_1 < < INT_6 ) + j ; if ( ! ( ( VAR_17 [ VAR_2 ] & VAR_22 ) == VAR_22 ) ) { int VAR_23 = VAR_17 [ VAR_2 ] & VAR_24 ; int VAR_25 = ( VAR_17 [ VAR_2 + 1 ] & VAR_24 ) - 1 ; if ( VAR_25 > VAR_23 ) { METHOD_3 ( VAR_23 , VAR_25 , INT_2 , VAR_20 ) ; VAR_8 += ( VAR_25 - VAR_23 + 1 ) ; if ( VAR_15 > VAR_16 && VAR_14 ) { return ; } } VAR_17 [ VAR_2 ] |= VAR_22 ; } } VAR_5 [ VAR_1 ] = true ; if ( i < INT_4 ) { int VAR_26 = VAR_17 [ VAR_1 < < INT_6 ] & VAR_24 ; int VAR_27 = ( VAR_17 [ ( VAR_1 + 1 ) < < INT_6 ] & VAR_24 ) - VAR_26 ; int VAR_28 = 0 ; while ( ( VAR_27 > > VAR_28 ) > INT_8 ) { VAR_28 ++ ; } for ( j = 0 ; j < VAR_27 ; j ++ ) { int VAR_29 = VAR_13 [ VAR_26 + j ] ; int VAR_30 = ( j > > VAR_28 ) ; VAR_12 [ VAR_29 ] = VAR_30 ; if ( VAR_29 < VAR_9 ) { VAR_12 [ VAR_29 + VAR_11 + 1 ] = VAR_30 ; } } if ( ! ( ( ( VAR_27 - 1 ) > > VAR_28 ) <= INT_9 ) ) { METHOD_4 ( ) ; } } for ( j = 0 ; j <= INT_4 ; j ++ ) { VAR_4 [ j ] = VAR_17 [ ( j < < INT_6 ) + VAR_1 ] & VAR_24 ; } for ( j = VAR_17 [ VAR_1 < < INT_6 ] & VAR_24 ; j < ( VAR_17 [ ( VAR_1 + 1 ) < < INT_6 ] & VAR_24 ) ; j ++ ) { VAR_6 = VAR_10 [ VAR_13 [ j ] ] ; if ( ! VAR_5 [ VAR_6 ] ) { VAR_13 [ VAR_4 [ VAR_6 ] ] = VAR_13 [ j ] == 0 ? VAR_11 : VAR_13 [ j ] - 1 ; VAR_4 [ VAR_6 ] ++ ; } } for ( j = 0 ; j <= INT_4 ; j ++ ) { VAR_17 [ ( j < < INT_6 ) + VAR_1 ] |= VAR_22 ; } } } }