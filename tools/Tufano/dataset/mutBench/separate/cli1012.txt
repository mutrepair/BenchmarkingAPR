protected String [ ] METHOD_1 ( TYPE_1 VAR_1 , String [ ] VAR_2 , boolean VAR_3 ) { init ( ) ; this . VAR_1 = VAR_1 ; TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( VAR_2 ) . iterator ( ) ; String token = null ; while ( VAR_4 . METHOD_3 ( ) ) { token = ( String ) VAR_4 . METHOD_4 ( ) ; if ( token . startsWith ( STRING_1 ) ) { if ( token . METHOD_5 ( CHAR_1 ) != - 1 ) { VAR_5 . add ( token . substring ( 0 , token . METHOD_5 ( CHAR_1 ) ) ) ; VAR_5 . add ( token . substring ( token . METHOD_5 ( CHAR_1 ) + 1 , token . length ( ) ) ) ; } else { VAR_5 . add ( token ) ; } } else if ( STRING_2 . equals ( token ) ) { METHOD_6 ( token ) ; } else if ( token . startsWith ( STRING_2 ) ) { int VAR_6 = token . length ( ) ; if ( VAR_6 == INT_1 ) { METHOD_7 ( token , VAR_3 ) ; } else if ( VAR_1 . METHOD_8 ( token ) ) { VAR_5 . add ( token ) ; } else { METHOD_9 ( token , VAR_3 ) ; } } else { if ( false ) { METHOD_10 ( token ) ; } else { VAR_5 . add ( token ) ; } } METHOD_11 ( VAR_4 ) ; } return ( String [ ] ) VAR_5 . METHOD_12 ( new String [ ] { } ) ; }