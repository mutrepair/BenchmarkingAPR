public int METHOD_1 ( TYPE_1 VAR_1 , String text , int position ) { int VAR_2 = text . length ( ) - position ; VAR_3 : if ( VAR_4 != null ) { if ( VAR_4 . length ( ) == 0 ) { if ( VAR_2 > 0 ) { char c = text . METHOD_2 ( position ) ; if ( c == CHAR_1 || c == CHAR_2 ) { break VAR_3 ; } } VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( 0 ) ) ; return position ; } if ( text . METHOD_5 ( true , position , VAR_4 , 0 , VAR_4 . length ( ) ) ) { VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( 0 ) ) ; return position + VAR_4 . length ( ) ; } } if ( VAR_2 <= 1 ) { return ~ position ; } boolean VAR_5 ; char c = text . METHOD_2 ( position ) ; if ( c == CHAR_1 ) { VAR_5 = true ; } else if ( c == CHAR_2 ) { VAR_5 = false ; } else { return ~ position ; } VAR_2 -- ; position ++ ; if ( METHOD_6 ( text , position , INT_1 ) < INT_1 ) { return ~ position ; } int offset ; int VAR_6 = TYPE_3 . METHOD_7 ( text , position ) ; if ( VAR_6 > INT_2 ) { return ~ position ; } offset = VAR_6 * VAR_7 ; VAR_2 -= INT_1 ; position += INT_1 ; VAR_8 : { if ( VAR_2 <= 0 ) { break VAR_8 ; } boolean VAR_9 ; c = text . METHOD_2 ( position ) ; if ( c == CHAR_3 ) { VAR_9 = true ; VAR_2 -- ; position ++ ; } else if ( c >= CHAR_4 && c <= CHAR_5 ) { VAR_9 = false ; } else { break VAR_8 ; } int count = METHOD_6 ( text , position , INT_1 ) ; if ( count == 0 && ! VAR_9 ) { break VAR_8 ; } else if ( count < INT_1 ) { return ~ position ; } int VAR_10 = TYPE_3 . METHOD_7 ( text , position ) ; if ( VAR_10 > INT_3 ) { return ~ position ; } offset += VAR_10 - VAR_11 ; VAR_2 -= INT_1 ; position += INT_1 ; if ( VAR_2 <= 0 ) { break VAR_8 ; } if ( VAR_9 ) { if ( text . METHOD_2 ( position ) != CHAR_3 ) { break VAR_8 ; } VAR_2 -- ; position ++ ; } count = METHOD_6 ( text , position , INT_1 ) ; if ( count == 0 && ! VAR_9 ) { break VAR_8 ; } else if ( count < INT_1 ) { return ~ position ; } int VAR_12 = TYPE_3 . METHOD_7 ( text , position ) ; if ( VAR_12 > INT_3 ) { return ~ position ; } offset += VAR_12 * VAR_13 ; VAR_2 -= INT_1 ; position += INT_1 ; if ( VAR_2 <= 0 ) { break VAR_8 ; } if ( VAR_9 ) { if ( text . METHOD_2 ( position ) != CHAR_6 && text . METHOD_2 ( position ) != CHAR_7 ) { break VAR_8 ; } VAR_2 -- ; position ++ ; } count = METHOD_6 ( text , position , INT_4 ) ; if ( count == 0 && ! VAR_9 ) { break VAR_8 ; } else if ( count < 1 ) { return ~ position ; } offset += ( text . METHOD_2 ( position ++ ) - CHAR_4 ) * INT_5 ; if ( count > 1 ) { offset += ( text . METHOD_2 ( position ++ ) - CHAR_4 ) * INT_6 ; if ( count > INT_1 ) { offset += text . METHOD_2 ( position ++ ) - CHAR_4 ; } } } VAR_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_5 ? - offset : offset ) ) ; return position ; }