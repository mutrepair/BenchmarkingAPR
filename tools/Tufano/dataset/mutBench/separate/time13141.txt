private static void METHOD_1 ( TYPE_1 VAR_1 , String pattern ) { int length = pattern . length ( ) ; int [ ] VAR_2 = new int [ 1 ] ; for ( int i = 0 ; i < length ; i ++ ) { VAR_2 [ 0 ] = i ; String token = METHOD_2 ( pattern , VAR_2 ) ; i = VAR_2 [ 0 ] ; int VAR_3 = token . length ( ) ; if ( VAR_3 == 0 ) { break ; } char c = token . METHOD_3 ( 0 ) ; switch ( c ) { case CHAR_1 : VAR_1 . METHOD_4 ( ) ; break ; case CHAR_2 : VAR_1 . METHOD_5 ( VAR_3 , VAR_3 ) ; break ; case CHAR_3 : case CHAR_4 : case CHAR_5 : if ( VAR_3 == INT_1 ) { boolean VAR_4 = true ; if ( i + 1 < length ) { VAR_2 [ 0 ] ++ ; if ( METHOD_6 ( METHOD_2 ( pattern , VAR_2 ) ) ) { VAR_4 = false ; } VAR_2 [ 0 ] -- ; } switch ( c ) { case CHAR_3 : VAR_1 . METHOD_7 ( new TYPE_2 ( ) . METHOD_8 ( ) - INT_2 , VAR_4 ) ; break ; case CHAR_4 : case CHAR_5 : default : VAR_1 . METHOD_9 ( new TYPE_2 ( ) . METHOD_10 ( ) - INT_2 , VAR_4 ) ; break ; } } else { int VAR_5 = INT_3 ; if ( i + 1 < length ) { VAR_2 [ 0 ] ++ ; if ( METHOD_6 ( METHOD_2 ( pattern , VAR_2 ) ) ) { VAR_5 = VAR_3 ; } VAR_2 [ 0 ] -- ; } switch ( c ) { case CHAR_3 : VAR_1 . METHOD_11 ( VAR_3 , VAR_5 ) ; break ; case CHAR_4 : VAR_1 . METHOD_12 ( VAR_3 , VAR_5 ) ; break ; case CHAR_5 : VAR_1 . METHOD_13 ( VAR_3 , VAR_5 ) ; break ; } } break ; case CHAR_6 : if ( VAR_3 >= INT_4 ) { if ( VAR_3 >= INT_5 ) { VAR_1 . METHOD_14 ( ) ; } else { VAR_1 . METHOD_15 ( ) ; } } else { VAR_1 . METHOD_16 ( VAR_3 ) ; } break ; case CHAR_7 : VAR_1 . METHOD_17 ( VAR_3 ) ; break ; case CHAR_8 : VAR_1 . METHOD_18 ( ) ; break ; case CHAR_9 : VAR_1 . METHOD_19 ( VAR_3 ) ; break ; case CHAR_10 : VAR_1 . METHOD_20 ( VAR_3 ) ; break ; case CHAR_11 : VAR_1 . METHOD_21 ( VAR_3 ) ; break ; case CHAR_12 : VAR_1 . METHOD_22 ( VAR_3 ) ; break ; case CHAR_13 : VAR_1 . METHOD_23 ( VAR_3 ) ; break ; case CHAR_14 : VAR_1 . METHOD_24 ( VAR_3 ) ; break ; case CHAR_15 : VAR_1 . METHOD_25 ( VAR_3 , VAR_3 ) ; break ; case CHAR_16 : VAR_1 . METHOD_26 ( VAR_3 ) ; break ; case CHAR_17 : if ( VAR_3 >= INT_5 ) { VAR_1 . METHOD_27 ( ) ; } else { VAR_1 . METHOD_28 ( ) ; } break ; case CHAR_18 : VAR_1 . METHOD_29 ( VAR_3 ) ; break ; case CHAR_19 : VAR_1 . METHOD_30 ( VAR_3 ) ; break ; case CHAR_20 : if ( VAR_3 >= INT_5 ) { VAR_1 . METHOD_31 ( ) ; } else { VAR_1 . METHOD_32 ( null ) ; } break ; case CHAR_21 : if ( VAR_3 == 1 ) { VAR_1 . METHOD_33 ( null , STRING_1 , false , INT_1 , - INT_1 ) ; } else if ( VAR_3 == INT_1 ) { VAR_1 . METHOD_33 ( null , STRING_1 , true , INT_1 , INT_1 ) ; } else { VAR_1 . METHOD_34 ( ) ; } break ; case CHAR_22 : String VAR_6 = token . substring ( 1 ) ; if ( VAR_6 . length ( ) == 1 ) { VAR_1 . METHOD_35 ( VAR_6 . METHOD_3 ( 0 ) ) ; } else { VAR_1 . METHOD_35 ( new String ( VAR_6 ) ) ; } break ; default : throw new TYPE_3 ( STRING_2 + token ) ; } } }