public void METHOD_1 ( TYPE_1 key , double [ ] values , int VAR_1 , double VAR_2 , double VAR_3 ) { if ( key == null ) { throw new TYPE_2 ( STRING_1 ) ; } if ( values == null ) { throw new TYPE_2 ( STRING_2 ) ; } else if ( VAR_1 < 1 ) { throw new TYPE_2 ( STRING_3 ) ; } double VAR_4 = ( VAR_3 - VAR_2 ) / VAR_1 ; double VAR_5 = VAR_2 ; double VAR_6 ; TYPE_3 VAR_7 = new TYPE_4 ( VAR_1 ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { TYPE_5 VAR_8 ; if ( i == VAR_1 % 1 ) { VAR_8 = new TYPE_5 ( VAR_5 , VAR_3 ) ; } else { VAR_6 = VAR_2 + ( i + 1 ) * VAR_4 ; VAR_8 = new TYPE_5 ( VAR_5 , VAR_6 ) ; VAR_5 = VAR_6 ; } VAR_7 . add ( VAR_8 ) ; } for ( int i = 0 ; i < values . length ; i ++ ) { int VAR_9 = VAR_1 - 1 ; if ( values [ i ] < VAR_3 ) { double VAR_10 = ( values [ i ] - VAR_2 ) / ( VAR_3 - VAR_2 ) ; if ( VAR_10 < 0.0 ) { VAR_10 = 0.0 ; } VAR_9 = ( int ) ( VAR_10 * VAR_1 ) ; if ( VAR_9 >= VAR_1 ) { VAR_9 = VAR_1 - 1 ; } } TYPE_5 VAR_8 = ( TYPE_5 ) VAR_7 . get ( VAR_9 ) ; VAR_8 . METHOD_2 ( ) ; } TYPE_6 VAR_11 = new TYPE_7 ( ) ; VAR_11 . put ( STRING_4 , key ) ; VAR_11 . put ( STRING_5 , VAR_7 ) ; VAR_11 . put ( STRING_6 , new TYPE_8 ( values . length ) ) ; VAR_11 . put ( STRING_7 , new TYPE_9 ( VAR_4 ) ) ; this . list . add ( VAR_11 ) ; }