blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -100) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -36) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -3) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -60) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -48) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2704) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -8) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -32) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -21632) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -4) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2496) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -384) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -64) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -4991895511313664478) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -0) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -416) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -52) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ) / BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ) ;
blockColumns =( columns % BLOCK_SIZE *BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -100) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -36) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -3) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -60) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -48) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2704) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -8) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -32) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -21632) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -4) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -2496) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -384) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -64) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -4991895511313664478) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -0) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -416) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -52) / BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE - BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns = Math.abs( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -0) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE -1;
blockColumns +=( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE / BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =(( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( column % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1-1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) % BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) % BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ) / BLOCK_SIZE +1) / BLOCK_SIZE ;
blockColumns = Math.round( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE , BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ; / BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns & BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE *BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE +1;
blockColumns = Math.max( columns % BLOCK_SIZE -1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1) / BLOCK_SIZE -1) ;
blockColumns =( columns % BLOCK_SIZE -1) *BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE ; / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE -1+1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *100) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *36) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *3) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *60) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *48) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *2704) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *8) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *32) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *21632) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *2) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *4) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *2496) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *384) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *64) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *4991895511313664478) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *0) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *416) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *1) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE *52) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +100) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +36) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +3) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +60) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +48) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +2704) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +8) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +32) / BLOCK_SIZE ;
blockColumns =( columns % BLOCK_SIZE +21632) / BLOCK_SIZE ;
