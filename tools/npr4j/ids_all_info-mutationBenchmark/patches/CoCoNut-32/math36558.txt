coupon [ -1] = inv *(00[00] [0] -00[0] [00] ) ;
coupon [ -1] = inv *(36[36] [0] -36[0] [36] ) ;
coupon [ -1] = inv *(3[3] [0] -3[0] [3] ) ;
coupon [ -1] = inv *(2153622329907944313[2153622329907944313] [0] -2153622329907944313[0] [2153622329907944313] ) ;
coupon [ -1] = inv *(48[48] [0] -48[0] [48] ) ;
coupon [ -1] = inv *(22[22] [0] -22[0] [22] ) ;
coupon [ -1] = inv *(25[25] [0] -25[0] [25] ) ;
coupon [ -1] = inv *(10[10] [0] -10[0] [10] ) ;
coupon [ -1] = inv *(45[45] [0] -45[0] [45] ) ;
coupon [ -1] = inv *(2[2] [0] -2[0] [2] ) ;
coupon [ -1] = inv *(4[4] [0] -4[0] [4] ) ;
coupon [ -1] = inv *(9999999999[9999999999] [0] -9999999999[0] [9999999999] ) ;
coupon [ -1] = inv *(11[11] [0] -11[0] [11] ) ;
coupon [ -1] = inv *(20[20] [0] -20[0] [20] ) ;
coupon [ -1] = inv *(6[6] [0] -6[0] [6] ) ;
coupon [ -1] = inv *(64[64] [0] -64[0] [64] ) ;
coupon [ -1] = inv *(01[01] [0] -01[0] [01] ) ;
coupon [ -1] = inv *(15[15] [0] -15[0] [15] ) ;
coupon [ -1] = inv *(5[5] [0] -5[0] [5] ) ;
coupon [ -1] = inv *(19[19] [0] -19[0] [19] ) ;
coupon [ -1] = inv *(0[0] [0] -0[0] [0] ) ;
coupon [ -1] = inv *(02[02] [0] -02[0] [02] ) ;
coupon [ -1] = inv *(21[21] [0] -21[0] [21] ) ;
coupon [ -1] = inv *(12[12] [0] -12[0] [12] ) ;
coupon [ -1] = inv *(1[1] [0] -1[0] [1] ) ;
coupon [ -1] = inv *(( double [00] [0] -00[0] [00] ) ;
coupon [ -1] = inv *(( double [36] [0] -36[0] [36] ) ;
coupon [ -1] = inv *(( double [3] [0] -3[0] [3] ) ;
coupon [ -1] = inv *(( double [2153622329907944313] [0] -2153622329907944313[0] [2153622329907944313] ) ;
coupon [ -1] = inv *(( double [48] [0] -48[0] [48] ) ;
coupon [ -1] = inv *(( double [22] [0] -22[0] [22] ) ;
coupon [ -1] = inv *(( double [25] [0] -25[0] [25] ) ;
coupon [ -1] = inv *(( double [10] [0] -10[0] [10] ) ;
coupon [ -1] = inv *(( double [45] [0] -45[0] [45] ) ;
coupon [ -1] = inv *(( double [2] [0] -2[0] [2] ) ;
coupon [ -1] = inv *(( double [4] [0] -4[0] [4] ) ;
coupon [ -1] = inv *(( double [9999999999] [0] -9999999999[0] [9999999999] ) ;
coupon [ -1] = inv *(( double [11] [0] -11[0] [11] ) ;
coupon [ -1] = inv *(( double [20] [0] -20[0] [20] ) ;
coupon [ -1] = inv *(( double [6] [0] -6[0] [6] ) ;
coupon [ -1] = inv *(( double [64] [0] -64[0] [64] ) ;
coupon [ -1] = inv *(( double [01] [0] -01[0] [01] ) ;
coupon [ -1] = inv *(( double [15] [0] -15[0] [15] ) ;
coupon [ -1] = inv *(( double [5] [0] -5[0] [5] ) ;
coupon [ -1] = inv *(( double [19] [0] -19[0] [19] ) ;
coupon [ -1] = inv *(( double [0] [0] -0[0] [0] ) ;
coupon [ -1] = inv *(( double [02] [0] -02[0] [02] ) ;
coupon [ -1] = inv *(( double [21] [0] -21[0] [21] ) ;
coupon [ -1] = inv *(( double [12] [0] -12[0] [12] ) ;
coupon [ -1] = inv *(( double [1] [0] -1[0] [1] ) ;
Validations [ -1] = inv *(00[00] [0] -00[0] [00] ) ;
Validations [ -1] = inv *(36[36] [0] -36[0] [36] ) ;
Validations [ -1] = inv *(3[3] [0] -3[0] [3] ) ;
Validations [ -1] = inv *(2153622329907944313[2153622329907944313] [0] -2153622329907944313[0] [2153622329907944313] ) ;
Validations [ -1] = inv *(48[48] [0] -48[0] [48] ) ;
Validations [ -1] = inv *(22[22] [0] -22[0] [22] ) ;
Validations [ -1] = inv *(25[25] [0] -25[0] [25] ) ;
Validations [ -1] = inv *(10[10] [0] -10[0] [10] ) ;
Validations [ -1] = inv *(45[45] [0] -45[0] [45] ) ;
Validations [ -1] = inv *(2[2] [0] -2[0] [2] ) ;
Validations [ -1] = inv *(4[4] [0] -4[0] [4] ) ;
Validations [ -1] = inv *(9999999999[9999999999] [0] -9999999999[0] [9999999999] ) ;
Validations [ -1] = inv *(11[11] [0] -11[0] [11] ) ;
Validations [ -1] = inv *(20[20] [0] -20[0] [20] ) ;
Validations [ -1] = inv *(6[6] [0] -6[0] [6] ) ;
Validations [ -1] = inv *(64[64] [0] -64[0] [64] ) ;
Validations [ -1] = inv *(01[01] [0] -01[0] [01] ) ;
Validations [ -1] = inv *(15[15] [0] -15[0] [15] ) ;
Validations [ -1] = inv *(5[5] [0] -5[0] [5] ) ;
Validations [ -1] = inv *(19[19] [0] -19[0] [19] ) ;
Validations [ -1] = inv *(0[0] [0] -0[0] [0] ) ;
Validations [ -1] = inv *(02[02] [0] -02[0] [02] ) ;
Validations [ -1] = inv *(21[21] [0] -21[0] [21] ) ;
Validations [ -1] = inv *(12[12] [0] -12[0] [12] ) ;
Validations [ -1] = inv *(1[1] [0] -1[0] [1] ) ;
coupon [ -1] = inv *(00] [0] [0] -00[0] [00] ) ;
coupon [ -1] = inv *(36] [0] [0] -36[0] [36] ) ;
coupon [ -1] = inv *(3] [0] [0] -3[0] [3] ) ;
coupon [ -1] = inv *(2153622329907944313] [0] [0] -2153622329907944313[0] [2153622329907944313] ) ;
coupon [ -1] = inv *(48] [0] [0] -48[0] [48] ) ;
coupon [ -1] = inv *(22] [0] [0] -22[0] [22] ) ;
coupon [ -1] = inv *(25] [0] [0] -25[0] [25] ) ;
coupon [ -1] = inv *(10] [0] [0] -10[0] [10] ) ;
coupon [ -1] = inv *(45] [0] [0] -45[0] [45] ) ;
coupon [ -1] = inv *(2] [0] [0] -2[0] [2] ) ;
coupon [ -1] = inv *(4] [0] [0] -4[0] [4] ) ;
coupon [ -1] = inv *(9999999999] [0] [0] -9999999999[0] [9999999999] ) ;
coupon [ -1] = inv *(11] [0] [0] -11[0] [11] ) ;
coupon [ -1] = inv *(20] [0] [0] -20[0] [20] ) ;
coupon [ -1] = inv *(6] [0] [0] -6[0] [6] ) ;
coupon [ -1] = inv *(64] [0] [0] -64[0] [64] ) ;
coupon [ -1] = inv *(01] [0] [0] -01[0] [01] ) ;
coupon [ -1] = inv *(15] [0] [0] -15[0] [15] ) ;
coupon [ -1] = inv *(5] [0] [0] -5[0] [5] ) ;
coupon [ -1] = inv *(19] [0] [0] -19[0] [19] ) ;
coupon [ -1] = inv *(0] [0] [0] -0[0] [0] ) ;
coupon [ -1] = inv *(02] [0] [0] -02[0] [02] ) ;
coupon [ -1] = inv *(21] [0] [0] -21[0] [21] ) ;
coupon [ -1] = inv *(12] [0] [0] -12[0] [12] ) ;
coupon [ -1] = inv *(1] [0] [0] -1[0] [1] ) ;
