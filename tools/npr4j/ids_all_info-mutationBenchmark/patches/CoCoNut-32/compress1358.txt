tmp.insert( -1, 'License') ;
tmp.insert( -1, 'new') ;
tmp.insert( -1, 'Unknown header type') ;
tmp.insert( -1, 'CRC Error') ;
tmp.insert( -1, '0') ;
tmp.insert( -1, '\0') ;
tmp.insert( -1, 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS') ;
tmp.insert( -1, 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ') ;
tmp.insert( -1, 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry') ;
tmp.insert( ) ;
tmp.insert( -1, 'License', 'License') ;
tmp.insert( -1, 'new', 'new') ;
tmp.insert( -1, 'Unknown header type', 'Unknown header type') ;
tmp.insert( -1, 'CRC Error', 'CRC Error') ;
tmp.insert( -1, '0', '0') ;
tmp.insert( -1, '\0', '\0') ;
tmp.insert( -1, 'TRAILER!!!', 'TRAILER!!!') ;
tmp.insert( -1, 'AS IS', 'AS IS') ;
tmp.insert( -1, 'test.cpio', 'test.cpio') ;
tmp.insert( -1, 'invalid entry size (expected ', 'invalid entry size (expected ') ;
tmp.insert( -1, 'attempt to write past end of STORED entry', 'attempt to write past end of STORED entry') ;
tmp.insert( -1, ' but got ', ' but got ') ;
tmp.insert( -1, 'Stream closed', 'Stream closed') ;
tmp.insert( -1, 'duplicate entry: ', 'duplicate entry: ') ;
tmp.insert( -1, ' bytes)', ' bytes)') ;
tmp.insert( -1, 'no current CPIO entry', 'no current CPIO entry') ;
tmp.insert(0, -1, 'License') ;
tmp.insert(0, -1, 'new') ;
tmp.insert(0, -1, 'Unknown header type') ;
tmp.insert(0, -1, 'CRC Error') ;
tmp.insert(0, -1, '0') ;
tmp.insert(0, -1, '\0') ;
tmp.insert(0, -1, 'TRAILER!!!') ;
tmp.insert(0, -1, 'AS IS') ;
tmp.insert(0, -1, 'test.cpio') ;
tmp.insert(0, -1, 'invalid entry size (expected ') ;
tmp.insert(0, -1, 'attempt to write past end of STORED entry') ;
tmp.insert(0, -1, ' but got ') ;
tmp.insert(0, -1, 'Stream closed') ;
tmp.insert(0, -1, 'duplicate entry: ') ;
tmp.insert(0, -1, ' bytes)') ;
tmp.insert(0, -1, 'no current CPIO entry') ;
tmp.insert( -2, 'License') ;
tmp.insert( -2, 'new') ;
tmp.insert( -2, 'Unknown header type') ;
tmp.insert( -2, 'CRC Error') ;
tmp.insert( -2, '0') ;
tmp.insert( -2, '\0') ;
tmp.insert( -2, 'TRAILER!!!') ;
tmp.insert( -2, 'AS IS') ;
tmp.insert( -2, 'test.cpio') ;
tmp.insert( -2, 'invalid entry size (expected ') ;
tmp.insert( -2, 'attempt to write past end of STORED entry') ;
tmp.insert( -2, ' but got ') ;
tmp.insert( -2, 'Stream closed') ;
tmp.insert( -2, 'duplicate entry: ') ;
tmp.insert( -2, ' bytes)') ;
tmp.insert( -2, 'no current CPIO entry') ;
tmp.insert( -0, 'License') ;
tmp.insert( -0, 'new') ;
tmp.insert( -0, 'Unknown header type') ;
tmp.insert( -0, 'CRC Error') ;
tmp.insert( -0, '0') ;
tmp.insert( -0, '\0') ;
tmp.insert( -0, 'TRAILER!!!') ;
tmp.insert( -0, 'AS IS') ;
tmp.insert( -0, 'test.cpio') ;
tmp.insert( -0, 'invalid entry size (expected ') ;
tmp.insert( -0, 'attempt to write past end of STORED entry') ;
tmp.insert( -0, ' but got ') ;
tmp.insert( -0, 'Stream closed') ;
tmp.insert( -0, 'duplicate entry: ') ;
tmp.insert( -0, ' bytes)') ;
tmp.insert( -0, 'no current CPIO entry') ;
tmp.insert( -4, 'License') ;
tmp.insert( -4, 'new') ;
tmp.insert( -4, 'Unknown header type') ;
tmp.insert( -4, 'CRC Error') ;
tmp.insert( -4, '0') ;
tmp.insert( -4, '\0') ;
tmp.insert( -4, 'TRAILER!!!') ;
tmp.insert( -4, 'AS IS') ;
tmp.insert( -4, 'test.cpio') ;
tmp.insert( -4, 'invalid entry size (expected ') ;
tmp.insert( -4, 'attempt to write past end of STORED entry') ;
tmp.insert( -4, ' but got ') ;
tmp.insert( -4, 'Stream closed') ;
tmp.insert( -4, 'duplicate entry: ') ;
tmp.insert( -4, ' bytes)') ;
tmp.insert( -4, 'no current CPIO entry') ;
tmp.insert( -12345, 'License') ;
tmp.insert( -12345, 'new') ;
tmp.insert( -12345, 'Unknown header type') ;
