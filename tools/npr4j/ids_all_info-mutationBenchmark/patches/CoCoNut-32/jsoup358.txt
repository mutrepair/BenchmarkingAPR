return parentNode.nodeDepth( ) ;
return parentNode.nodeDepth( ) *2;
return parentNode.nodeDepth( ) *31;
return parentNode.nodeDepth( ) *1;
return parentNode.nodeDepth( ) *0;
return parentNode.nodeDepth( ) *1;
return parentNode.nodeDepth( ) ) ;
return parentNode.nodeDepth( ) *0;
return parentNode.nodeDepth( ) +1;
return parentNode.nodeDepth( ) *2) ;
return parentNode.nodeDepth( ) *31) ;
return parentNode.nodeDepth( ) *1) ;
return parentNode.nodeDepth( ) *0) ;
return parentNode.nodeDepth( ) *1) ;
return parentNode.nodeDepth( ) *2*2;
return parentNode.nodeDepth( ) *31*31;
return parentNode.nodeDepth( ) *1*1;
return parentNode.nodeDepth( ) *0*0;
return parentNode.nodeDepth( ) /2;
return parentNode.nodeDepth( ) /31;
return parentNode.nodeDepth( ) /1;
return parentNode.nodeDepth( ) /0;
return parentNode.nodeDepth( ) *2+1;
return parentNode.nodeDepth( ) *31+1;
return parentNode.nodeDepth( ) *1+1;
return parentNode.nodeDepth( ) *0+1;
return parentNode.nodeDepth( ) -1;
 return( parentNode.nodeDepth( ) *2;
 return( parentNode.nodeDepth( ) *31;
 return( parentNode.nodeDepth( ) *1;
 return( parentNode.nodeDepth( ) *0;
 return( parentNode.nodeDepth( ) *1;
return parentNode.nodeDepth( ) *2.0;
return parentNode.nodeDepth( ) *31.0;
return parentNode.nodeDepth( ) *1.0;
return parentNode.nodeDepth( ) *0.0;
return parentNode.nodeDepth( ) *1+1;
return parentNode.nodeDepth( ) *2*1;
return parentNode.nodeDepth( ) *31*1;
return parentNode.nodeDepth( ) *1*1;
return parentNode.nodeDepth( ) *0*1;
return parentNode.nodeDepth( ) *1*2;
return parentNode.nodeDepth( ) *1*31;
return parentNode.nodeDepth( ) *1*1;
return parentNode.nodeDepth( ) *1*0;
return parentNode.nodeDepth( ) /2) ;
return parentNode.nodeDepth( ) /31) ;
return parentNode.nodeDepth( ) /1) ;
return parentNode.nodeDepth( ) /0) ;
return parentNode.nodeDepth( ) *-1;
 return( parentNode.nodeDepth( ) ;
return parentNode.nodeDepth( ) *1.0;
return parentNode.nodeDepth( ) *2-1;
return parentNode.nodeDepth( ) *31-1;
return parentNode.nodeDepth( ) *1-1;
return parentNode.nodeDepth( ) *0-1;
return this.parentNode.nodeDepth( ) *2;
return this.parentNode.nodeDepth( ) *31;
return this.parentNode.nodeDepth( ) *1;
return this.parentNode.nodeDepth( ) *0;
return this.parentNode.nodeDepth( ) *1;
return parentNode.nodeDepth( ) ) *1;
return parentNode.nodeDepth( ) *8;
return parentNode.nodeDepth( ) *16;
return parentNode.nodeDepth( ) ) *2;
return parentNode.nodeDepth( ) ) *31;
return parentNode.nodeDepth( ) ) *1;
return parentNode.nodeDepth( ) ) *0;
return parentNodeNode.nodeDepth( ) *2;
return parentNodeNode.nodeDepth( ) *31;
return parentNodeNode.nodeDepth( ) *1;
return parentNodeNode.nodeDepth( ) *0;
return parentNodeNode.nodeDepth( ) *1;
return parentNode.nodeTop( ) *1;
return parentNode.nodeTop( ) *2;
return parentNode.nodeTop( ) *31;
return parentNode.nodeTop( ) *1;
return parentNode.nodeTop( ) *0;
return parentNode.nodeDepth( ) +2;
return parentNode.nodeDepth( ) +31;
return parentNode.nodeDepth( ) +1;
return parentNode.nodeDepth( ) +0;
return parentNode.nodeDepth( ) *2+2;
return parentNode.nodeDepth( ) *31+31;
return parentNode.nodeDepth( ) *1+1;
return parentNode.nodeDepth( ) *0+0;
return parentNode.nodeDepth( ) *2L ;
return parentNode.nodeDepth( ) *31L ;
return parentNode.nodeDepth( ) *1L ;
return parentNode.nodeDepth( ) *0L ;
return parentNode.nodeDepth( ) /2+1;
return parentNode.nodeDepth( ) /31+1;
return parentNode.nodeDepth( ) /1+1;
return parentNode.nodeDepth( ) /0+1;
return ! parentNode.nodeDepth( ) *2;
return ! parentNode.nodeDepth( ) *31;
return ! parentNode.nodeDepth( ) *1;
return ! parentNode.nodeDepth( ) *0;
return parentNode.nodeDepth( ) + '';
return parentNode.nodeDepth( ) + 'Cannot (yet) move nodes in tree';
