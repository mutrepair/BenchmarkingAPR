result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) ;
result [ BYTE_2] =(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( short )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( short )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( short )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( short )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( short )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( short )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( short )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( short )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( short )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( short )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( short )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) ) ;
result [ BYTE_2] =( String )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( String )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( String )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( String )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( String )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( String )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( String )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( String )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( String )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( String )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( String )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( int )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( int )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( int )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( int )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( int )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( int )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( int )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( int )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( int )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( int )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( int )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) *BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) *BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) *BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) *BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) *BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) *BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) *BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) *BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) *BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) *BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) *BYTE_000000_SHIFT ) ;
result [ BYTE_2] =((( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =((( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =((( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =((( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =((( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =((( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =((( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =((( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =((( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =((( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =((( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( float )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
