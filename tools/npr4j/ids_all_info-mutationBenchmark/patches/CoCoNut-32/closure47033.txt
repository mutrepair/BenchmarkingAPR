return false ;
return true ;
return new ArrayList < String >( ) ;
return new ArrayList < >( ) ;
return new ArrayList < Integer >( ) ;
return new HashSet < >( ) ;
return this.isEmpty( ) ;
return false.toLowerCase( ) ;
return new HashSet < String >( ) ;
return new ArrayList < >( false ) ;
return false.toString( ) ;
return false.toUpperCase( ) ;
return this.toString( ) ;
return isEmpty( ) ;
return new HashList < >( ) ;
return false.isEmpty( ) ;
return new HashMap < >( ) ;
return String.valueOf( false ) ;
return Integer.parseInt( false ) ;
return true.toString( ) ;
return ! this.isEmpty( ) ;
return false == null ? null : false ;
return String.valueOf( true ) ;
return this.getName( ) ;
return ''.equals( '') ;
return '='.equals( '=') ;
return 'msg.jsdoc.override'.equals( 'msg.jsdoc.override') ;
return 'msg.jsdoc.incompat.type'.equals( 'msg.jsdoc.incompat.type') ;
return 'msg.jsdoc.seemissing'.equals( 'msg.jsdoc.seemissing') ;
return 'msg.jsdoc.templatemissing'.equals( 'msg.jsdoc.templatemissing') ;
return 'License'.equals( 'License') ;
return '*'.equals( '*') ;
return '|'.equals( '|') ;
return 'msg.jsdoc.missing.rp'.equals( 'msg.jsdoc.missing.rp') ;
return 'msg.jsdoc.visibility.public'.equals( 'msg.jsdoc.visibility.public') ;
return '.equals(string) || '.equals( '.equals(string) || ') ;
return 'msg.jsdoc.preservertry'.equals( 'msg.jsdoc.preservertry') ;
return ' TypeName, ParametersType '.equals( ' TypeName, ParametersType ') ;
return ' '.equals( ' ') ;
return 'msg.jsdoc.expose'.equals( 'msg.jsdoc.expose') ;
return 'msg.jsdoc.versionmissing'.equals( 'msg.jsdoc.versionmissing') ;
return 'msg.jsdoc.modifies'.equals( 'msg.jsdoc.modifies') ;
return 'msg.jsdoc.javadispatch'.equals( 'msg.jsdoc.javadispatch') ;
return 'null'.equals( 'null') ;
return 'msg.jsdoc.missing.lp'.equals( 'msg.jsdoc.missing.lp') ;
return 'msg.jsdoc.hidden'.equals( 'msg.jsdoc.hidden') ;
return 'msg.jsdoc.meaning.extra'.equals( 'msg.jsdoc.meaning.extra') ;
return 'function'.equals( 'function') ;
return 'msg.jsdoc.consistidgen'.equals( 'msg.jsdoc.consistidgen') ;
return 'msg.no.type.name'.equals( 'msg.no.type.name') ;
return ':'.equals( ':') ;
return 'msg.jsdoc.missing.rb'.equals( 'msg.jsdoc.missing.rb') ;
return 'msg.jsdoc.modifies.duplicate'.equals( 'msg.jsdoc.modifies.duplicate') ;
return 'msg.jsdoc.function.varargs'.equals( 'msg.jsdoc.function.varargs') ;
return '['.equals( '[') ;
return 'this'.equals( 'this') ;
return ' ElementTypeList '.equals( ' ElementTypeList ') ;
return 'msg.jsdoc.const'.equals( 'msg.jsdoc.const') ;
return '.'.equals( '.') ;
return 'msg.jsdoc.nosideeffects'.equals( 'msg.jsdoc.nosideeffects') ;
return 'msg.jsdoc.define'.equals( 'msg.jsdoc.define') ;
return '{'.equals( '{') ;
return 'msg.bad.jsdoc.tag'.equals( 'msg.bad.jsdoc.tag') ;
return 'msg.jsdoc.noshadow'.equals( 'msg.jsdoc.noshadow') ;
return 'msg.jsdoc.template.at.most.once'.equals( 'msg.jsdoc.template.at.most.once') ;
return '!'.equals( '!') ;
return 'msg.jsdoc.externs'.equals( 'msg.jsdoc.externs') ;
return 'msg.jsdoc.suppress.unknown'.equals( 'msg.jsdoc.suppress.unknown') ;
return 'msg.jsdoc.nocompile'.equals( 'msg.jsdoc.nocompile') ;
return '?'.equals( '?') ;
return 'msg.end.annotation.expected'.equals( 'msg.end.annotation.expected') ;
return '.<'.equals( '.<') ;
return 'msg.jsdoc.extends.duplicate'.equals( 'msg.jsdoc.extends.duplicate') ;
return 'msg.jsdoc.type.syntax'.equals( 'msg.jsdoc.type.syntax') ;
return '\n'.equals( '\n') ;
return ' TypeUnionList '.equals( ' TypeUnionList ') ;
return ','.equals( ',') ;
return 'number'.equals( 'number') ;
return '@'.equals( '@') ;
return ')'.equals( ')') ;
return 'msg.jsdoc.missing.colon'.equals( 'msg.jsdoc.missing.colon') ;
return 'msg.jsdoc.fileoverview.extra'.equals( 'msg.jsdoc.fileoverview.extra') ;
return 'msg.jsdoc.missing.gt'.equals( 'msg.jsdoc.missing.gt') ;
return 'default'.equals( 'default') ;
return 'msg.jsdoc.idgen'.equals( 'msg.jsdoc.idgen') ;
return 'msg.jsdoc.deprecated'.equals( 'msg.jsdoc.deprecated') ;
return '...'.equals( '...') ;
return ' void | '.equals( ' void | ') ;
return 'arguments'.equals( 'arguments') ;
return 'AS IS'.equals( 'AS IS') ;
return 'msg.jsdoc.desc.extra'.equals( 'msg.jsdoc.desc.extra') ;
return ' TypeName '.equals( ' TypeName ') ;
return 'msg.jsdoc.missing.lb'.equals( 'msg.jsdoc.missing.lb') ;
return ' | '.equals( ' | ') ;
return 'fallthrough'.equals( 'fallthrough') ;
return 'msg.jsdoc.implements.duplicate'.equals( 'msg.jsdoc.implements.duplicate') ;
return 'msg.jsdoc.export'.equals( 'msg.jsdoc.export') ;
return 'msg.dup.variable.name'.equals( 'msg.dup.variable.name') ;
return 'msg.jsdoc.visibility.protected'.equals( 'msg.jsdoc.visibility.protected') ;
return 'msg.jsdoc.extraversion'.equals( 'msg.jsdoc.extraversion') ;
