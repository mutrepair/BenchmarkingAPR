long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_MASK ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_MASK ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_MASK ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_MASK ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_MASK ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_MASK ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_MASK ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_MASK ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_MASK ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_MASK ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_MASK ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset - BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset - BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset - BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset - BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset - BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset - BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset - BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset - BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset - BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset - BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset - BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ) ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ) ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ) ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ) ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ) ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ) ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ) ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ) ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ) ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ) ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ) ;
int value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
int value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
int value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
int value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
int value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
int value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
int value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
int value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
int value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
int value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
int value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
double value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
double value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
double value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
double value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
double value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
double value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
double value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
double value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
double value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
double value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
double value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_END ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_END ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_END ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_END ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_END ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_END ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_END ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_END ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_END ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_END ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_END ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_2) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_0) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_4) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_24) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_00) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_16) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_3) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_0000) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_1) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_8) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_000000) ^ BYTE_000000_MASK ;
Long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
