compareNodePointers( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth0) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth2) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth0--0) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth2--2) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth0-1, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth2-1, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth1) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth0--0) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth2--0) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--0) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeFixing( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeFixing( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeFixing( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeAccordingly( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeAccordingly( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeAccordingly( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-0, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1-2, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeaugenzahl( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeaugenzahl( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeaugenzahl( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p0.parent , depth1-1, p0.parent , depth0--1) ;
compareNodePointers( p2.parent , depth1-1, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1,1, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1,1, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1,1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1,0, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1,0, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1,0, p1.parent , depth1--1) ;
compareNodeSlb( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeSlb( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeSlb( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth0-1) ;
compareNodePointers( p1.parent , depth1-1, p2.parent , depth2-1) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1-1) ;
compareNodePointers( p1.parent , depth0-1, p0.parent , depth0--0) ;
compareNodePointers( p1.parent , depth2-1, p2.parent , depth2--2) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth0-1, p0.parent , depth0) ;
compareNodePointers( p1.parent , depth2-1, p2.parent , depth2) ;
compareNodePointers( p1.parent , depth1-1, p1.parent , depth1) ;
compareNodePointers( p1.parent , depth1,0, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1,2, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1,1, p1.parent , depth1--1) ;
compareNodecountevent( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodecountevent( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodecountevent( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeaugenzahl( p1.parent , depth1-1, p0.parent , depth0--0) ;
compareNodeaugenzahl( p1.parent , depth1-1, p2.parent , depth2--2) ;
compareNodeaugenzahl( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeKnow( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeKnow( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeKnow( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeFixing( p1.parent , depth1-1, p0.parent , depth0--0) ;
compareNodeFixing( p1.parent , depth1-1, p2.parent , depth2--2) ;
compareNodeFixing( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeSaturation( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeSaturation( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeSaturation( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeAlpha( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeAlpha( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeAlpha( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeWARLOCK( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeWARLOCK( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeWARLOCK( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1+1, p0.parent , depth0--1) ;
compareNodePointers( p1.parent , depth1+1, p2.parent , depth2--1) ;
compareNodePointers( p1.parent , depth1+1, p1.parent , depth1--1) ;
compareNodehum( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodehum( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodehum( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeObjective( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeObjective( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeObjective( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeTP( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeTP( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeTP( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeSpans( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeSpans( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeSpans( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodeEnding( p1.parent , depth1-1, p0.parent , depth0--1) ;
compareNodeEnding( p1.parent , depth1-1, p2.parent , depth2--1) ;
compareNodeEnding( p1.parent , depth1-1, p1.parent , depth1--1) ;
compareNodePointers( p1.parent , depth1-1, p0.parent , depth1--0) ;
