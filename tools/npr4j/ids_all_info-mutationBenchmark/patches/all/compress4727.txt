if( ! originalName.equals( newName ) ) {
if( true && ! originalName.equals( newName ) ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'UTF8') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'archive is not a ZIP archive') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'failed to skip file name in') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'Found unsupported compression method ') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( "central directory is empty, can't expand") ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'License') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( ' corrupt archive.') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( ' local file header') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'AS IS') ) {
if( ! originalName.equals( newName ) && ! originalName.equals( 'r') ) {
if( ! originalName.equals( newName.toLowerCase( ) ) ) {
if( ! originalName.equalsIgnoreCase( newName ) ) {
if( ! originalName.equals( newName.trim( ) ) ) {
if( ! originalName.equals( newName.equals( newName ) ) {
if( ! originalName && ! originalName.equals( newName ) ) {
if( ! originalName.equals( newName.replaceAll( 'UTF8', 'UTF8') ) ) {
if( ! originalName.equals( newName.replaceAll( 'archive is not a ZIP archive', 'archive is not a ZIP archive') ) ) {
if( ! originalName.equals( newName.replaceAll( 'failed to skip file name in', 'failed to skip file name in') ) ) {
if( ! originalName.equals( newName.replaceAll( 'Found unsupported compression method ', 'Found unsupported compression method ') ) ) {
if( ! originalName.equals( newName.replaceAll( "central directory is empty, can't expand", "central directory is empty, can't expand") ) ) {
if( ! originalName.equals( newName.replaceAll( 'License', 'License') ) ) {
if( ! originalName.equals( newName.replaceAll( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html', 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') ) ) {
if( ! originalName.equals( newName.replaceAll( ' corrupt archive.', ' corrupt archive.') ) ) {
if( ! originalName.equals( newName.replaceAll( ' local file header', ' local file header') ) ) {
if( ! originalName.equals( newName.replaceAll( 'AS IS', 'AS IS') ) ) {
if( ! originalName.equals( newName.replaceAll( 'r', 'r') ) ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'UTF8') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'archive is not a ZIP archive') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'failed to skip file name in') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'Found unsupported compression method ') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( "central directory is empty, can't expand") ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'License') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( ' corrupt archive.') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( ' local file header') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'AS IS') ) {
if( ! originalName.equals( newName ) || ! originalName.equals( 'r') ) {
if( originalName != null && ! originalName.equals( newName ) ) {
if( ! ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'UTF8') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'archive is not a ZIP archive') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'failed to skip file name in') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'Found unsupported compression method ') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( "central directory is empty, can't expand") && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'License') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( ' corrupt archive.') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( ' local file header') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'AS IS') && ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'r') && ! originalName.equals( newName ) ) {
if( ! true && ! originalName.equals( newName ) ) {
if( ! originalName != null && ! originalName.equals( newName ) ) {
if( false && ! originalName.equals( newName ) ) {
if( ! originalName.equals( newName ) && ! originalName ) ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'UTF8') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'archive is not a ZIP archive') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'failed to skip file name in') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'Found unsupported compression method ') ) {
if( ! originalName.equals( newName ) && ! newName.equals( "central directory is empty, can't expand") ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'License') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') ) {
if( ! originalName.equals( newName ) && ! newName.equals( ' corrupt archive.') ) {
if( ! originalName.equals( newName ) && ! newName.equals( ' local file header') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'AS IS') ) {
if( ! originalName.equals( newName ) && ! newName.equals( 'r') ) {
if( ! originalName.equals( newName.equals( newName ) ) ) {
if( ! newName.equals( newName.equals( newName ) ) {
if( ! originalName.equals( newName.getName( ) ) ) {
if( !( ! originalName.equals( newName ) ) {
if( ! originalName.isEmpty( ) && ! originalName.equals( newName ) ) {
if( ! originalName.equalsIgnoreCase( originalName ) ) {
if( ! newName.equals( newName ) ) {
if( ! originalName.equals( 'UTF8') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'archive is not a ZIP archive') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'failed to skip file name in') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'Found unsupported compression method ') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( "central directory is empty, can't expand") || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'License') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( ' corrupt archive.') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( ' local file header') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'AS IS') || ! originalName.equals( newName ) ) {
if( ! originalName.equals( 'r') || ! originalName.equals( newName ) ) {
if( newName != null && ! originalName.equals( newName ) ) {
if( ! originalName.equals( newName.equalsIgnoreCase( newName ) ) ) {
if( true && originalName != null && ! originalName.equals( newName ) ) {
if( ! originalName.equals( newName ) && ! 'UTF8'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'archive is not a ZIP archive'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'failed to skip file name in'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'Found unsupported compression method '.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! "central directory is empty, can't expand".equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'License'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! ' corrupt archive.'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! ' local file header'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'AS IS'.equals( originalName ) ) {
if( ! originalName.equals( newName ) && ! 'r'.equals( originalName ) ) {
