int foundIndex =0;
int foundIndex = Integer.MAX_VALUE ;
int foundIndex = foundIndex ;
int foundIndex = Integer.MIN_VALUE ;
int foundIndex = int.valueOf(0) ;
int foundIndex = Integer.valueOf( found ) ;
int foundIndex = foundIndex +1;
int foundIndex =1;
int foundIndex =0.0;
int foundIndex = String.valueOf(0) ;
int foundIndex = foundIndex ) ;
int foundIndex = Double.valueOf( found ) ;
int foundIndex = foundIndex -1;
int foundIndex = Integer.parseInt( found ) ;
int foundIndex = new int [0] ;
int foundIndex = System.currentTimeMillis( ) ;
int foundIndex = -1;
int foundIndex =0;
int foundIndex =50;
int foundIndex =80;
int foundIndex =32;
int foundIndex =90;
int foundIndex =2;
int foundIndex =1;
int foundIndex = Double.valueOf(0) ;
int foundIndex = Math.min(0,0) ;
int foundIndex = int.valueOf( found ) ;
int foundIndex = Integer.valueOf(0) ;
int foundIndex =( int ) adventurer.size( ) ;
int foundIndex = new int [0] ;
int foundIndex = new int [50] ;
int foundIndex = new int [80] ;
int foundIndex = new int [32] ;
int foundIndex = new int [90] ;
int foundIndex = new int [2] ;
int foundIndex = new int [1] ;
int foundIndex = Math.min(1,0) ;
int foundIndex = Math.max(0) ;
int foundIndex = Double.MAX_VALUE ;
int foundIndex =( int ) adventurerIndex ;
int foundIndex =( int ) adventurerIndex +1;
int foundIndex = new int(0) ;
int foundIndex = System.getProperty( 'holes') ;
int foundIndex = System.getProperty( '+property+') ;
int foundIndex = System.getProperty( "' found, can't remove") ;
int foundIndex = System.getProperty( 'replace') ;
int foundIndex = System.getProperty( 'Properties=[') ;
int foundIndex = System.getProperty( ')') ;
int foundIndex = System.getProperty( '(') ;
int foundIndex = System.getProperty( ', ') ;
int foundIndex = System.getProperty( "No entry '") ;
int foundIndex = System.getProperty( 'unchecked') ;
int foundIndex = System.getProperty( ']') ;
int foundIndex = System.getProperty( '"+property+"') ;
int foundIndex = System.getProperty( "' found, can't replace") ;
int foundIndex = System.getProperty( ' found, can') ;
int foundIndex = Math.min(0,0) ;
int foundIndex = Math.min(0,50) ;
int foundIndex = Math.min(0,80) ;
int foundIndex = Math.min(0,32) ;
int foundIndex = Math.min(0,90) ;
int foundIndex = Math.min(0,2) ;
int foundIndex = Math.min(0,1) ;
int foundIndex = Math.min(1) ;
int foundIndex =( int )0;
int foundIndex = Math.min(1,1) ;
int foundIndex = Math.min(1,0) ;
int foundIndex = Math.min(1,50) ;
int foundIndex = Math.min(1,80) ;
int foundIndex = Math.min(1,32) ;
int foundIndex = Math.min(1,90) ;
int foundIndex = Math.min(1,2) ;
int foundIndex = Math.min(1,1) ;
int foundIndex = new int(0) ;
int foundIndex = new int(50) ;
int foundIndex = new int(80) ;
int foundIndex = new int(32) ;
int foundIndex = new int(90) ;
int foundIndex = new int(2) ;
int foundIndex = new int(1) ;
int foundIndex = Math.max(0,0) ;
int foundIndex = Math.min(0,1) ;
int foundIndex =0; foundIndex ;
int foundIndex = Integer.toString( found ) ;
int foundIndex = int.valueOf( c ) ;
int foundIndex = Math.round(1) ;
int foundIndex = Math.round(1.0) ;
foundIndex = foundIndex ;
int foundIndex = Math.min(0) ;
int foundIndex =0+1;
int foundIndex =0.foundIndex ;
int foundIndex = Math.min(0.0) ;
int foundIndex = String.valueOf(1) ;
int foundIndex = Math.round(0.0) ;
int foundIndex =( int ) adventurerIndex /0;
int foundIndex =( int ) adventurerIndex /50;
int foundIndex =( int ) adventurerIndex /80;
int foundIndex =( int ) adventurerIndex /32;
int foundIndex =( int ) adventurerIndex /90;
int foundIndex =( int ) adventurerIndex /2;
