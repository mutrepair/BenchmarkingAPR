tokens.add( arguments [ i ].substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -2) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ;
tokens.add( arguments [ i ].substring(0, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring( -1) ) ;
tokens.add( arguments [ i ].replace( '-D', '-D') ) ;
tokens.add( arguments [ i ].replace( 'License', 'License') ) ;
tokens.add( arguments [ i ].replace( '--', '--') ) ;
tokens.add( arguments [ i ].replace( '-', '-') ) ;
tokens.add( arguments [ i ].replace( 'AS IS', 'AS IS') ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(0, -1) ) ;
tokens.add( arguments [ i ].substring(1) ) ;
tokens.add( arguments [ i ].substring(0) ) ;
tokens.add( arguments [ i ].substring(2004) ) ;
tokens.add( arguments [ i ].substring(2) ) ;
tokens.add( arguments [ i ].substring(1999) ) ;
tokens.add( arguments [ i ].substring(2001) ) ;
tokens.add( arguments [ i ].substring(0, -0) ) ;
tokens.add( arguments [ i ].substring(0, -2004) ) ;
tokens.add( arguments [ i ].substring(0, -2) ) ;
tokens.add( arguments [ i ].substring(0, -1999) ) ;
tokens.add( arguments [ i ].substring(0, -2001) ) ;
tokens.add( arguments [ i ].substring( -0) +1) ;
tokens.add( arguments [ i ].substring( -2004) +1) ;
tokens.add( arguments [ i ].substring( -2) +1) ;
tokens.add( arguments [ i ].substring( -1999) +1) ;
tokens.add( arguments [ i ].substring( -2001) +1) ;
tokens.add( arguments [ i ].substring(0, arguments [ i ] ) ;
tokens.add( arguments [ i ].substring(1, -1) ) ;
tokens.add( arguments [ i ].substring( -0) -1) ;
tokens.add( arguments [ i ].substring( -2004) -1) ;
tokens.add( arguments [ i ].substring( -2) -1) ;
tokens.add( arguments [ i ].substring( -1999) -1) ;
tokens.add( arguments [ i ].substring( -2001) -1) ;
tokens.add( arguments [ i ].substring(0,0) ) ;
tokens.add( arguments [ i ].substring(0,2004) ) ;
tokens.add( arguments [ i ].substring(0,2) ) ;
tokens.add( arguments [ i ].substring(0,1999) ) ;
tokens.add( arguments [ i ].substring(0,2001) ) ;
tokens.add( arguments [ i ].substring( -0).substring( -0) ) ;
tokens.add( arguments [ i ].substring( -2004).substring( -2004) ) ;
tokens.add( arguments [ i ].substring( -2).substring( -2) ) ;
tokens.add( arguments [ i ].substring( -1999).substring( -1999) ) ;
tokens.add( arguments [ i ].substring( -2001).substring( -2001) ) ;
tokens.add( arguments [ i ].replaceAll( '-D', '-D') ) ;
tokens.add( arguments [ i ].replaceAll( 'License', 'License') ) ;
tokens.add( arguments [ i ].replaceAll( '--', '--') ) ;
tokens.add( arguments [ i ].replaceAll( '-', '-') ) ;
tokens.add( arguments [ i ].replaceAll( 'AS IS', 'AS IS') ) ;
tokens.add( arguments [ i ].substring(1, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring(0, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring(2004, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring(2, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring(1999, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring(2001, arguments [ i ] ) ) ;
tokens.add( arguments [ i ].substring( -0) ) ) ;
tokens.add( arguments [ i ].substring( -2004) ) ) ;
tokens.add( arguments [ i ].substring( -2) ) ) ;
tokens.add( arguments [ i ].substring( -1999) ) ) ;
tokens.add( arguments [ i ].substring( -2001) ) ) ;
tokens.add( arguments [ i ].substring( -0*0) ) ;
tokens.add( arguments [ i ].substring( -2004*2004) ) ;
tokens.add( arguments [ i ].substring( -2*2) ) ;
tokens.add( arguments [ i ].substring( -1999*1999) ) ;
tokens.add( arguments [ i ].substring( -2001*2001) ) ;
tokens.add( arguments [ i ].substring( -0) ;
tokens.add( arguments [ i ].substring( -2004) ;
tokens.add( arguments [ i ].substring( -2) ;
tokens.add( arguments [ i ].substring( -1999) ;
tokens.add( arguments [ i ].substring( -2001) ;
tokens.add( arguments [ i ].substring( ) ) ;
tokens.add( arguments [ i ].substring( -0) + '-D') ;
tokens.add( arguments [ i ].substring( -0) + 'License') ;
tokens.add( arguments [ i ].substring( -0) + '--') ;
tokens.add( arguments [ i ].substring( -0) + '-') ;
tokens.add( arguments [ i ].substring( -0) + 'AS IS') ;
tokens.add( arguments [ i ].substring( -2004) + '-D') ;
tokens.add( arguments [ i ].substring( -2004) + 'License') ;
tokens.add( arguments [ i ].substring( -2004) + '--') ;
tokens.add( arguments [ i ].substring( -2004) + '-') ;
tokens.add( arguments [ i ].substring( -2004) + 'AS IS') ;
tokens.add( arguments [ i ].substring( -2) + '-D') ;
tokens.add( arguments [ i ].substring( -2) + 'License') ;
tokens.add( arguments [ i ].substring( -2) + '--') ;
tokens.add( arguments [ i ].substring( -2) + '-') ;
tokens.add( arguments [ i ].substring( -2) + 'AS IS') ;
tokens.add( arguments [ i ].substring( -1999) + '-D') ;
tokens.add( arguments [ i ].substring( -1999) + 'License') ;
tokens.add( arguments [ i ].substring( -1999) + '--') ;
tokens.add( arguments [ i ].substring( -1999) + '-') ;
tokens.add( arguments [ i ].substring( -1999) + 'AS IS') ;
tokens.add( arguments [ i ].substring( -2001) + '-D') ;
tokens.add( arguments [ i ].substring( -2001) + 'License') ;
tokens.add( arguments [ i ].substring( -2001) + '--') ;
tokens.add( arguments [ i ].substring( -2001) + '-') ;
tokens.add( arguments [ i ].substring( -2001) + 'AS IS') ;
tokens.add( arguments [ i ].substring( -0-0) ) ;
