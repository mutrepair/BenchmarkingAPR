this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma , sigma ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1+( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma ) ;
this.3-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma ) ;
this.5-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma ) ;
this.2-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(0*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(3*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(5*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(2*Math.PI ) , mean , sigma ) ;
this.1-( sigma *FastMath.sqrt(1*Math.PI ) , mean , sigma ) ;
this(1-( sigma *FastMath.distance(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.distance(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.distance(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.distance(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.distance(1*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(0-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean ) ;
this(3-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean ) ;
this(5-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean ) ;
this(2-( sigma *FastMath.sqrt(2*Math.PI ) ) , mean ) ;
this(1-( sigma *FastMath.sqrt(1*Math.PI ) ) , mean ) ;
this.sigma -( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.sigma -( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this.0-(( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this.3-(( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this.5-(( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this.2-(( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this.1-(( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.pow(0*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.pow(3*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.pow(5*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.pow(2*Math.PI ) ) , mean , sigma ) ;
this(1-( sigma *FastMath.pow(1*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(2*Math.PI ) ) , mean , sigma ) ;
this(1-(( sigma *FastMath.sqrt(1*Math.PI ) ) , mean , sigma ) ;
this1-( sigma *FastMath.sqrt(0*Math.PI ) ) , mean , sigma ) ;
this1-( sigma *FastMath.sqrt(3*Math.PI ) ) , mean , sigma ) ;
this1-( sigma *FastMath.sqrt(5*Math.PI ) ) , mean , sigma ) ;
