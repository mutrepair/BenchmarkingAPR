final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , endRowRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE -1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , endRow + endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow -1) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , startRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ,1) ;
final int pEnd = FastMath.min(( iBlock -1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow , false ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE -1,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +36) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +3) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +48) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +100) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +2) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +4991895511313664478) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +52) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +0) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +64) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +2704) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +32) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +384) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +8) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +416) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +2496) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +21632) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +60) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +4) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , startRowRow ) ;
final int pEnd = FastMath.min(( iBlock +1) , BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , endRow , endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1, endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow , true ) ;
final int pEnd = FastMath.min((( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd =( int )(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , startRow + endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , i + endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ,0) ;
final int pEnd = FastMath.max(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , - endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) ) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( jBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow +1) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) + BLOCK_SIZE ,64+ endRow ) ;
