result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )((( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )((( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )((( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )((( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )((( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )((( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )((( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )((( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )((( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )((( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )((( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(((( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(((( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(((( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(((( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(((( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(((( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(((( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(((( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(((( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(((( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(((( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(((( value ^ BYTE_2_MASK ) >> BYTE_2_SHIFT ) ) ;
result [ BYTE_0] =( byte )(((( value ^ BYTE_0_MASK ) >> BYTE_0_SHIFT ) ) ;
result [ BYTE_4] =( byte )(((( value ^ BYTE_4_MASK ) >> BYTE_4_SHIFT ) ) ;
result [ BYTE_24] =( byte )(((( value ^ BYTE_24_MASK ) >> BYTE_24_SHIFT ) ) ;
result [ BYTE_00] =( byte )(((( value ^ BYTE_00_MASK ) >> BYTE_00_SHIFT ) ) ;
result [ BYTE_16] =( byte )(((( value ^ BYTE_16_MASK ) >> BYTE_16_SHIFT ) ) ;
result [ BYTE_3] =( byte )(((( value ^ BYTE_3_MASK ) >> BYTE_3_SHIFT ) ) ;
result [ BYTE_0000] =( byte )(((( value ^ BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ) ;
result [ BYTE_1] =( byte )(((( value ^ BYTE_1_MASK ) >> BYTE_1_SHIFT ) ) ;
result [ BYTE_8] =( byte )(((( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ) ;
result [ BYTE_000000] =( byte )(((( value ^ BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ) ;
result [ BYTE_2] =( byte )(((( value % BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(((( value % BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(((( value % BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(((( value % BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(((( value % BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(((( value % BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(((( value % BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(((( value % BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(((( value % BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(((( value % BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(((( value % BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_2] =( byte )(((( value + BYTE_2_MASK ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(((( value + BYTE_0_MASK ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(((( value + BYTE_4_MASK ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(((( value + BYTE_24_MASK ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(((( value + BYTE_00_MASK ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(((( value + BYTE_16_MASK ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(((( value + BYTE_3_MASK ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(((( value + BYTE_0000_MASK ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(((( value + BYTE_1_MASK ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(((( value + BYTE_8_MASK ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(((( value + BYTE_000000_MASK ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_POS ) >> BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_POS ) >> BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_POS ) >> BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_POS ) >> BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_POS ) >> BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_POS ) >> BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_POS ) >> BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_POS ) >> BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_POS ) >> BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_POS ) >> BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_POS ) >> BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) + BYTE_2_SHIFT ) ;
result [ BYTE_0] =( byte )(( value ^ BYTE_0_MASK ) + BYTE_0_SHIFT ) ;
result [ BYTE_4] =( byte )(( value ^ BYTE_4_MASK ) + BYTE_4_SHIFT ) ;
result [ BYTE_24] =( byte )(( value ^ BYTE_24_MASK ) + BYTE_24_SHIFT ) ;
result [ BYTE_00] =( byte )(( value ^ BYTE_00_MASK ) + BYTE_00_SHIFT ) ;
result [ BYTE_16] =( byte )(( value ^ BYTE_16_MASK ) + BYTE_16_SHIFT ) ;
result [ BYTE_3] =( byte )(( value ^ BYTE_3_MASK ) + BYTE_3_SHIFT ) ;
result [ BYTE_0000] =( byte )(( value ^ BYTE_0000_MASK ) + BYTE_0000_SHIFT ) ;
result [ BYTE_1] =( byte )(( value ^ BYTE_1_MASK ) + BYTE_1_SHIFT ) ;
result [ BYTE_8] =( byte )(( value ^ BYTE_8_MASK ) + BYTE_8_SHIFT ) ;
result [ BYTE_000000] =( byte )(( value ^ BYTE_000000_MASK ) + BYTE_000000_SHIFT ) ;
result [ BYTE_2] =( byte )(( value ^ BYTE_2_MASK ) >> BYTE_SIZE_SHIFT ) ;
