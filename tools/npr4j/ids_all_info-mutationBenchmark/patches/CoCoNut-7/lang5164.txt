return new ArrayList < String >( ) ;
 return( int ) Math.ceil( -2;
 return( int ) Math.ceil( -0;
 return( int ) Math.ceil( -4;
 return( int ) Math.ceil( -7;
 return( int ) Math.ceil( -16;
 return( int ) Math.ceil( -6;
 return( int ) Math.ceil( -3;
 return( int ) Math.ceil( -32;
 return( int ) Math.ceil( -13;
 return( int ) Math.ceil( -1;
 return( int ) Math.ceil( -64;
 return( int ) Math.ceil( -10;
 return( int ) Math.ceil( -9;
 return( int ) Math.ceil( -8;
 return( int ) Math.ceil( -15;
 return( int ) Math.ceil( -5;
 return( int ) Math.ceil( -2) ;
 return( int ) Math.ceil( -0) ;
 return( int ) Math.ceil( -4) ;
 return( int ) Math.ceil( -7) ;
 return( int ) Math.ceil( -16) ;
 return( int ) Math.ceil( -6) ;
 return( int ) Math.ceil( -3) ;
 return( int ) Math.ceil( -32) ;
 return( int ) Math.ceil( -13) ;
 return( int ) Math.ceil( -1) ;
 return( int ) Math.ceil( -64) ;
 return( int ) Math.ceil( -10) ;
 return( int ) Math.ceil( -9) ;
 return( int ) Math.ceil( -8) ;
 return( int ) Math.ceil( -15) ;
 return( int ) Math.ceil( -5) ;
return new ArrayList < String >( -2;
return new ArrayList < String >( -0;
return new ArrayList < String >( -4;
return new ArrayList < String >( -7;
return new ArrayList < String >( -16;
return new ArrayList < String >( -6;
return new ArrayList < String >( -3;
return new ArrayList < String >( -32;
return new ArrayList < String >( -13;
return new ArrayList < String >( -1;
return new ArrayList < String >( -64;
return new ArrayList < String >( -10;
return new ArrayList < String >( -9;
return new ArrayList < String >( -8;
return new ArrayList < String >( -15;
return new ArrayList < String >( -5;
return new ArrayList < Integer >( ) ;
 return( int ) Math.ceil( -1;
return new String [ ] { '(nBytes-1)*8+dstPos is greather or equal to than 64', '(nBytes-1)*8+dstPos is greather or equal to than 64'} ;
return new String [ ] { 'D', 'D'} ;
return new String [ ] { '(nHexs-1)*4+dstPos is greather or equal to than 8', '(nHexs-1)*4+dstPos is greather or equal to than 8'} ;
return new String [ ] { 'nBools-1+dstPos is greather or equal to than 8', 'nBools-1+dstPos is greather or equal to than 8'} ;
return new String [ ] { '(nShorts-1)*16+srcPos is greather or equal to than 32', '(nShorts-1)*16+srcPos is greather or equal to than 32'} ;
return new String [ ] { '(nHexs-1)*4+srcPos is greather or equal to than 64', '(nHexs-1)*4+srcPos is greather or equal to than 64'} ;
return new String [ ] { 'B', 'B'} ;
return new String [ ] { 'src.length>8: src.length=', 'src.length>8: src.length='} ;
return new String [ ] { '3', '3'} ;
return new String [ ] { 'A', 'A'} ;
return new String [ ] { '(nHexs-1)*4+dstPos is greather or equal to than 64', '(nHexs-1)*4+dstPos is greather or equal to than 64'} ;
return new String [ ] { "' as a hexadecimal digit", "' as a hexadecimal digit"} ;
return new String [ ] { '8', '8'} ;
return new String [ ] { '(nHexs-1)*4+srcPos is greather or equal to than 32', '(nHexs-1)*4+srcPos is greather or equal to than 32'} ;
return new String [ ] { '2', '2'} ;
return new String [ ] { 'License', 'License'} ;
return new String [ ] { 'F', 'F'} ;
return new String [ ] { '(nShorts-1)*16+dstPos is greather or equal to than 32', '(nShorts-1)*16+dstPos is greather or equal to than 32'} ;
return new String [ ] { 'nBools-1+srcPos is greather or equal to than 8', 'nBools-1+srcPos is greather or equal to than 8'} ;
return new String [ ] { '4', '4'} ;
return new String [ ] { 'e', 'e'} ;
return new String [ ] { 'nBools-1+dstPos is greather or equal to than 16', 'nBools-1+dstPos is greather or equal to than 16'} ;
return new String [ ] { '(nBytes-1)*8+srcPos is greather or equal to than 32', '(nBytes-1)*8+srcPos is greather or equal to than 32'} ;
return new String [ ] { ' and ', ' and '} ;
return new String [ ] { 'd', 'd'} ;
return new String [ ] { 'nBools-1+srcPos is greather or equal to than 64', 'nBools-1+srcPos is greather or equal to than 64'} ;
return new String [ ] { 'nBools-1+dstPos is greather or equal to than 64', 'nBools-1+dstPos is greather or equal to than 64'} ;
return new String [ ] { 'Cannot convert an empty array.', 'Cannot convert an empty array.'} ;
return new String [ ] { '(nShorts-1)*16+srcPos is greather or equal to than 64', '(nShorts-1)*16+srcPos is greather or equal to than 64'} ;
return new String [ ] { 'nBytes is greather than 16', 'nBytes is greather than 16'} ;
return new String [ ] { 'C', 'C'} ;
return new String [ ] { '(nBytes-1)*8+dstPos is greather or equal to than 16', '(nBytes-1)*8+dstPos is greather or equal to than 16'} ;
return new String [ ] { 'Be', 'Be'} ;
return new String [ ] { '(nHexs-1)*4+dstPos is greather or equal to than 32', '(nHexs-1)*4+dstPos is greather or equal to than 32'} ;
return new String [ ] { '(nHexs-1)*4+dstPos is greather or equal to than 16', '(nHexs-1)*4+dstPos is greather or equal to than 16'} ;
return new String [ ] { 'a', 'a'} ;
return new String [ ] { '(nHexs-1)*4+srcPos is greather or equal to than 8', '(nHexs-1)*4+srcPos is greather or equal to than 8'} ;
return new String [ ] { '7', '7'} ;
return new String [ ] { 'c', 'c'} ;
return new String [ ] { 'nBools-1+srcPos is greather or equal to than 16', 'nBools-1+srcPos is greather or equal to than 16'} ;
return new String [ ] { 'nBools-1+dstPos is greather or equal to than 32', 'nBools-1+dstPos is greather or equal to than 32'} ;
return new String [ ] { 'AS IS', 'AS IS'} ;
return new String [ ] { '(nBytes-1)*8+srcPos is greather or equal to than 64', '(nBytes-1)*8+srcPos is greather or equal to than 64'} ;
return new String [ ] { '6', '6'} ;
return new String [ ] { 'src.length-srcPos<4: src.length=', 'src.length-srcPos<4: src.length='} ;
return new String [ ] { 'Msb0', 'Msb0'} ;
return new String [ ] { 'nibble value not between 0 and 15: ', 'nibble value not between 0 and 15: '} ;
return new String [ ] { 'b', 'b'} ;
return new String [ ] { 'E', 'E'} ;
