final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE -1,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ) ;
final int pEnd = Math.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE -1,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd =( int ) Math.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow +1) ;
final int pEnd =( int )(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *100,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *36,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *3,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *60,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *48,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *2704,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *8,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *32,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *21632,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *2,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *4,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *2496,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *384,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *64,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *4991895511313664478,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *0,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *416,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *1,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE *52,1+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE +1+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,1, endRow ) ;
final int pEnd = Math.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , i + endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE ,0, endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,100+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,36+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,3+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,60+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,48+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,2704+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,8+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,32+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,21632+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,2+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,4+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,2496+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,384+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,64+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,4991895511313664478+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,0+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,416+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,1+ endRow ) ;
final int pEnd = formatMath.min(( iBlock +1) - BLOCK_SIZE ,52+ endRow ) ;
final int pEnd = FastMath.min(( iBlock +1) - BLOCK_SIZE , startRow ) ;
