sb.replace( ix , ix *1, 'XML safe') ;
sb.replace( ix , ix *1, '$') ;
sb.replace( ix , ix *1, 'deprecation') ;
sb.replace( ix , ix *1, 's just replace ') ;
sb.replace( ix , ix *1, '..') ;
sb.replace( ix , ix *2, 'XML safe') ;
sb.replace( ix , ix *2, '$') ;
sb.replace( ix , ix *2, 'deprecation') ;
sb.replace( ix , ix *2, 's just replace ') ;
sb.replace( ix , ix *2, '..') ;
sb.replace( ix , ix *1, 'XML safe') ;
sb.replace( ix , ix *1, '$') ;
sb.replace( ix , ix *1, 'deprecation') ;
sb.replace( ix , ix *1, 's just replace ') ;
sb.replace( ix , ix *1, '..') ;
sb.replace( ix , ix *0, 'XML safe') ;
sb.replace( ix , ix *0, '$') ;
sb.replace( ix , ix *0, 'deprecation') ;
sb.replace( ix , ix *0, 's just replace ') ;
sb.replace( ix , ix *0, '..') ;
sb.replace( ix , ix ) ;
sb.replaceAll( ix , ix *1, 'XML safe') ;
sb.replaceAll( ix , ix *1, '$') ;
sb.replaceAll( ix , ix *1, 'deprecation') ;
sb.replaceAll( ix , ix *1, 's just replace ') ;
sb.replaceAll( ix , ix *1, '..') ;
sb.replace( ix , ix *1, 'XML safe', 'XML safe') ;
sb.replace( ix , ix *1, '$', '$') ;
sb.replace( ix , ix *1, 'deprecation', 'deprecation') ;
sb.replace( ix , ix *1, 's just replace ', 's just replace ') ;
sb.replace( ix , ix *1, '..', '..') ;
sb.replace( ix , ix *1.0, 'XML safe') ;
sb.replace( ix , ix *1.0, '$') ;
sb.replace( ix , ix *1.0, 'deprecation') ;
sb.replace( ix , ix *1.0, 's just replace ') ;
sb.replace( ix , ix *1.0, '..') ;
sb.replace( ix , ix *1) ;
sb.replaceFirst( ix , ix *1, 'XML safe') ;
sb.replaceFirst( ix , ix *1, '$') ;
sb.replaceFirst( ix , ix *1, 'deprecation') ;
sb.replaceFirst( ix , ix *1, 's just replace ') ;
sb.replaceFirst( ix , ix *1, '..') ;
sb.replace( ix , ix *1, 'XML safe', false ) ;
sb.replace( ix , ix *1, '$', false ) ;
sb.replace( ix , ix *1, 'deprecation', false ) ;
sb.replace( ix , ix *1, 's just replace ', false ) ;
sb.replace( ix , ix *1, '..', false ) ;
sb.replace( ix , ix *0, 'XML safe') ;
sb.replace( ix , ix *0, '$') ;
sb.replace( ix , ix *0, 'deprecation') ;
sb.replace( ix , ix *0, 's just replace ') ;
sb.replace( ix , ix *0, '..') ;
sb.replace( ix , ix +1, 'XML safe') ;
sb.replace( ix , ix +1, '$') ;
sb.replace( ix , ix +1, 'deprecation') ;
sb.replace( ix , ix +1, 's just replace ') ;
sb.replace( ix , ix +1, '..') ;
sb.replaceAll( ix , ix *2, 'XML safe') ;
sb.replaceAll( ix , ix *2, '$') ;
sb.replaceAll( ix , ix *2, 'deprecation') ;
sb.replaceAll( ix , ix *2, 's just replace ') ;
sb.replaceAll( ix , ix *2, '..') ;
sb.replaceAll( ix , ix *1, 'XML safe') ;
sb.replaceAll( ix , ix *1, '$') ;
sb.replaceAll( ix , ix *1, 'deprecation') ;
sb.replaceAll( ix , ix *1, 's just replace ') ;
sb.replaceAll( ix , ix *1, '..') ;
sb.replaceAll( ix , ix *0, 'XML safe') ;
sb.replaceAll( ix , ix *0, '$') ;
sb.replaceAll( ix , ix *0, 'deprecation') ;
sb.replaceAll( ix , ix *0, 's just replace ') ;
sb.replaceAll( ix , ix *0, '..') ;
sb.replace( ix , ix *2, 'XML safe', 'XML safe') ;
sb.replace( ix , ix *2, '$', '$') ;
sb.replace( ix , ix *2, 'deprecation', 'deprecation') ;
sb.replace( ix , ix *2, 's just replace ', 's just replace ') ;
sb.replace( ix , ix *2, '..', '..') ;
sb.replace( ix , ix *1, 'XML safe', 'XML safe') ;
sb.replace( ix , ix *1, '$', '$') ;
sb.replace( ix , ix *1, 'deprecation', 'deprecation') ;
sb.replace( ix , ix *1, 's just replace ', 's just replace ') ;
sb.replace( ix , ix *1, '..', '..') ;
sb.replace( ix , ix *0, 'XML safe', 'XML safe') ;
sb.replace( ix , ix *0, '$', '$') ;
sb.replace( ix , ix *0, 'deprecation', 'deprecation') ;
sb.replace( ix , ix *0, 's just replace ', 's just replace ') ;
sb.replace( ix , ix *0, '..', '..') ;
sb.replace( ix , ix *1, 'XML safe', true ) ;
sb.replace( ix , ix *1, '$', true ) ;
sb.replace( ix , ix *1, 'deprecation', true ) ;
sb.replace( ix , ix *1, 's just replace ', true ) ;
sb.replace( ix , ix *1, '..', true ) ;
sb.put( ix , ix *1, 'XML safe') ;
sb.put( ix , ix *1, '$') ;
sb.put( ix , ix *1, 'deprecation') ;
sb.put( ix , ix *1, 's just replace ') ;
sb.put( ix , ix *1, '..') ;
sb.replace( ix , ix , ix *1, 'XML safe') ;
sb.replace( ix , ix , ix *1, '$') ;
sb.replace( ix , ix , ix *1, 'deprecation') ;
