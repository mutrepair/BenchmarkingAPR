shift = i %16+ dstPos ;
shift =( i %16) %2+ dstPos ;
shift =( i %16) %0+ dstPos ;
shift =( i %16) %4+ dstPos ;
shift =( i %16) %7+ dstPos ;
shift =( i %16) %16+ dstPos ;
shift =( i %16) %6+ dstPos ;
shift =( i %16) %3+ dstPos ;
shift =( i %16) %32+ dstPos ;
shift =( i %16) %64+ dstPos ;
shift =( i %16) %1+ dstPos ;
shift =( i %16) %10+ dstPos ;
shift =( i %16) %9+ dstPos ;
shift =( i %16) %8+ dstPos ;
shift =( i %16) %15+ dstPos ;
shift =( i %16) %5+ dstPos ;
shift =( i %16) %16+ dstPos ;
shift =( i %2) %2+ dstPos ;
shift =( i %0) %0+ dstPos ;
shift =( i %4) %4+ dstPos ;
shift =( i %7) %7+ dstPos ;
shift =( i %16) %16+ dstPos ;
shift =( i %6) %6+ dstPos ;
shift =( i %3) %3+ dstPos ;
shift =( i %32) %32+ dstPos ;
shift =( i %64) %64+ dstPos ;
shift =( i %1) %1+ dstPos ;
shift =( i %10) %10+ dstPos ;
shift =( i %9) %9+ dstPos ;
shift =( i %8) %8+ dstPos ;
shift =( i %15) %15+ dstPos ;
shift =( i %5) %5+ dstPos ;
shift =( i %16+ dstPos ) ;
shift =( i %2) %16+ dstPos ;
shift =( i %0) %16+ dstPos ;
shift =( i %4) %16+ dstPos ;
shift =( i %7) %16+ dstPos ;
shift =( i %16) %16+ dstPos ;
shift =( i %6) %16+ dstPos ;
shift =( i %3) %16+ dstPos ;
shift =( i %32) %16+ dstPos ;
shift =( i %64) %16+ dstPos ;
shift =( i %1) %16+ dstPos ;
shift =( i %10) %16+ dstPos ;
shift =( i %9) %16+ dstPos ;
shift =( i %8) %16+ dstPos ;
shift =( i %15) %16+ dstPos ;
shift =( i %5) %16+ dstPos ;
shift = i %2+ dstPos ;
shift = i %0+ dstPos ;
shift = i %4+ dstPos ;
shift = i %7+ dstPos ;
shift = i %16+ dstPos ;
shift = i %6+ dstPos ;
shift = i %3+ dstPos ;
shift = i %32+ dstPos ;
shift = i %64+ dstPos ;
shift = i %1+ dstPos ;
shift = i %10+ dstPos ;
shift = i %9+ dstPos ;
shift = i %8+ dstPos ;
shift = i %15+ dstPos ;
shift = i %5+ dstPos ;
shift = i %16+ dstPos +1;
shift =( int )( i %16+ dstPos ;
shift =( i %2+ dstPos ) ;
shift =( i %0+ dstPos ) ;
shift =( i %4+ dstPos ) ;
shift =( i %7+ dstPos ) ;
shift =( i %16+ dstPos ) ;
shift =( i %6+ dstPos ) ;
shift =( i %3+ dstPos ) ;
shift =( i %32+ dstPos ) ;
shift =( i %64+ dstPos ) ;
shift =( i %1+ dstPos ) ;
shift =( i %10+ dstPos ) ;
shift =( i %9+ dstPos ) ;
shift =( i %8+ dstPos ) ;
shift =( i %15+ dstPos ) ;
shift =( i %5+ dstPos ) ;
shift = i %16+ dstPos -1;
shift = Math.abs( i %16+ dstPos ;
shift =( i %8) %2+ dstPos ;
shift =( i %8) %0+ dstPos ;
shift =( i %8) %4+ dstPos ;
shift =( i %8) %7+ dstPos ;
shift =( i %8) %16+ dstPos ;
shift =( i %8) %6+ dstPos ;
shift =( i %8) %3+ dstPos ;
shift =( i %8) %32+ dstPos ;
shift =( i %8) %64+ dstPos ;
shift =( i %8) %1+ dstPos ;
shift =( i %8) %10+ dstPos ;
shift =( i %8) %9+ dstPos ;
shift =( i %8) %8+ dstPos ;
shift =( i %8) %15+ dstPos ;
shift =( i %8) %5+ dstPos ;
shift =( i %32) %2+ dstPos ;
shift =( i %32) %0+ dstPos ;
shift =( i %32) %4+ dstPos ;
