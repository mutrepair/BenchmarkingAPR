messageHasDesc = new ArrayList < >( ) ;
messageHasDesc = new HashSet < >( ) ;
messageHasDesc = new HashSet < >( false ) ;
messageHasDesc = true ;
messageHasDesc = new ArrayList < >( false ) ;
messageHasDesc = new HashMap < >( ) ;
messageHasDesc = new LinkedList < >( ) ;
messageHasDesc = new HashMap < >( false ) ;
messageHasDesc = new ArrayList < String >( ) ;
messageHasDesc = false ;
messageHasDesc = new ArrayList < >( true ) ;
messageHasDesc = new HashSet < String >( ) ;
messageHasDesc = new LinkedList < >( false ) ;
messageHasDesc = new HashSet < >( true ) ;
if( message != null ) messageHasDesc = false ;
messageHasDesc =( message != null ) ? false : false ;
messageHasDesc =( message == null ) ? false : false ;
messageHasDesc = new LinkedList < String >( ) ;
messageHasDesc = new HashMap < >( true ) ;
messageHasDesc = getCurrentHasDesc( ) ;
messageHasDesc = new LinkedList < >( true ) ;
messageHasDesc = new String( messageHasDesc ) ;
messageHasDesc =( message == null ) ? true : false ;
messageHasDesc =( message != null ) ? true : false ;
messageHasDesc = true.toLowerCase( ) ;
messageHasDesc = null ;
messageHasDesc = getNextHasDesc( ) ;
messageHasDesc =( message == null ) ? null : false ;
messageHasDesc = new TreeSet < >( ) ;
messageHasDesc = '} or {@code '.toLowerCase( ) ;
messageHasDesc = ' + '.toLowerCase( ) ;
messageHasDesc = 'License'.toLowerCase( ) ;
messageHasDesc = 'MSG_UNNAMED_\\d+'.toLowerCase( ) ;
messageHasDesc = 'goog'.toLowerCase( ) ;
messageHasDesc = 'someUserName'.toLowerCase( ) ;
messageHasDesc = 'Message'.toLowerCase( ) ;
messageHasDesc = ' '.toLowerCase( ) ;
messageHasDesc = '() function could be used only with MSG_* property or variable'.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_HAS_NO_DESCRIPTION'.toLowerCase( ) ;
messageHasDesc = 'Unrecognized message placeholder referenced: '.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_ORPHANED_NODE'.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_HAS_NO_VALUE'.toLowerCase( ) ;
messageHasDesc = 'Message value of {0} is just an empty string. '.toLowerCase( ) ;
messageHasDesc = 'Please use '.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_HAS_NO_TEXT'.toLowerCase( ) ;
messageHasDesc = 'Expected node type '.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_KEY_DUPLICATED'.toLowerCase( ) ;
messageHasDesc = 'Message {0} has no description. Add @desc JsDoc tag.'.toLowerCase( ) ;
messageHasDesc = 'name'.toLowerCase( ) ;
messageHasDesc = 's'.toLowerCase( ) ;
messageHasDesc = 'Cannot parse value of message '.toLowerCase( ) ;
messageHasDesc = 'standard'.toLowerCase( ) ;
messageHasDesc = '\0'.toLowerCase( ) ;
messageHasDesc = 'duplicate message variable name found for {0}, '.toLowerCase( ) ;
messageHasDesc = 'Message parse tree malformed. {0}'.toLowerCase( ) ;
messageHasDesc = 'STRING or ADD node expected; found: '.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_FALLBACK_ARG_ERROR'.toLowerCase( ) ;
messageHasDesc = 'A4_LETTER'.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_TREE_MALFORMED'.toLowerCase( ) ;
messageHasDesc = ' + type + '.toLowerCase( ) ;
messageHasDesc = 'Message string literal expected'.toLowerCase( ) ;
messageHasDesc = 'STRING, NAME, or ADD node expected; found: '.toLowerCase( ) ;
messageHasDesc = 'getMsg'.toLowerCase( ) ;
messageHasDesc = 'Some untrackable message'.toLowerCase( ) ;
messageHasDesc = 'getProductName'.toLowerCase( ) ;
messageHasDesc = 'str'.toLowerCase( ) ;
messageHasDesc = 'Placeholder incorrectly formatted in: '.toLowerCase( ) ;
messageHasDesc = '_'.toLowerCase( ) ;
messageHasDesc = 'START_SPAN_1_23'.toLowerCase( ) ;
messageHasDesc = 'message node {0} has no value'.toLowerCase( ) ;
messageHasDesc = 'goog.getMsg'.toLowerCase( ) ;
messageHasDesc = 'product'.toLowerCase( ) ;
messageHasDesc = 'NAME, LP, or BLOCK node expected; found: '.toLowerCase( ) ;
messageHasDesc = 'MSG_'.toLowerCase( ) ;
messageHasDesc = '@hidden'.toLowerCase( ) ;
messageHasDesc = 'OBJLIT node expected'.toLowerCase( ) ;
messageHasDesc = 'Placeholder name not in lowerCamelCase: '.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_NOT_INITIALIZED_USING_NEW_SYNTAX'.toLowerCase( ) ;
messageHasDesc = 'Hi {$userName}! Welcome to {$product}.'.toLowerCase( ) ;
messageHasDesc = 'Message initialized using unrecognized function. '.toLowerCase( ) ;
messageHasDesc = 'AS IS'.toLowerCase( ) ;
messageHasDesc = 'message not initialized using '.toLowerCase( ) ;
messageHasDesc = 'Could not find message entry for fallback argument {0}'.toLowerCase( ) ;
messageHasDesc = '; found: '.toLowerCase( ) ;
messageHasDesc = 'r'.toLowerCase( ) ;
messageHasDesc = 'http://code.google.com/p/closure-templates/'.toLowerCase( ) ;
messageHasDesc = '[a-z][a-zA-Z\\d]*[_\\d]*'.toLowerCase( ) ;
messageHasDesc = 'JSC_MSG_BAD_FALLBACK_SYNTAX'.toLowerCase( ) ;
messageHasDesc = 'Bad syntax. '.toLowerCase( ) ;
messageHasDesc = 'startSpan_1_23'.toLowerCase( ) ;
messageHasDesc = 'Expected syntax: goog.getMsgWithFallback(MSG_1, MSG_2)'.toLowerCase( ) ;
messageHasDesc = '_HELP'.toLowerCase( ) ;
messageHasDesc = 'NAME'.toLowerCase( ) ;
messageHasDesc = '() instead.'.toLowerCase( ) ;
messageHasDesc = 'initial definition {1}:{2}'.toLowerCase( ) ;
messageHasDesc = 'a4Letter'.toLowerCase( ) ;
messageHasDesc = '; found: null'.toLowerCase( ) ;
messageHasDesc = 'Unused message placeholder: '.toLowerCase( ) ;
messageHasDesc = 'Message must be initialized using '.toLowerCase( ) ;
messageHasDesc = 'RETURN node expected; found: '.toLowerCase( ) ;
