_mayBeLeaf = false ;
_mayBeLeaf = true ;
_mayBeLeaf = null ;
_mayBeLeaf = false ; / / false ;
_mayBeLeaf = null ; / / false ;
_mayBeLeaf = '';
_mayBeLeaf = '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+';
_mayBeLeaf = 'unwrapped';
_mayBeLeaf = ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary';
_mayBeLeaf = 'value';
_mayBeLeaf = 'getBinaryValue';
_mayBeLeaf = "'";
_mayBeLeaf = ')';
_mayBeLeaf = ' isExpectedArrayStart: OBJ->Array, wraps now: ';
_mayBeLeaf = 'JsonToken: ';
_mayBeLeaf = 'start object';
_mayBeLeaf = '+b64variant+';
_mayBeLeaf = '): ';
_mayBeLeaf = 'hack';
_mayBeLeaf = ' isExpectedArrayStart?: t=';
_mayBeLeaf = '+_parsingContext.getCurrentName()+';
_mayBeLeaf = 'nextToken()';
_mayBeLeaf = 'undo';
_mayBeLeaf = "JsonToken: VALUE_STRING '";
_mayBeLeaf = 'auto-wrapping';
_mayBeLeaf = ' (from ';
_mayBeLeaf = 'Failed to decode VALUE_STRING as base64 (';
_mayBeLeaf = 'Missing name, in state: ';
_mayBeLeaf = 'start array';
_mayBeLeaf = '"+_parsingContext.getCurrentName()+"';
_mayBeLeaf = '+_currToken+';
_mayBeLeaf = ' ';
_mayBeLeaf = '+_parsingContext.getTypeDesc()+';
_mayBeLeaf = ': expected close marker for ';
_mayBeLeaf = 'off-by-one';
_mayBeLeaf = 'Current token (';
_mayBeLeaf = 'resource';
_mayBeLeaf = '+getText()+';
_mayBeLeaf = '"+getText()+"';
_mayBeLeaf = "JsonToken: FIELD_NAME '";
_mayBeLeaf = true ; / / false ;
_mayBeLeaf = false == null ? null : false ;
_mayBeLeaf = new_( ) ;
_mayBeLeaf = false == null ? false : false ;
_mayBeLeaf = Boolean.valueOf( false ) ;
_mayBeLeaf = false != null ? false : false ;
_mayBeLeaf = getPointerToken( ) ;
_mayBeLeaf = id == null ? null : false ;
_mayBeLeaf = String.format( '', '') ;
_mayBeLeaf = String.format( '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+', '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+') ;
_mayBeLeaf = String.format( 'unwrapped', 'unwrapped') ;
_mayBeLeaf = String.format( ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary', ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary') ;
_mayBeLeaf = String.format( 'value', 'value') ;
_mayBeLeaf = String.format( 'getBinaryValue', 'getBinaryValue') ;
_mayBeLeaf = String.format( "'", "'") ;
_mayBeLeaf = String.format( ')', ')') ;
_mayBeLeaf = String.format( ' isExpectedArrayStart: OBJ->Array, wraps now: ', ' isExpectedArrayStart: OBJ->Array, wraps now: ') ;
_mayBeLeaf = String.format( 'JsonToken: ', 'JsonToken: ') ;
_mayBeLeaf = String.format( 'start object', 'start object') ;
_mayBeLeaf = String.format( '+b64variant+', '+b64variant+') ;
_mayBeLeaf = String.format( '): ', '): ') ;
_mayBeLeaf = String.format( 'hack', 'hack') ;
_mayBeLeaf = String.format( ' isExpectedArrayStart?: t=', ' isExpectedArrayStart?: t=') ;
_mayBeLeaf = String.format( '+_parsingContext.getCurrentName()+', '+_parsingContext.getCurrentName()+') ;
_mayBeLeaf = String.format( 'nextToken()', 'nextToken()') ;
_mayBeLeaf = String.format( 'undo', 'undo') ;
_mayBeLeaf = String.format( "JsonToken: VALUE_STRING '", "JsonToken: VALUE_STRING '") ;
_mayBeLeaf = String.format( 'auto-wrapping', 'auto-wrapping') ;
_mayBeLeaf = String.format( ' (from ', ' (from ') ;
_mayBeLeaf = String.format( 'Failed to decode VALUE_STRING as base64 (', 'Failed to decode VALUE_STRING as base64 (') ;
_mayBeLeaf = String.format( 'Missing name, in state: ', 'Missing name, in state: ') ;
_mayBeLeaf = String.format( 'start array', 'start array') ;
_mayBeLeaf = String.format( '"+_parsingContext.getCurrentName()+"', '"+_parsingContext.getCurrentName()+"') ;
_mayBeLeaf = String.format( '+_currToken+', '+_currToken+') ;
_mayBeLeaf = String.format( ' ', ' ') ;
_mayBeLeaf = String.format( '+_parsingContext.getTypeDesc()+', '+_parsingContext.getTypeDesc()+') ;
_mayBeLeaf = String.format( ': expected close marker for ', ': expected close marker for ') ;
_mayBeLeaf = String.format( 'off-by-one', 'off-by-one') ;
_mayBeLeaf = String.format( 'Current token (', 'Current token (') ;
_mayBeLeaf = String.format( 'resource', 'resource') ;
_mayBeLeaf = String.format( '+getText()+', '+getText()+') ;
_mayBeLeaf = String.format( '"+getText()+"', '"+getText()+"') ;
_mayBeLeaf = String.format( "JsonToken: FIELD_NAME '", "JsonToken: FIELD_NAME '") ;
_mayBeLeaf = true == null ? null : false ;
_mayBeLeaf = false.trim( ) ;
_mayBeLeaf = true.trim( ) ;
_mayBeLeaf = true == null ? false : false ;
_mayBeLeaf = String.valueOf( false ) ;
_mayBeLeaf = false ; / / true ;
_mayBeLeaf = new String( '') ;
_mayBeLeaf = new String( '+_parsingContext.getStartLocation(_ioContext.getSourceReference())+') ;
_mayBeLeaf = new String( 'unwrapped') ;
_mayBeLeaf = new String( ') not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary') ;
_mayBeLeaf = new String( 'value') ;
_mayBeLeaf = new String( 'getBinaryValue') ;
_mayBeLeaf = new String( "'") ;
_mayBeLeaf = new String( ')') ;
_mayBeLeaf = new String( ' isExpectedArrayStart: OBJ->Array, wraps now: ') ;
_mayBeLeaf = new String( 'JsonToken: ') ;
_mayBeLeaf = new String( 'start object') ;
