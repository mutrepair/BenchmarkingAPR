matches = string.charAt( index +1) == c ;
matches = string.charAt( index -1) == c ;
matches = string.charAt( index + -1) == c ;
matches = string.charAt( index +1) == c.length ;
matches = string.charAt( index ) == c ;
matches = string.charAt( index +2) == c ;
matches = string.charAt( index +0) == c ;
matches = string.charAt( index +1990) == c ;
matches = string.charAt( index +4) == c ;
matches = string.charAt( index +3) == c ;
matches = string.charAt( index +1997) == c ;
matches = string.charAt( index +1) == c ;
matches = string.charAt( index +40) == c ;
matches = string.charAt( index +10) == c ;
matches = string.charAt( index +39) == c ;
matches = string.charAt( index +96) == c ;
matches = string.charAt( index +0) == c ;
matches = string.charAt( index +1) <= c ;
matches = string.charAt( index +1) == c -1;
matches = string.charAt( index +1) ;
matches += string.charAt( index +1) == c ;
matches = string.charAt( index +1) == c +1;
matches = string.charAt( index +1) >= c ;
matches = string.charAt( index +1) != c ;
matches = string.charAt( index +1) == c && index ;
matches = string.charAt( index +1) % c ;
matches = string.charAt( index +1) == c ) ;
matches = string.charAt( index +1) < c ;
matches = string.charAt( index +1) == c || index ;
matches = string.charAt( index + index ) == c ;
matches = string.charAt( index ) == c.length ;
matches = string.charAt( index -1) == c.length ;
matches = string.charAt( index +1-1) == c ;
matches = string.charAt( index +1) > c ;
matches = string.charAt( index +1).trim( ) ;
matches = string.charAt( index +1) == c -2;
matches = string.charAt( index +1) == c -0;
matches = string.charAt( index +1) == c -1990;
matches = string.charAt( index +1) == c -4;
matches = string.charAt( index +1) == c -3;
matches = string.charAt( index +1) == c -1997;
matches = string.charAt( index +1) == c -1;
matches = string.charAt( index +1) == c -40;
matches = string.charAt( index +1) == c -10;
matches = string.charAt( index +1) == c -39;
matches = string.charAt( index +1) == c -96;
matches = string.charAt( index ++ -1) == c ;
matches = string.charAt( index +1) <= c.length ;
matches = string.charAt( index +1) == c.index ;
matches = string.charAt( index +1) + '';
matches = string.charAt( index +1) + 'D';
matches = string.charAt( index +1) + 'SH';
matches = string.charAt( index +1) + 'U';
matches = string.charAt( index +1) + 'X';
matches = string.charAt( index +1) + 'TCH';
matches = string.charAt( index +1) + 'G';
matches = string.charAt( index +1) + 'S';
matches = string.charAt( index +1) + 'B';
matches = string.charAt( index +1) + 'A';
matches = string.charAt( index +1) + 'CIA';
matches = string.charAt( index +1) + 'J';
matches = string.charAt( index +1) + ')) { // ';
matches = string.charAt( index +1) + 'http://search.cpan.org/~mschwern/Text-Metaphone-1.96/Metaphone.pm';
matches = string.charAt( index +1) + 'GNED';
matches = string.charAt( index +1) + 'L';
matches = string.charAt( index +1) + 'License';
matches = string.charAt( index +1) + 'R';
matches = string.charAt( index +1) + 'W';
matches = string.charAt( index +1) + 'F';
matches = string.charAt( index +1) + 'V';
matches = string.charAt( index +1) + 'TIA';
matches = string.charAt( index +1) + ' : case ';
matches = string.charAt( index +1) + 'AEIOU';
matches = string.charAt( index +1) + 'T';
matches = string.charAt( index +1) + 'Q';
matches = string.charAt( index +1) + 'C';
matches = string.charAt( index +1) + 'SIA';
matches = string.charAt( index +1) + 'GN';
matches = string.charAt( index +1) + 'I';
matches = string.charAt( index +1) + 'P';
matches = string.charAt( index +1) + 'AS IS';
matches = string.charAt( index +1) + 'SIO';
matches = string.charAt( index +1) + 'EIY';
matches = string.charAt( index +1) + 'TIO';
matches = string.charAt( index +1) + 'N';
matches = string.charAt( index +1) + 'K';
matches = string.charAt( index +1) + 'H';
matches = string.charAt( index +1) + 'E';
matches = string.charAt( index +1) + 'CSPTG';
matches = string.charAt( index +1) + 'TH';
matches = string.charAt( index +1) + '0';
matches = string.charAt( index +1) + 'Z';
matches = string.charAt( index +1) + 'Y';
matches = string.charAt( index +1) + 'M';
matches = string.charAt( index +1) + 'Parameter supplied to Metaphone encode is not of type java.lang.String';
matches = string.charAt( index +1) + 'O';
matches = string.charAt( index +1) + '); code.append(';
matches = string.charAt( index +1) == c +2;
matches = string.charAt( index +1) == c +0;
matches = string.charAt( index +1) == c +1990;
