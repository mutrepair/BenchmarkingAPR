long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_POS ;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_POS ;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_POS ;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_POS ;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_POS ;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_POS ;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_POS ;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_POS ;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_POS ;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_POS ;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_POS ;
long value =( bytes [ offset - BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value =( bytes [ offset - BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value =( bytes [ offset - BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value =( bytes [ offset - BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value =( bytes [ offset - BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value =( bytes [ offset - BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value =( bytes [ offset - BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value =( bytes [ offset - BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value =( bytes [ offset - BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value =( bytes [ offset - BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value =( bytes [ offset - BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset - BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_POS ;
long value =( bytes [ offset - BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_POS ;
long value =( bytes [ offset - BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_POS ;
long value =( bytes [ offset - BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_POS ;
long value =( bytes [ offset - BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_POS ;
long value =( bytes [ offset - BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_POS ;
long value =( bytes [ offset - BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_POS ;
long value =( bytes [ offset - BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_POS ;
long value =( bytes [ offset - BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_POS ;
long value =( bytes [ offset - BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_POS ;
long value =( bytes [ offset - BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_POS ;
long value = bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_POS ;
long value = bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_POS ;
long value = bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_POS ;
long value = bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_POS ;
long value = bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_POS ;
long value = bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_POS ;
long value = bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_POS ;
long value = bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_POS ;
long value = bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_POS ;
long value = bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_POS ;
long value = bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_POS ;
long value = bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
long value = bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK ;
long value = bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK ;
long value = bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK ;
long value = bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK ;
long value = bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK ;
long value = bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK ;
long value = bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK ;
long value = bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK ;
long value = bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK ;
long value = bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK ;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_POS -1;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_POS -1;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_POS -1;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_POS -1;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_POS -1;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_POS -1;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_POS -1;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_POS -1;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_POS -1;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_POS -1;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_POS -1;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_POS -2;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_POS -0;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_POS -4;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_POS -24;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_POS -00;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_POS -16;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_POS -3;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_POS -0000;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_POS -1;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_POS -8;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_POS -000000;
long value =( bytes [ offset + BYTE_2] << BYTE_2_SHIFT ) ^ BYTE_2_MASK -1;
long value =( bytes [ offset + BYTE_0] << BYTE_0_SHIFT ) ^ BYTE_0_MASK -1;
long value =( bytes [ offset + BYTE_4] << BYTE_4_SHIFT ) ^ BYTE_4_MASK -1;
long value =( bytes [ offset + BYTE_24] << BYTE_24_SHIFT ) ^ BYTE_24_MASK -1;
long value =( bytes [ offset + BYTE_00] << BYTE_00_SHIFT ) ^ BYTE_00_MASK -1;
long value =( bytes [ offset + BYTE_16] << BYTE_16_SHIFT ) ^ BYTE_16_MASK -1;
long value =( bytes [ offset + BYTE_3] << BYTE_3_SHIFT ) ^ BYTE_3_MASK -1;
long value =( bytes [ offset + BYTE_0000] << BYTE_0000_SHIFT ) ^ BYTE_0000_MASK -1;
long value =( bytes [ offset + BYTE_1] << BYTE_1_SHIFT ) ^ BYTE_1_MASK -1;
long value =( bytes [ offset + BYTE_8] << BYTE_8_SHIFT ) ^ BYTE_8_MASK -1;
long value =( bytes [ offset + BYTE_000000] << BYTE_000000_SHIFT ) ^ BYTE_000000_MASK -1;
long value =( bytes [ offset + BYTE_2] >> BYTE_2_SHIFT ) ^ BYTE_2_MASK ;
