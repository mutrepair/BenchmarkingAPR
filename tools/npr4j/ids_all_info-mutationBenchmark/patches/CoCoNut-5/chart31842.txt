return true ;
return new ArrayList < >( true ) ;
return this.isEmpty( ) ;
return this.isEmpty( ) ? true : true ;
return false ;
return this.isEmpty( ) ? false : true ;
return this.isEmpty( ) ? null : true ;
return this.isEmpty( ) ? true : false ;
return isEmpty( ) ? true : true ;
return new ArrayList < >( ) ;
return new ArrayList < String >( true ) ;
return super.isEmpty( ) ? true : true ;
return ! this.isEmpty( ) ;
return new HashSet < >( true ) ;
return this.isEmpty( ) ? false : false ;
return ! this.isEmpty( ) ) return true ;
return isEmpty( ) ? null : true ;
return isEmpty( ) ? false : true ;
return this.toString( ).trim( ) ;
throw new IllegalArgumentException( 'auto-select') ;
throw new IllegalArgumentException( 'base') ;
throw new IllegalArgumentException( '') ;
throw new IllegalArgumentException( '0') ;
throw new IllegalArgumentException( 'value') ;
throw new IllegalArgumentException( '0.#') ;
throw new IllegalArgumentException( '123') ;
throw new IllegalArgumentException( "Null 'unit' argument.") ;
throw new IllegalArgumentException( 'unit') ;
throw new IllegalArgumentException( "Requires 'value' > 0.0.") ;
throw new IllegalArgumentException( 'standard') ;
throw new IllegalArgumentException( 'private') ;
throw new IllegalArgumentException( "Requires 'base' > 1.0.") ;
return super.isEmpty( ) ;
return !( this.isEmpty( ) ) ;
return super.isEmpty( ) ? false : true ;
return this.isEmpty( ) ?0: true ;
return isEmpty( ) ? true : false ;
return this.isEmpty( ) ? null : false ;
return this.isNotEmpty( ) ;
return new ArrayList < >( false ) ;
throw new IllegalStateException( this ) ;
return super.isEmpty( ) ? true : false ;
throw new IllegalStateException( 'auto-select') ;
throw new IllegalStateException( 'base') ;
throw new IllegalStateException( '') ;
throw new IllegalStateException( '0') ;
throw new IllegalStateException( 'value') ;
throw new IllegalStateException( '0.#') ;
throw new IllegalStateException( '123') ;
throw new IllegalStateException( "Null 'unit' argument.") ;
throw new IllegalStateException( 'unit') ;
throw new IllegalStateException( "Requires 'value' > 0.0.") ;
throw new IllegalStateException( 'standard') ;
throw new IllegalStateException( 'private') ;
throw new IllegalStateException( "Requires 'base' > 1.0.") ;
return isNotEmpty( ) ? true : true ;
return this.isEmpty( ) ? 'auto-select': true ;
return this.isEmpty( ) ? 'base': true ;
return this.isEmpty( ) ? '': true ;
return this.isEmpty( ) ? '0': true ;
return this.isEmpty( ) ? 'value': true ;
return this.isEmpty( ) ? '0.#': true ;
return this.isEmpty( ) ? '123': true ;
return this.isEmpty( ) ? "Null 'unit' argument.": true ;
return this.isEmpty( ) ? 'unit': true ;
return this.isEmpty( ) ? "Requires 'value' > 0.0.": true ;
return this.isEmpty( ) ? 'standard': true ;
return this.isEmpty( ) ? 'private': true ;
return this.isEmpty( ) ? "Requires 'base' > 1.0.": true ;
return super.isEmpty( ) ? null : true ;
return this.isEmpty( ) ) return true ;
return isEmpty( ) ? false : false ;
return this.getValue( ) ;
throw new IllegalArgumentException( this ) ;
return isEmpty( ) ? null : false ;
return ! e.isEmpty( ) ) return true ;
return super.isEmpty( ) ? false : false ;
return this.toString( ) ;
return this.getValue( ).get( ) ;
return isNotEmpty( ) ? false : true ;
return this.isEmpty( ) ?0: false ;
return this.this.isEmpty( ) ;
return isNotEmpty( ) ? true : false ;
return this.getType( ).get( ) ;
return isEmpty( ) ?0: true ;
return ! this.isEmpty( ) ) return false ;
throw new IllegalArgumentException( e ) ;
return this.isEmpty( ) ? 'auto-select': false ;
return this.isEmpty( ) ? 'base': false ;
return this.isEmpty( ) ? '': false ;
return this.isEmpty( ) ? '0': false ;
return this.isEmpty( ) ? 'value': false ;
return this.isEmpty( ) ? '0.#': false ;
return this.isEmpty( ) ? '123': false ;
return this.isEmpty( ) ? "Null 'unit' argument.": false ;
return this.isEmpty( ) ? 'unit': false ;
return this.isEmpty( ) ? "Requires 'value' > 0.0.": false ;
return this.isEmpty( ) ? 'standard': false ;
return this.isEmpty( ) ? 'private': false ;
return this.isEmpty( ) ? "Requires 'base' > 1.0.": false ;
