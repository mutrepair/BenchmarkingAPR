return buildSnake( vUp [ i - delta ] , k % start1- start2, end2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end1, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end1, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end2, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end0, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end4, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start2- start2, end1, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start0- start0, end1, end0) ;
return buildSnake( vUp [ i - delta ] , k % start4- start4, end1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start2- start2, end2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start0- start0, end0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start4- start4, end4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end4, end4) ;
return buildSnake( vUp [ j - delta ] , k % start1- start2, end1, end2) ;
return buildSnake( vUp [ j - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ j - delta ] , k % start1- start0, end1, end0) ;
return buildSnake( vUp [ j - delta ] , k % start1- start4, end1, end4) ;
return buildSnake( vUp [ j - delta ] , k % start1- start2, end2, end2) ;
return buildSnake( vUp [ j - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ j - delta ] , k % start1- start0, end0, end0) ;
return buildSnake( vUp [ j - delta ] , k % start1- start4, end4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, start1, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, start1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, start1, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, start1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start2- start2, end2, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start0- start0, end0, end1) ;
return buildSnake( vUp [ i - delta ] , k % start4- start4, end4, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end2, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end0, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end4, end8) ;
return buildSnake( vUp [ i - delta ] , k % start2- start2, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start0- start0, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start4- start4, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end1, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end1, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end1, end8) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, start2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, start1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, start0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, start4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end1, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end1, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start2, end0, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end0, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start0, end0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start4, end0, end4) ;
return buildSnake( vUp [ k - delta ] , k % start1- start2, end1, end2) ;
return buildSnake( vUp [ k - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ k - delta ] , k % start1- start0, end1, end0) ;
return buildSnake( vUp [ k - delta ] , k % start1- start4, end1, end4) ;
return buildSnake( vUp [ k - delta ] , k % start1- start2, end2, end2) ;
return buildSnake( vUp [ k - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ k - delta ] , k % start1- start0, end0, end0) ;
return buildSnake( vUp [ k - delta ] , k % start1- start4, end4, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end2, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end0, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start1, end4, end1) ;
return buildSnake( vUp [ i ] , k % start1- start2, end1, end2) ;
return buildSnake( vUp [ i ] , k % start1- start1, end1, end1) ;
return buildSnake( vUp [ i ] , k % start1- start0, end1, end0) ;
return buildSnake( vUp [ i ] , k % start1- start4, end1, end4) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end2, end2) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end1, end1) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end0, end0) ;
return buildSnake( vUp [ i - delta ] , k % start1- start8, end4, end4) ;
