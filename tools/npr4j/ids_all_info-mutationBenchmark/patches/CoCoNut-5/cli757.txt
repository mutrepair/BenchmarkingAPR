optionalArg = true ;
optionalArg = false ;
optionalArg = new optionalArg( ) ;
optionalArg = new ArrayList < >( ) ;
optionalArg = 'http://c2.com/cgi-bin/wiki?BuilderPattern';
optionalArg = 'License';
optionalArg = 'D';
optionalArg = ':';
optionalArg = '=';
optionalArg = 'AS IS';
optionalArg = '<code>=</code>';
optionalArg = 'must specify longopt';
optionalArg = 'arg';
optionalArg = null ;
optionalArg = new ArrayList < >( true ;
optionalArg = new HashSet < >( ) ;
optionalArg = new HashSet < >( true ;
optionalArg = new HashMap < >( ) ;
optionalArg = String.format( 'http://c2.com/cgi-bin/wiki?BuilderPattern', 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = String.format( 'License', 'License') ;
optionalArg = String.format( 'D', 'D') ;
optionalArg = String.format( ':', ':') ;
optionalArg = String.format( '=', '=') ;
optionalArg = String.format( 'AS IS', 'AS IS') ;
optionalArg = String.format( '<code>=</code>', '<code>=</code>') ;
optionalArg = String.format( 'must specify longopt', 'must specify longopt') ;
optionalArg = String.format( 'arg', 'arg') ;
optionalArg = new HashList < >( ) ;
optionalArg = System.out.println( 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = System.out.println( 'License') ;
optionalArg = System.out.println( 'D') ;
optionalArg = System.out.println( ':') ;
optionalArg = System.out.println( '=') ;
optionalArg = System.out.println( 'AS IS') ;
optionalArg = System.out.println( '<code>=</code>') ;
optionalArg = System.out.println( 'must specify longopt') ;
optionalArg = System.out.println( 'arg') ;
optionalArg = new LinkedList < >( ) ;
optionalArg = e.getMessage( ) ;
optionalArg = new optional( ) ;
optionalArg = new HashMap < >( true ;
optionalArg = new BigDecimal( ) ;
optionalArg =( int )( ) ;
optionalArg = e.getProperty( 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = e.getProperty( 'License') ;
optionalArg = e.getProperty( 'D') ;
optionalArg = e.getProperty( ':') ;
optionalArg = e.getProperty( '=') ;
optionalArg = e.getProperty( 'AS IS') ;
optionalArg = e.getProperty( '<code>=</code>') ;
optionalArg = e.getProperty( 'must specify longopt') ;
optionalArg = e.getProperty( 'arg') ;
optionalArg = new optionalArg( true ) ;
optionalArg = new ArrayList < >( false ;
optionalArg = Utils.isEmpty( ) ;
optionalArg.put( 'http://c2.com/cgi-bin/wiki?BuilderPattern', 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg.put( 'License', 'License') ;
optionalArg.put( 'D', 'D') ;
optionalArg.put( ':', ':') ;
optionalArg.put( '=', '=') ;
optionalArg.put( 'AS IS', 'AS IS') ;
optionalArg.put( '<code>=</code>', '<code>=</code>') ;
optionalArg.put( 'must specify longopt', 'must specify longopt') ;
optionalArg.put( 'arg', 'arg') ;
optionalArg = new ArrayList( ) ;
optionalArg = new HashList < >( true ;
optionalArg = isEmpty( ) ;
optionalArg = new BigDecimal( true ) ;
optionalArg = new optionalArg( false ) ;
optionalArg = String.format( 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = String.format( 'License') ;
optionalArg = String.format( 'D') ;
optionalArg = String.format( ':') ;
optionalArg = String.format( '=') ;
optionalArg = String.format( 'AS IS') ;
optionalArg = String.format( '<code>=</code>') ;
optionalArg = String.format( 'must specify longopt') ;
optionalArg = String.format( 'arg') ;
optionalArg = new ArrayMap < >( true ;
optionalArg = new String( 'http://c2.com/cgi-bin/wiki?BuilderPattern', 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = new String( 'License', 'License') ;
optionalArg = new String( 'D', 'D') ;
optionalArg = new String( ':', ':') ;
optionalArg = new String( '=', '=') ;
optionalArg = new String( 'AS IS', 'AS IS') ;
optionalArg = new String( '<code>=</code>', '<code>=</code>') ;
optionalArg = new String( 'must specify longopt', 'must specify longopt') ;
optionalArg = new String( 'arg', 'arg') ;
optionalArg = new ArraySet < >( true ;
optionalArg = optionalArg.get( ) ;
optionalArg = isNotEmpty( ) ;
optionalArg = 'http://c2.com/cgi-bin/wiki?BuilderPattern'.equals( 'http://c2.com/cgi-bin/wiki?BuilderPattern') ;
optionalArg = 'License'.equals( 'License') ;
optionalArg = 'D'.equals( 'D') ;
optionalArg = ':'.equals( ':') ;
optionalArg = '='.equals( '=') ;
optionalArg = 'AS IS'.equals( 'AS IS') ;
optionalArg = '<code>=</code>'.equals( '<code>=</code>') ;
optionalArg = 'must specify longopt'.equals( 'must specify longopt') ;
optionalArg = 'arg'.equals( 'arg') ;
